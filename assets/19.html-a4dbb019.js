import{ab as n,G as s,H as a,ac as t}from"./framework-09305b5d.js";const e={},p=t(`<h1 id="_34-flex布局" tabindex="-1"><a class="header-anchor" href="#_34-flex布局" aria-hidden="true">#</a> 34.flex布局</h1><h2 id="_34-1-flex布局体验" tabindex="-1"><a class="header-anchor" href="#_34-1-flex布局体验" aria-hidden="true">#</a> 34.1 flex布局体验</h2><h3 id="_34-1-1-传统布局与flex布局" tabindex="-1"><a class="header-anchor" href="#_34-1-1-传统布局与flex布局" aria-hidden="true">#</a> 34.1.1 传统布局与flex布局</h3><p>【传统布局】</p><ul><li><p>兼容性好</p></li><li><p>布局繁琐</p></li><li><p>局限性，不能在移动端很好的布局</p></li></ul><p>【flex布局】</p><ul><li>操作方便，布局极为简单，移动端应用很广泛</li><li>PC 端浏览器支持情况较差</li><li>IE11 或更低版本不支持或仅部分支持</li></ul><p>建议：</p><ol><li>如果是 PC 端页面布局，我们还是建议使用传统布局</li><li>如果是移动端或者不考虑兼容性问题的 PC 端页面布局，推荐使用 flex 弹性布局</li></ol><h3 id="_34-1-2-初体验" tabindex="-1"><a class="header-anchor" href="#_34-1-2-初体验" aria-hidden="true">#</a> 34.1.2 初体验</h3><p><strong>弹性盒</strong></p><p><code>flex</code>（弹性盒、伸缩盒）</p><ul><li><p>是<code>css</code>中的又一种布局手段，它主要用来代替浮动来完成页面的布局</p></li><li><p><code>flex</code>可以使元素具有弹性，让元素可以跟随页面的大小的改变而改变</p></li></ul><p><strong>弹性容器</strong></p><p>要使用弹性盒，必须先将一个元素设置为弹性容器</p><p>我们通过<code>display</code> 来设置弹性容器</p><ul><li><p><code>display:flex</code> 设置为块级弹性容器</p></li><li><p><code>display:inline-flex</code> 设置为行内的弹性容器</p></li></ul><p><strong>弹性元素</strong></p><ul><li><p>弹性容器的子元素是弹性元素（弹性项）</p></li><li><p>弹性元素可以同时是弹性容器</p></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token comment">/* 弹性布局中：行内盒子的宽高可直接设置了，这也是优于百分比布局的地方之一 */</span>
            <span class="token comment">/* 免去了浮动的设置，以及对父盒子清除浮动的麻烦 */</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
            <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/35b96b04d3f1a95d5f84db0144a8ed972463d672.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>等间距分布</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/6d70e5725dcb049a630bd6fbe386fda63e9c53b4.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>平均分为三等分</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token comment">/* 弹性布局中：行内盒子的宽高可直接设置了 */</span>
            <span class="token comment">/* width: 150px; */</span>
            <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d7a57c689b9692c5dccc4131f7c9e105ca63ef0f.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_34-2-flex布局原理" tabindex="-1"><a class="header-anchor" href="#_34-2-flex布局原理" aria-hidden="true">#</a> 34.2 flex布局原理</h2><p>flex 是 flexible Box 的缩写，意为 “弹性布局”，用来为盒状模型<strong>提供最大的灵活性</strong>，<strong>任何一个容器都可以指定为 flex 布局</strong>。</p><ul><li>当我们为父盒子设为 flex 布局以后，子元素的 float（浮动功能）、clear（清除浮动功能）和 vertical-align（垂直居中功能）属性将失效。</li><li>伸缩布局 = 弹性布局 = 伸缩盒布局 = 弹性盒布局 = flex 布局</li></ul><p>采用 flex 布局的元素，称为 flex 容器（flex container），简称 “容器”。它的所有子元素自动成为容器成员，称为 flex 项目（flex item），简称 “项目”。</p><ul><li>上面的体验中 div 就是 flex 父容器</li><li>上面的体验中 span 就是子容器 flex 项目</li><li>子容器可以横向排列也可以纵向排列</li></ul><p>【子容器横向排列时的图示】</p><figure><img src="https://i0.hdslb.com/bfs/album/897c0e795aeb8f5d8b881d3dafc7ad954a5a9b97.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>【总结 flex 布局原理】</p><p><strong>就是通过给父盒子添加 flex 属性，来控制子盒子的位置和排列方式。</strong></p><h2 id="_34-3-常见弹性容器属性" tabindex="-1"><a class="header-anchor" href="#_34-3-常见弹性容器属性" aria-hidden="true">#</a> 34.3 常见弹性容器属性</h2><p>以下由 6 个属性是对父元素设置的</p><ul><li><code>flex-direction</code>：设置主轴的方向</li><li><code>justify-content</code>：设置主轴上的子元素排列方式</li><li><code>flex-wrap</code>：设置子元素是否换行</li><li><code>flex-flow</code>：复合属性，相当于同时设置了 flex-direction 和 flex-wrap</li><li><code>align-content</code>：设置侧轴上的子元素的排列方式（多行）</li><li><code>align-items</code>：设置侧轴上的子元素排列方式（单行）</li></ul><h2 id="_34-4-flex-direction设置主轴的方向" tabindex="-1"><a class="header-anchor" href="#_34-4-flex-direction设置主轴的方向" aria-hidden="true">#</a> 34.4 flex-direction设置主轴的方向</h2><p><code>flex-direction</code> 指定容器中弹性元素的排列方式</p><p><strong>（1）主轴与侧轴</strong></p><p>在 flex 布局中，是分为主轴和侧轴两个方向，同样的叫法有：行 和 列、x轴 和 y轴</p><ul><li>默认主轴方向就是 x轴 方向，水平向右</li><li>默认侧轴方向就是 y轴 方向，水平向下</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/f2d2c9fb7956df15da4cea034930fcc113048e7a.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>（2）属性值</strong></p><p><code>flex-direction</code> 属性决定主轴的方向（即：项目的排列方向）</p><p>注意：主轴和侧轴是会变化的，就看 flex-direction 设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的。</p><ul><li><p><code>row</code>默认值，弹性元素在容器中水平排列（自左向右）</p></li><li><p><code>row-reverse</code> 弹性元素在容器中反向水平排列（自右向左）</p></li><li><p><code>column</code> 弹性元素纵向排列（自上向下）</p></li><li><p><code>column-reverse</code> 弹性元素反向纵向排列（自下向上）</p></li></ul><p>【案例】</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token comment">/* 给父级添加flex属性 */</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* 默认的主轴是 x 轴,那么 y 轴就是侧轴喽 */</span>
            <span class="token comment">/* 我们的元素是跟着主轴来排列的 */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
            <span class="token comment">/* 简单了解翻转即可 */</span>
            <span class="token comment">/* flex-direction: row-reverse; */</span>
            <span class="token comment">/* 我们可以把我们的主轴设置为 y 轴 那么 x 轴就成了侧轴 */</span>
            <span class="token comment">/* flex-direction: column; */</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/1bff4d080d7437c8bb2dc17c6a38f35df217ca0e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row-reverse<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/e897fad7623720ddc687c091739aa2d4fee74352.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/8c13a430cea233f2c574e7f49ef3a08339850144.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_34-5-justify-content设置主轴上的子元素排列方式" tabindex="-1"><a class="header-anchor" href="#_34-5-justify-content设置主轴上的子元素排列方式" aria-hidden="true">#</a> 34.5 justify-content设置主轴上的子元素排列方式</h2><p><code>justify-content</code> 属性定义了项目在主轴上的对齐方式</p><p>注意：使用这个属性之前一定要确定好主轴是哪个！</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>元素沿着主轴起边排列，如果主轴是 x轴，则从左到右（默认值）</td></tr><tr><td><code>flex-end</code></td><td>元素沿着主轴终边排列</td></tr><tr><td><code>center</code></td><td>在主轴居中对齐（如果主轴是 x轴 则 水平居中）</td></tr><tr><td><code>space-around</code></td><td>空白分布到元素两侧</td></tr><tr><td><code>space-between</code></td><td>先两边贴边再平方剩余空间（重要）</td></tr><tr><td><code>space-evenly</code></td><td>空白分布到元素的单侧</td></tr></tbody></table><p>【案例】</p><p><code>flex-start</code> 元素沿着主轴起边排列</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* 默认的主轴是 x轴 row */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
            <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
            <span class="token comment">/* 从头部开始，如果主轴是 x轴，则从左到右（默认值） */</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
            <span class="token comment">/* 从尾部开始排列 */</span>
            <span class="token comment">/* justify-content: flex-end; */</span>
            <span class="token comment">/* 让我们子元素居中对齐 */</span>
            <span class="token comment">/* justify-content: center; */</span>
            <span class="token comment">/* 平分剩余空间 */</span>
            <span class="token comment">/* justify-content: space-around; */</span>
            <span class="token comment">/* 先两边贴边，在分配剩余的空间 */</span>
            <span class="token comment">/* justify-content: space-between; */</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/ef3457bfc8477bc5b825bb7272ba46fdc7f7b14e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>flex-end</code> 元素沿着主轴终边排列</p><figure><img src="https://i0.hdslb.com/bfs/album/51e7f397043eef3e0b4282aecc3bafd7492ad708.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>center</code> 元素居中排列</p><p><img src="https://i0.hdslb.com/bfs/album/e5abc3d231d6dabd682c4777fc69951cf5729ed7.png" alt="image-20220812122252100" loading="lazy"> <code>space-around</code> 空白分布到元素两侧</p><figure><img src="https://i0.hdslb.com/bfs/album/90eaec58b3e2f2b6a56c6314f4440cc6aec0914d.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>space-between</code> 先两边贴边再平方剩余空间</p><figure><img src="https://i0.hdslb.com/bfs/album/b7dd454e231a2627f0d7a3beed2ef8b8b1227d86.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>补充</strong></p><p><code>space-evenly</code> 空白分布到元素的单侧</p><figure><img src="https://i0.hdslb.com/bfs/album/008889e323285a5a8bd055f8c9bc7e17beb6c3d3.png" alt="image-20220812105356829" tabindex="0" loading="lazy"><figcaption>image-20220812105356829</figcaption></figure></blockquote><blockquote><p>注意：以上例子并不能根据浏览器窗口大小自动调整子项之间的间距，因为父盒子的宽度是固定死 800px 的，假如我们把父盒子宽度设为 80%，那么就可以有效果了。</p></blockquote><p><code>div {width: 800px;}</code></p><figure><img src="https://i0.hdslb.com/bfs/album/4c7a2bfc919c4dc0f6113ef7838c97a02153e693.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>div {width: 80%;}</code></p><figure><img src="https://i0.hdslb.com/bfs/album/e81b12ef6c8b3c12325ba377894a17f1b3c43173.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>div {width: 80%;}</code></p><p><code>div span {width: 80%;}</code></p><figure><img src="https://i0.hdslb.com/bfs/album/186275c836d91572211f12780a4f154ae3145d77.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>【以上到下为主轴的案例】</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>         <span class="token comment">/* 我们现在的主轴是 y轴 */</span>
         <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
        <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
        <span class="token comment">/* 从头部开始，则从上到下（默认值） */</span>
        <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/0b6afe1d08a543f4e61c585b207e527f41d1c584.png" alt="image-20220812122358520" tabindex="0" loading="lazy"><figcaption>image-20220812122358520</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token comment">/* 我们现在的主轴是 y轴 */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
            <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
            <span class="token comment">/* 从下开始排列 */</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/1b3ddbaf1f0d608ddb08ec78acf8116b0ceb8606.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token comment">/* 我们现在的主轴是 y轴 */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
            <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
            <span class="token comment">/* 让我们子元素垂直居中对齐 */</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>盒子自动垂直居中的困扰终于解决啦！！！</p><figure><img src="https://i0.hdslb.com/bfs/album/bb005e50536217371f764154f55e6e77aa39426d.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token comment">/* 我们现在的主轴是 y轴 */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
            <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
            <span class="token comment">/* 平分剩余空间 */</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d567cb6e04e12144a77be96b0b4c5c1aea15038e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token comment">/* 我们现在的主轴是 y轴 */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
            <span class="token comment">/* justify-content: 是设置主轴上子元素的排列方式 */</span>
            <span class="token comment">/* 先上下两边贴边，在分配剩余的空间 */</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d2cb207e29718ed796592a033c3a65fab834161c.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_34-6-flex-wrap设置子元素是否换行" tabindex="-1"><a class="header-anchor" href="#_34-6-flex-wrap设置子元素是否换行" aria-hidden="true">#</a> 34.6 flex-wrap设置子元素是否换行</h2><p><code>flex-wrap</code> 设置弹性元素是否在弹性容器中自动换行</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><code>nowrap</code></td><td>默认值，元素不会自动换行</td></tr><tr><td><code>wrap</code></td><td>元素沿着辅轴方向自动换行</td></tr></tbody></table><p>【案例】</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* flex布局中，默认的子元素是不换行的， 如果装不开，会缩小子元素的宽度，放到父元素里面  */</span>
            <span class="token comment">/* flex-wrap: nowrap; */</span>
            <span class="token comment">/* 自动换行 */</span>
            <span class="token comment">/* flex-wrap: wrap; */</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://i0.hdslb.com/bfs/album/d37358b55053592cf3ceb174c37e7f72c76854fd.png" alt="image-20220119004923437" style="zoom:50%;"><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://i0.hdslb.com/bfs/album/1825de48955b6e4cf496224fa41d0b4a6ddc6969.png" style="zoom:50%;"><h2 id="_34-7-flex-flow复合属性" tabindex="-1"><a class="header-anchor" href="#_34-7-flex-flow复合属性" aria-hidden="true">#</a> 34.7 flex-flow复合属性</h2><p><code>flex-flow</code> 属性是 flex-direction 和 flex-wrap 属性的复合属性</p><p><code>flex-flow: row wrap;</code></p><p>【案例】</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* flex-direction: column;
            flex-wrap: wrap; */</span>
            <span class="token comment">/* 把设置主轴方向和是否换行（换列）简写 */</span>
            <span class="token property">flex-flow</span><span class="token punctuation">:</span> column wrap<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/df1cb1d2aeddf3d0d561d4da400d324065127d13.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_34-8-align-items设置侧轴上的子元素排列方式-单行" tabindex="-1"><a class="header-anchor" href="#_34-8-align-items设置侧轴上的子元素排列方式-单行" aria-hidden="true">#</a> 34.8 align-items设置侧轴上的子元素排列方式（单行）</h2><p>该属性是控制子项在侧轴（默认是 y轴）上的排列方式，在子项为单项（单行）的时候使用。</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>从上到下</td></tr><tr><td><code>flex-end</code></td><td>从下到上</td></tr><tr><td><code>center</code></td><td>挤在一起居中</td></tr><tr><td><code>stretch</code></td><td>拉伸（默认值）注：前提是子盒子没有指定高度，否则没有效果！</td></tr></tbody></table><p>【案例】</p><p><code>flex-start</code> 元素不会拉伸，沿着辅轴起边对齐</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* 默认的主轴是 x轴 row */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
            <span class="token comment">/* 设置侧轴：从上到下 */</span>
            <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/2e605b349e3285d7168dd125aba27cea6b530849.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>flex-end</code> 沿着辅轴的终边对齐</p><figure><img src="https://i0.hdslb.com/bfs/album/0f1b2a03959a9cc2906249c368d29c73197b6db2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>center</code> 居中对齐</p><figure><img src="https://i0.hdslb.com/bfs/album/3170da9ea015bcd564d892ef095b877b6bbe9fb8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* 默认的主轴是 x轴 row */</span>
            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
            <span class="token comment">/* 设置侧轴：拉伸（默认） */</span>
            <span class="token property">align-items</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token comment">/* 拉伸的前提是没有指定高度 */</span>
            <span class="token comment">/* height: 100px; */</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d6c0c1eba75c109f71322feeae31bc8e74b646f1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>align-items 只能统一对侧轴上的子元素排列方式，假如有多行子元素，要分别对不同的行设置不同的排列方式，那么此种方式就无法做了。</p></blockquote><h2 id="_34-9-align-content-设置侧轴上的子元素的排列方式-多行" tabindex="-1"><a class="header-anchor" href="#_34-9-align-content-设置侧轴上的子元素的排列方式-多行" aria-hidden="true">#</a> 34.9 align-content 设置侧轴上的子元素的排列方式（多行）</h2><p>设置子项在侧轴上的排列方式并且只能用于子项出现 <strong>换行</strong> 的情况（多行），在单行下是没有效果的。</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>在侧轴的头部开始排列</td></tr><tr><td><code>flex-end</code></td><td>在侧轴的尾部开始排列</td></tr><tr><td><code>center</code></td><td>在侧轴中间显示</td></tr><tr><td><code>space-around</code></td><td>子项在侧轴平方剩余空间</td></tr><tr><td><code>space-between</code></td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td><code>stretch</code></td><td>行拉伸以占据剩余空间（默认值）</td></tr></tbody></table><p>【案例】</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
            <span class="token comment">/* 换行 */</span>
            <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>
            <span class="token comment">/* 因为有了换行，此时我们侧轴上控制子元素的对齐方式我们用 align-content */</span>
            <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
            <span class="token comment">/* align-content: center; */</span>
            <span class="token comment">/* align-content: space-around; */</span>
            <span class="token comment">/* align-content: space-between; */</span>
            <span class="token comment">/* align-content: stretch; */</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/64a0439d75ab20ba3028cadf6a202dbfeacf12d5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/236869854dc0b30199fbcd3bedd39a7513763483.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">align-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d5ebb96dd5a524a86cf430ee8e16f0e8a80ee90b.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>            <span class="token property">align-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/ebf1d9360330231869e358f269165f2a198436b8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">div</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
            <span class="token comment">/* 换行 */</span>
            <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>
            <span class="token comment">/* 因为有了换行，此时我们侧轴上控制子元素的对齐方式我们用 align-content */</span>
            <span class="token property">align-content</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">div span</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/183a552be79119aaa913ae68fd3e46546ec5b873.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>弹性居中</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>利用弹性盒对元素进行水平垂直双方向居中</p><figure><img src="https://i0.hdslb.com/bfs/album/91bff2646ecca85d0a785579f731df13ac287138.png" alt="image-20220812111500820" tabindex="0" loading="lazy"><figcaption>image-20220812111500820</figcaption></figure><h2 id="_34-10-align-content和align-items区别" tabindex="-1"><a class="header-anchor" href="#_34-10-align-content和align-items区别" aria-hidden="true">#</a> 34.10 align-content和align-items区别</h2><ul><li>align-items 适用于单行情况下，只有上对齐、下对齐、居中和拉伸</li><li>align-content 适应于换行（多行）的情况下（单行情况下无效），可以设置上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值</li><li>总结就是单行找 align-items 多行找 align-content</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/ff9d3a127b6b9fad056166008f9eb5420eddd506.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_34-11-常见弹性元素属性" tabindex="-1"><a class="header-anchor" href="#_34-11-常见弹性元素属性" aria-hidden="true">#</a> 34.11 常见弹性元素属性</h2><ul><li><code>flex-grow</code> 指定弹性元素的伸展系数，默认值为0</li><li><code>flex-shrink</code> 指定弹性元素的收缩系数，默认值为1</li><li><code>flex-basis</code> 指定的是元素在主轴上的基础长度</li><li><code>flex</code> flex-grow、flex-shrink、flex-basis 三个属性的合集</li><li><code>order</code> 决定弹性元素的排列顺序（前后顺序）</li><li><code>align-self</code> 控制子项自己在侧轴的排列方式</li></ul><h2 id="_34-12-伸展系数" tabindex="-1"><a class="header-anchor" href="#_34-12-伸展系数" aria-hidden="true">#</a> 34.12 伸展系数</h2><p><code>flex-grow</code> 指定弹性元素的伸展系数，默认值为0</p><ul><li><p>当父元素有多余空间的时，子元素如何伸展</p></li><li><p>父元素的剩余空间，会按照比例进行分配</p></li></ul><h3 id="_34-12-1-flex-grow基础" tabindex="-1"><a class="header-anchor" href="#_34-12-1-flex-grow基础" aria-hidden="true">#</a> 34.12.1 flex-grow基础</h3><p>flex-grow 属性定义项目的扩大系数，用于<strong>分配容器的剩余空间</strong>，那么什么是剩余空间呢？</p><p>其实非常简单，剩余空间计算方式就是：</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>容器大小 - 所有项目的总大小
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考如下示例：</p><figure><img src="https://i0.hdslb.com/bfs/album/ee070dc47a9c470bf70bd549156266726be8f07d.png" alt="image-20220812112444197" tabindex="0" loading="lazy"><figcaption>image-20220812112444197</figcaption></figure><p>其中：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>1. 每个项目的宽度为50px，3个为150px。
2. 剩余空间为 450px - 150px = 300px。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>1. 默认为 0 ，即如果容器存在剩余空间，也不放大。
2. flex-grow只能为&gt;=0的数字，项目根据设置的系数进行放大。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>那么问题就来了：</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>项目是如何根据设置的系数分配剩余空间呢？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这边涉及到<strong>两个关键公式：</strong></p><p>1）计算将多少剩余空间拿来分配。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：剩余空间 * <span class="token punctuation">(</span> 所有项目的flex-grow之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-grow之和 <span class="token punctuation">)</span> 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这边用了一个三元表达式，理解不难，公式的意思就是说：</p><p>如果 所有项目的flex-grow之和 大于等于1，那么就是所有的剩余空间都拿来分配，否则乘以系数即为要分配的剩余空间。</p><p>2）计算每个项目分配到多少剩余空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：要分配的剩余空间 * <span class="token punctuation">(</span> 单个项目flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>简单的说，就是按照 flex-grow 占比进行分配。</p><p>下面我们结合例子进行说明，对这边的计算公式进行理解。</p><p><strong>示例1</strong>，设置项目的flex-grow为1：</p><p>有一个div（容器，450px），容器内包含3个div（项目，各50px）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 	flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token comment">/* 	这边设置为50px */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
	<span class="token comment">/* flex-grow 属性定义项目的扩大系数 */</span>
	<span class="token comment">/* 这边设置为1 */</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/76811f822d60894dfeee25d9efc74dc4a3e8af89.png" alt="image-20220812112908755" tabindex="0" loading="lazy"><figcaption>image-20220812112908755</figcaption></figure><p>我们观察到3个项目的宽度都变成了150px，可以看到项目被进行了扩大。</p><p>现在套公式看下情况：</p><p>1）计算总共要分配多少剩余空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>要分配的剩余空间
 = 剩余空间 * <span class="token punctuation">(</span> 所有项目的flex-grow之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-grow之和 <span class="token punctuation">)</span> 
 = 300px * <span class="token punctuation">(</span>3 &gt;= 1 ? 1 <span class="token punctuation">:</span> 3<span class="token punctuation">)</span>
 = 300px * 1
 = 300px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）计算每个项目分配到多少剩余空间。</p><p>因为每个项目flex-grow都为1，所以每个项目分配的剩余空间都一样。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>每个项目分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 单个项目flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 300px * <span class="token punctuation">(</span> 1 / 3<span class="token punctuation">)</span>
 = 100px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个项目多分配100px，加上自身设置的flex-basis，最终每个项目宽度就为150px了。</p><p><strong>示例2</strong>，设置项目1的flex-grow为1，项目2的flex-grow为2，项目3的flex-grow为3：</p><p>我们直接套公式计算：</p><p>1）计算总共要分配多少剩余空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>要分配的剩余空间
 = 剩余空间 * <span class="token punctuation">(</span> 所有项目的flex-grow之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-grow之和 <span class="token punctuation">)</span> 
 = 300px * <span class="token punctuation">(</span>6 &gt;= 1 ? 1 <span class="token punctuation">:</span> 6<span class="token punctuation">)</span>
 = 300px * 1
 = 300px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）计算每个项目分配到多少剩余空间。</p><p>因为每个项目flex-grow都不一样，所以每个项目分配的剩余空间要分开计算。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>项目1分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目1flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 300px * <span class="token punctuation">(</span> 1 / 6<span class="token punctuation">)</span>
 = 50px

项目2分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目2flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 300px * <span class="token punctuation">(</span> 2 / 6<span class="token punctuation">)</span>
 = 100px

项目3分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目3flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 300px * <span class="token punctuation">(</span> 3 / 6<span class="token punctuation">)</span>
 = 150px 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以最终：项目1宽为100px、项目2宽为150px、项目3宽为200px。</p><p>写上代码看看效果：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 	flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token comment">/* 	这边设置为50px */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item2</span> <span class="token punctuation">{</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item3</span> <span class="token punctuation">{</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/345481371c7123424e4403043fcd2d308801d9d2.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>观察运行效果，符合预期。</p><p><strong>示例3</strong>：设置项目1的 flex-grow 为 0.1，项目2的 flex-grow 为0.2，项目3的 flex-grow 为 0.3：</p><p>这个示例和上例差不多，只是数字变成了小数，并且总和不大于1。</p><p>先套公式来计算一下：</p><p>1）计算总共要分配多少剩余空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>要分配的剩余空间
 = 剩余空间 * <span class="token punctuation">(</span> 所有项目的flex-grow之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-grow之和 <span class="token punctuation">)</span> 
 = 300px * <span class="token punctuation">(</span>0.6 &gt;= 1 ? 1 <span class="token punctuation">:</span> 0.6<span class="token punctuation">)</span>
 = 300px * 0.6
 = 180px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）计算每个项目分配到多少剩余空间。因为每个项目flex-grow都不一样，所以每个项目分配的剩余空间要分开计算。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>项目1分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目1flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 180px * <span class="token punctuation">(</span> 0.1 / 0.6<span class="token punctuation">)</span>
 = 30px

项目2分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目2flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 180px * <span class="token punctuation">(</span> 0.2 / 0.6<span class="token punctuation">)</span>
 = 60px

项目3分配的剩余空间
 = 要分配的剩余空间 * <span class="token punctuation">(</span> 项目3flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
 = 180px * <span class="token punctuation">(</span> 0.3 / 0.6<span class="token punctuation">)</span>
 = 90px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以最终：项目1宽为80px、项目2宽为110px、项目3宽为140px。</p><p>样式代码如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-grow属性定义项目的放大比例 */</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 0.1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item2</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-grow属性定义项目的放大比例 */</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 0.2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item3</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-grow属性定义项目的放大比例 */</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 0.3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/70cdc6617eeca2b5d9aeea5e96f97c28116d19d8.png" alt="image-20220812113709146" tabindex="0" loading="lazy"><figcaption>image-20220812113709146</figcaption></figure><p>符合计算预期。</p><h3 id="_34-12-2-flow-grow应用" tabindex="-1"><a class="header-anchor" href="#_34-12-2-flow-grow应用" aria-hidden="true">#</a> 34.12.2 flow-grow应用</h3><p>flow-grow属性在项目中运用很多，比如页面布局、导航条、分页等。</p><p><strong>实例1</strong>：使用 flex 弹性布局实现如下效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/12890ae3e4fe65753139c6c56a63b9b64caa308f.png" alt="image-20220812113818509" tabindex="0" loading="lazy"><figcaption>image-20220812113818509</figcaption></figure><p>这个其实就是腾讯首页的导航条了，我们模拟实现一下，步骤分为4步：</p><p>1）首先先写html标签，标签很简单一个 nav 包含若干 a 标签：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>军事<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>体育<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>NBA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>娱乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>财经<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>科技<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）设置基本样式，背景、颜色、边框圆角等：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
	<span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>
	<span class="token property">background-color</span><span class="token punctuation">:</span> #1479d7<span class="token punctuation">;</span>
	<span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
	<span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
	<span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/434734b1dedd911e790f580db33c20692198d684.png" alt="image-20220812114128188" tabindex="0" loading="lazy"><figcaption>image-20220812114128188</figcaption></figure><p>3）设置容器为 flex 布局，项目 flex-grow 为1 平分剩余空间：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 设置子元素的布局为flex布局 */</span>
	<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 设置项目放大系数 */</span>
	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/26aa97391cc163a66e6fe14c0d2128f81b56b43b.png" alt="image-20220812114149809" tabindex="0" loading="lazy"><figcaption>image-20220812114149809</figcaption></figure><p>4）再来一个上下居中即可，flex 弹性布局将容器属性 align-items 设置为 center 即可：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 设置辅轴上项目居中排列 */</span>
	<span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/4647d0bc6d55bac2696290e774e95375980d0c27.png" alt="image-20220812114302213" tabindex="0" loading="lazy"><figcaption>image-20220812114302213</figcaption></figure><p>至此这个例子就完成了。</p><p>和之前使用float相比，<strong>我们尝试改变容器大小，会发现项目也跟着变化，这个就是弹性的意思了</strong>。如下图所示：</p><figure><img src="https://i0.hdslb.com/bfs/album/b1c6285d6655afa9b670eb425c3ec7318aebc31d.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-12-3-总结" tabindex="-1"><a class="header-anchor" href="#_3-12-3-总结" aria-hidden="true">#</a> 3.12.3 总结</h3><ol><li>容器内未被占用的空间称为剩余空间。</li><li>flex-grow用于设置项目的放大系数。</li><li>项目放大尺寸计算包含两个公式：</li></ol><p>1）计算将多少剩余空间拿来分配。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：剩余空间 * <span class="token punctuation">(</span> 所有项目的flex-grow之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-grow之和 <span class="token punctuation">)</span> 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）计算每个项目分配到多少剩余空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：要分配的剩余空间 * <span class="token punctuation">(</span> 单个项目flex-grow / 所有项目的flex-grow之和 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>flex-grow不是设置具体的尺寸，在弹性布局中应用广泛。</li></ol><h2 id="_34-13-缩减系数" tabindex="-1"><a class="header-anchor" href="#_34-13-缩减系数" aria-hidden="true">#</a> 34.13 缩减系数</h2><p><code>flex-shrink</code> 指定弹性元素的收缩系数，默认值为1</p><ul><li><p>当父元素中的空间不足以容纳所有的子元素时，如何对子元素进行收缩</p></li><li><p>缩减系数的计算方式比较复杂，缩减多少是根据 <em>缩减系数</em> 和 <em>元素大小</em> 来计算</p></li></ul><p>简单的说 flex-grow 用于放大，那么 flex-shrink 就是用于缩小了，两个属性就是反过来，计算方式都类似。放大是因为有剩余空间，缩小就是因为项目的宽度超过容器了，有一个<strong>超出空间</strong>，所以就要进行缩小。</p><h3 id="_34-13-1-flex-shrink基础" tabindex="-1"><a class="header-anchor" href="#_34-13-1-flex-shrink基础" aria-hidden="true">#</a> 34.13.1 flex-shrink基础</h3><p>超出空间计算方式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>所有项目的总大小 - 容器大小
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考如下示例：</p><figure><img src="https://i0.hdslb.com/bfs/album/bf356ffc1aefa7b89271239e21dea1f15cd02dfd.png" alt="image-20220812114904538" tabindex="0" loading="lazy"><figcaption>image-20220812114904538</figcaption></figure><p>容器宽度为450px，三个项目各为200px，总宽超过容器了，就自动缩小了。不难计算，这里超出的空间就是 <strong>200px * 3 - 450px = 150px</strong>。</p><p>其中：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>1. 默认值为1，表示所有项目等比例缩小。
2. 如果为0，那么表示不缩小。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>缩小的尺寸计算方式和flew-grow类似，涉及到<strong>两个公式：</strong></p><p>1）计算超出空间中多少用来压缩。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：超出空间 * <span class="token punctuation">(</span> 所有项目的flex-shrink之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-shrink之和 <span class="token punctuation">)</span> 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果没有超出空间，那么就用压缩了；如果超出空间为150px，所有项目的flex-shrink之和为0.6，那么90px用来压缩。</p><p>2）计算每个项目缩小多少空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：要压缩的空间 * <span class="token punctuation">(</span> 单个项目flex-shrink / 所有项目的flex-shrink之和 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>简单的说，就是按照 flex-shrink 占比进行缩小。</p><p>下面我们结合例子进行说明，对这边的计算公式进行理解。</p><p>示例1，设置项目的 flex-shrink 为0：</p><p>接上一篇例子，有一个div（容器，450px），容器内包含3个div（项目，flex-basis 为200px）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
	<span class="token comment">/* flex-shrink 属性定义项目的缩小系数 */</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>flex-shrink 为0表示不压缩项目。</p></blockquote><figure><img src="https://i0.hdslb.com/bfs/album/d1441e028eab5b0b2058baa141d9dc7d17739726.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到item3项目那边超出了容器一截。</p><p><strong>示例2</strong>，接上例，设置项目1、2、3的 flex-shrink 分别为0、1、2：</p><p>套公式计算：</p><p>1）计算超出空间中多少用来压缩。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>要压缩的空间
 = 总超出空间 * <span class="token punctuation">(</span> 所有项目的flex-shrink之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-shrink之和 <span class="token punctuation">)</span> 。
 = 150px * <span class="token punctuation">(</span> 3 &gt;= 1 ? 1 <span class="token punctuation">:</span> 3<span class="token punctuation">)</span>
 = 150px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）计算每个项目缩小多少空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>项目1压缩的空间
 = 150px * <span class="token punctuation">(</span> 0 / 3 <span class="token punctuation">)</span>
 = 0

项目2压缩的空间
 = 150px * <span class="token punctuation">(</span> 1 / 3 <span class="token punctuation">)</span>
 = 50px

项目3压缩的空间
 = 150px * <span class="token punctuation">(</span> 2 / 3 <span class="token punctuation">)</span>
 = 100px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以最终：项目1宽为200px、项目2宽为150px、项目3宽为100px。</p><p>写上代码看看效果：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
		
<span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item2</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item3</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/1f278a5da9bb333386bc447a518c094bbe802b2d.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>观察运行效果，符合预期。</p><p><strong>示例3</strong>：设置项目1、2、3的 flex-shrink 分别为 0.1、0.2、0.3：</p><p>这个示例和上例差不多，只是数字变成了小数，并且总和不大于1。</p><p>先套公式来计算一下：</p><p>1）计算超出空间中多少用来压缩</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>要压缩的空间
 = 总超出空间 * <span class="token punctuation">(</span> 所有项目的flex-shrink之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-shrink之和 <span class="token punctuation">)</span> 。
 = 150px * <span class="token punctuation">(</span> 0.6 &gt;= 1 ? 1 <span class="token punctuation">:</span> 0.6<span class="token punctuation">)</span>
 = 90px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）计算每个项目缩小多少空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>项目1压缩的空间
 = 90px * <span class="token punctuation">(</span> 0.1 / 0.6 <span class="token punctuation">)</span>
 = 15px

项目2压缩的空间
 = 90px * <span class="token punctuation">(</span> 0.2 / 0.6 <span class="token punctuation">)</span>
 = 30px

项目3压缩的空间
 = 90px * <span class="token punctuation">(</span> 0.3 / 0.6 <span class="token punctuation">)</span>
 = 45px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以最终：项目1宽为185x、项目2宽为170px、项目3宽为155px。</p><p>样式代码如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> .1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item2</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> .2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item3</span> <span class="token punctuation">{</span>
	<span class="token property">flex-shrink</span><span class="token punctuation">:</span> .3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/d480f8736cda00b4007bb0317b88db63caaead1e.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>符合计算预期。</p><h3 id="_34-13-2-总结" tabindex="-1"><a class="header-anchor" href="#_34-13-2-总结" aria-hidden="true">#</a> 34.13.2 总结</h3><ol><li>项目的总大小超出容器部分成为超出空间。</li><li>flex-shrink用于设置项目的缩小系数。</li><li>项目缩小尺寸计算包含两个公式：</li></ol><p>1）计算超出空间中多少用来压缩。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：总超出空间 * <span class="token punctuation">(</span> 所有项目的flex-shrink之和 &gt;= 1 ? 1 <span class="token punctuation">:</span> 所有项目的flex-shrink之和 <span class="token punctuation">)</span> 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）计算每个项目缩小多少空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>公式：要压缩的空间 * <span class="token punctuation">(</span> 单个项目flex-shrink / 所有项目的flex-shrink之和 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_34-14-基础长度" tabindex="-1"><a class="header-anchor" href="#_34-14-基础长度" aria-hidden="true">#</a> 34.14 基础长度</h2><h3 id="_34-14-1-flex-basis基础" tabindex="-1"><a class="header-anchor" href="#_34-14-1-flex-basis基础" aria-hidden="true">#</a> 34.14.1 flex-basis基础</h3><p><code>flex-basis</code> 指定的是元素在主轴上的基础长度</p><ul><li><p>如果主轴是横向的，则该值指定的就是元素的宽度</p></li><li><p>如果主轴是纵向的，则该值指定的就是元素的高度</p></li><li><p>默认值是<code>auto</code>，表示参考元素自身的高度或宽度</p></li><li><p>如果传递了一个具体的数值，则以该值为准</p></li></ul><blockquote><p>在这里可以先理解成 宽（width）属性，用法和 width 的一致，只是优先级比 width 更高。</p></blockquote><p><strong>示例1</strong> 有一个div（容器），容器内包含3个div（项目），容器设置为 flex 弹性布局。</p><figure><img src="https://i0.hdslb.com/bfs/album/c5c50c20f8e56b0c60e27cf55f48898b4fc3e8c1.png" alt="image-20220812120114551" tabindex="0" loading="lazy"><figcaption>image-20220812120114551</figcaption></figure><p>容器内项目的宽度是根据内容自适应的，这个也就是 flex-basis 默认值为 auto 的含义了。</p><p>下面设置项目的宽度为120px：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* flex-basis属性定义了项目占据主轴空间（main size）大小。 */</span>
	<span class="token property">flex-basis</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/41fd1d59969a50e741dd50a6fa060167d567dbcf.png" alt="image-20220812120209155" tabindex="0" loading="lazy"><figcaption>image-20220812120209155</figcaption></figure><p>可以看到3个项目的宽度都为120px了，这个就是 flex-basis 的含义了。</p><p><strong>思考：</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>如果设置 <span class="token property">width</span><span class="token punctuation">:</span> 100px，那么项目实际为多宽呢？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解答：因为 flex-basis 属性的优先级比 width 高，所以项目的宽度还是120px。</p><p><strong>思考：</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>设置宽度为什么不直接用 width 属性？还要再多一个 flex-basis 属性，不是多此一举吗？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>解答（难点）：</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>flex-basis 这边并没有说是定义项目的宽度，而是说：占据主轴空间的大小。
因为设置容器属性 flex-direction 为 column或者column-reverse 的时候主轴会变成纵向的（可以想象成数学坐标轴的Y轴）。
在这种情况下，flex-basis 就是设置高，可以理解成 height 属性。
从这个意义上来讲，flex-basis 不全等于 width。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-14-2-总结" tabindex="-1"><a class="header-anchor" href="#_3-14-2-总结" aria-hidden="true">#</a> 3.14.2 总结</h3><ol><li>flex-basis 属性设置在项目上的。</li><li>flex-basis 是设置项目 占据主轴空间的大小、不全等于width。</li><li>flex-basis 优先级比 width 更高。</li></ol><h2 id="_34-15-flex属性" tabindex="-1"><a class="header-anchor" href="#_34-15-flex属性" aria-hidden="true">#</a> 34.15 flex属性</h2><p>前面三节讲了 flex-grow、flex-shrink、flex-basis 三个项目属性。</p><ol><li>flex-grow 用于设置项目的放大系数。</li><li>flex-shrink 用于设置项目的缩小系数。</li><li>flex-basis 用于设置项目在主轴上的空间。</li></ol><p>那么项目属性 flex 就很简单了，他其实是3个属性的集中而已，语法格式如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token property">flex</span><span class="token punctuation">:</span> flex-grow flex-shrink flex-basis | auto | none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>1. 这个属性可以独立设置 flex-grow flex-shrink flex-basis 的值，如：1 0 120px。
2. auto 表示：1 1 auto，即等比例扩大或者压缩。
3. none 表示：0 0 auto，即不扩大，也不压缩。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>initial</code>：<code>flex: 0 1 auto</code> 默认值</p></blockquote><p>实务中经常会看到如下样式代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个其实就是表示 flex-grow 设置为1，各项目等比例放大。</p><p>经常用作自适应布局，内容区会自动放大或缩小占满剩余空间。在chrome浏览器上也可以将flex: 1;</p><figure><img src="https://i0.hdslb.com/bfs/album/fa56d10c1397c95cd0311f904e0311cddd0f8fc2.png" alt="image-20220812121004252" tabindex="0" loading="lazy"><figcaption>image-20220812121004252</figcaption></figure><p>flex: 2;</p><figure><img src="https://i0.hdslb.com/bfs/album/83f04bf46dd3e74e8d143e40b2a484680b5880c1.png" alt="image-20220812121016075" tabindex="0" loading="lazy"><figcaption>image-20220812121016075</figcaption></figure><p>下面有几个flex布局的常用场景： 1、一个元素宽度（或高度）固定，另一个元素宽度（或高度）自适应。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
	<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">// 高度/宽度固定
.son1</span> <span class="token punctuation">{</span>
	<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> //或者 <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
	<span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> // 加不加都可 <span class="token property">相当于flex</span><span class="token punctuation">:</span> 0 0 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">// 高度/宽度自适应
.son2</span> <span class="token punctuation">{</span>
	<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  // <span class="token property">flex</span><span class="token punctuation">:</span> 1 1 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、子元素都设置flex: 1; 子元素盒子会平分并占满父盒子；</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个div&lt;/div&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个很多字div&lt;/div&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个更多字而且第三个div&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.container</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.div</span><span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
&lt;/style&gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/ccc36c52a6e507043f403f9e0f2b7999d1f4ea1a.png" alt="image-20220812121143203" tabindex="0" loading="lazy"><figcaption>image-20220812121143203</figcaption></figure><p>3、那么如果设置 flex: 1 1 auto;呢？ 子元素盒子会根据自己的内容来适配并一起占满整个空间；</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个div&lt;/div&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个很多字div&lt;/div&gt;
  &lt;div class=&quot;div&quot;&gt;我是一个更多字而且第三个div&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.container</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.div</span><span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1 1 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/430479d8da8e7d6c5d4b7f43409ec183dbb8cd22.png" alt="image-20220812121218240" tabindex="0" loading="lazy"><figcaption>image-20220812121218240</figcaption></figure><h2 id="_34-16-order属性定义项目的排列顺序" tabindex="-1"><a class="header-anchor" href="#_34-16-order属性定义项目的排列顺序" aria-hidden="true">#</a> 34.16 order属性定义项目的排列顺序</h2><p>order 用于是设置项目的排序顺序，从小到大排列。</p><p>项目的排序默认会按照html的结构进行排序，如果需要定义排序顺序，可以通过order属性定义项目的排序顺序，语法格式如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 整数，默认值为 0，可以为负数 */</span>
	<span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>order 为整数，可以为负数。
order 默认值为 0。
项目按照 order 值从小到大排列。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果之前有学习过sql，那么对 order 就很熟悉了。因为sql中排序的关键词就是 order by。</p><p><strong>示例1</strong>：有一个div（容器，450px），容器内包含5个div（项目，flex-grow 为1）。</p><p>1）和前面章节相比多两个项目，方便看出排序效果。</p><p>未设置排序前的效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/5854f585e0eec3c54caaff56d26f0fb252203619.png" alt="image-20220812121521482" tabindex="0" loading="lazy"><figcaption>image-20220812121521482</figcaption></figure><p>2）默认所有的项目 order 值都为0，设置项目1为99，项目3为-1，项目4为-2：</p><p>因为项目是按照order从小到大排列，那么正常显示的顺序应该是：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>项目4、项目3、项目2、项目5、项目1。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写上代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token property">order</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item3</span> <span class="token punctuation">{</span>
	<span class="token property">order</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item4</span> <span class="token punctuation">{</span>
	<span class="token property">order</span><span class="token punctuation">:</span> -2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/c1de61e6423afeceac2cd21cec17dd825ff825fd.png" alt="image-20220812121638855" tabindex="0" loading="lazy"><figcaption>image-20220812121638855</figcaption></figure><h2 id="_34-17-align-self属性" tabindex="-1"><a class="header-anchor" href="#_34-17-align-self属性" aria-hidden="true">#</a> 34.17 align-self属性</h2><p>项目属性 align-self，和 align-items 类似。align-items设置在容器上，作用所有的项目。align-self 设置在项目上，作用单个项目</p><p>align-self 属性用来设置项目在辅轴方向上的对齐方式，设置在项目上，作用单个项目。 而 align-items 设置在容器上，作用所有的项目。</p><p>语法格式如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
	<span class="token property">align-self</span><span class="token punctuation">:</span> <span class="token function">auto</span><span class="token punctuation">(</span>默认值<span class="token punctuation">)</span> | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>1. auto 表示继承容器的 align-items 属性。（默认值）
2. flex-start 沿着辅轴方向 起点 对齐（默认值）。
3. flex-end 沿着辅轴方向 结尾 对齐。
4. center 沿着辅轴方向 居中 对齐。
5. baseline 沿着辅轴方向，按照项目内的文字对齐。
6. stretch 沿着辅轴方向自动进行拉升到最大。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例1</strong>，有一个div（容器，450px），容器内包含3个div（项目，flex-basis 为50px），设置 align-items 为 flex-start，项目1的align-self设置为 flex-end：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 设置子元素的布局为flex布局 */</span>
	<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
	<span class="token comment">/* 设置项目交叉轴方向上的对齐方式 */</span>
	<span class="token comment">/* 作用于所有项目 */</span>
	<span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item1</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 设置单个项目交叉轴方向上的对齐方式 */</span>
	<span class="token comment">/* 作用于单个项目 */</span>
	<span class="token property">align-self</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/44d9c79b1f90bba0f99b21d4b5c9cf1654b691d1.png" alt="image-20220812122009637" tabindex="0" loading="lazy"><figcaption>image-20220812122009637</figcaption></figure><p><strong>本节总结</strong></p><ol><li>align-self 和 align-items 类似，默认值为auto，表示继承 align-items 的属性。</li><li>align-self 设置在项目上，作用单个项目。align-items设置在容器上，作用所有的项目。</li></ol>`,367),i=[p];function l(c,o){return s(),a("div",null,i)}const d=n(e,[["render",l],["__file","19.html.vue"]]);export{d as default};
