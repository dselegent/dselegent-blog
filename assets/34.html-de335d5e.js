const e=JSON.parse('{"key":"v-f33fa4d2","path":"/front_end/front_end_base/javascript/34.html","title":"34 【表单和FormData 对象】","lang":"zh-CN","frontmatter":{"description":"34 【表单和FormData 对象】 1.FormData 对象 1.1 概述 表单数据以键值对的形式向服务器发送，这个过程是浏览器自动完成的。但是有时候，我们希望通过脚本完成这个过程，构造或编辑表单的键值对，然后通过脚本发送给服务器。浏览器原生提供了 FormData 对象来完成这项工作。 FormData()首先是一个构造函数，用来生成表单的实例。 var formdata = new FormData(form);","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/front_end/front_end_base/javascript/34.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"34 【表单和FormData 对象】"}],["meta",{"property":"og:description","content":"34 【表单和FormData 对象】 1.FormData 对象 1.1 概述 表单数据以键值对的形式向服务器发送，这个过程是浏览器自动完成的。但是有时候，我们希望通过脚本完成这个过程，构造或编辑表单的键值对，然后通过脚本发送给服务器。浏览器原生提供了 FormData 对象来完成这项工作。 FormData()首先是一个构造函数，用来生成表单的实例。 var formdata = new FormData(form);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"34 【表单和FormData 对象】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.FormData 对象","slug":"_1-formdata-对象","link":"#_1-formdata-对象","children":[{"level":3,"title":"1.1 概述","slug":"_1-1-概述","link":"#_1-1-概述","children":[]},{"level":3,"title":"1.2 实例方法","slug":"_1-2-实例方法","link":"#_1-2-实例方法","children":[]}]},{"level":2,"title":"2.表单的内置验证","slug":"_2-表单的内置验证","link":"#_2-表单的内置验证","children":[{"level":3,"title":"2.1 自动校验","slug":"_2-1-自动校验","link":"#_2-1-自动校验","children":[]},{"level":3,"title":"2.2 checkValidity()","slug":"_2-2-checkvalidity","link":"#_2-2-checkvalidity","children":[]},{"level":3,"title":"2.3 setCustomValidity()","slug":"_2-3-setcustomvalidity","link":"#_2-3-setcustomvalidity","children":[]},{"level":3,"title":"2.4 表单的 novalidate 属性","slug":"_2-4-表单的-novalidate-属性","link":"#_2-4-表单的-novalidate-属性","children":[]}]},{"level":2,"title":"3.enctype 属性","slug":"_3-enctype-属性","link":"#_3-enctype-属性","children":[]},{"level":2,"title":"4.文件上传","slug":"_4-文件上传","link":"#_4-文件上传","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":8.32,"words":2497},"filePathRelative":"front_end/front_end_base/javascript/34.md","localizedDate":"2023年1月30日","excerpt":"<h1> 34 【表单和FormData 对象】</h1>\\n<h2> 1.FormData 对象</h2>\\n<h3> 1.1 概述</h3>\\n<p>表单数据以键值对的形式向服务器发送，这个过程是浏览器自动完成的。但是有时候，我们希望通过脚本完成这个过程，构造或编辑表单的键值对，然后通过脚本发送给服务器。浏览器原生提供了 FormData 对象来完成这项工作。</p>\\n<p><code>FormData()</code>首先是一个构造函数，用来生成表单的实例。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> formdata <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">FormData</span><span class=\\"token punctuation\\">(</span>form<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
