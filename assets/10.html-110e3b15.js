import{ab as n,G as s,H as a,ac as e}from"./framework-844b12a4.js";const t={},p=e(`<h1 id="_10-【vite-vue3-electron-创建打包桌面程序】" tabindex="-1"><a class="header-anchor" href="#_10-【vite-vue3-electron-创建打包桌面程序】" aria-hidden="true">#</a> 10 【Vite + Vue3 + Electron 创建打包桌面程序】</h1><h2 id="_1-使用-vite-构建-electron-项目" tabindex="-1"><a class="header-anchor" href="#_1-使用-vite-构建-electron-项目" aria-hidden="true">#</a> 1.使用 Vite 构建 Electron 项目</h2><h3 id="_1-1-创建-vite-应用-安装-electron-依赖" tabindex="-1"><a class="header-anchor" href="#_1-1-创建-vite-应用-安装-electron-依赖" aria-hidden="true">#</a> 1.1 创建 Vite 应用，安装 Electron 依赖</h3><p>创建一个 Vite 项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init vite@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装 Electron 相关依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> electron <span class="token parameter variable">-D</span>
<span class="token function">npm</span> <span class="token function">install</span> vite-plugin-electron <span class="token parameter variable">-D</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-在-vite-config-ts-中-配置-electron-入口文件" tabindex="-1"><a class="header-anchor" href="#_1-2-在-vite-config-ts-中-配置-electron-入口文件" aria-hidden="true">#</a> 1.2 在 vite.config.ts 中，配置 Electron 入口文件</h3><figure><img src="https://i0.hdslb.com/bfs/album/321a69eb89ba7fb5a76bee5aaa9b3a3d987f5663.png" alt="image-20230112210747636" tabindex="0" loading="lazy"><figcaption>image-20230112210747636</figcaption></figure><p>根据上方官网提示，创建 <code>electron/main/index.ts</code>，与 src 目录同级</p><figure><img src="https://i0.hdslb.com/bfs/album/4a072114ec4980c23f3045a9997f05075ccee8a3.png" alt="image-20230112210930657" tabindex="0" loading="lazy"><figcaption>image-20230112210930657</figcaption></figure><p>配置 Electron 入口文件 —— 打开 vite.config.ts，引入 <code>electron/main/index.ts</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> electron <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-electron&#39;</span>
 
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">electron</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    main<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 配置 Electron 入口文件</span>
			entry<span class="token operator">:</span> <span class="token string">&#39;electron/main/index.ts&#39;</span><span class="token punctuation">,</span>    
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这么配置，就启动一个 Vite 应用就行。</p><h3 id="_1-3-编写-electron-index-ts" tabindex="-1"><a class="header-anchor" href="#_1-3-编写-electron-index-ts" aria-hidden="true">#</a> 1.3 编写 electron / index.ts</h3><h4 id="_1-3-1-app、browserwindow" tabindex="-1"><a class="header-anchor" href="#_1-3-1-app、browserwindow" aria-hidden="true">#</a> 1.3.1 app、BrowserWindow</h4><p>在 electron 依赖中，可以引入 app、BrowserWindow：</p><ul><li>app 控制应用程序的事件生命周期（相当于应用程序）</li><li>BrowserWindow 创建并控制浏览器窗口（相当于打开桌面弹框）</li></ul><p>实例化 BrowserWindow 对象，创建一个窗口，在内部通过 nodeIntegration、contextIsolation 集成网页和 Node.js（也就是在渲染进程中，可以调用 Node.js 方法）</p><h4 id="_1-3-2-使用-win-loadurl-加载窗口-vite-环境变量" tabindex="-1"><a class="header-anchor" href="#_1-3-2-使用-win-loadurl-加载窗口-vite-环境变量" aria-hidden="true">#</a> 1.3.2 使用 win.loadURL 加载窗口 / Vite 环境变量</h4><p>使用 win.loadURL 加载窗口，接收的网址是指：Vite 启动后，会在本地运行一个服务，把这个服务网址丢进去就行</p><ul><li>使用 Vite 自带的环境变量 VITE_DEV_SERVER_HOST</li><li>如果是 undefined，就换成 VITE_DEV_SERVER_HOSTNAME（现在应该采用这个了）</li><li>ps：在 Vite 3.2.41中，使用 VITE_DEV_SERVER_URL 表示 Vite 服务器本地路径</li></ul><p>关于 Vite 环境变量，可以去终端看下</p><figure><img src="https://i0.hdslb.com/bfs/album/4d5363b420f5c015490ec6781abd0cd066db644f.png" alt="image-20230112211200258" tabindex="0" loading="lazy"><figcaption>image-20230112211200258</figcaption></figure><h4 id="_1-3-3-使用-app-whenready-初始化app" tabindex="-1"><a class="header-anchor" href="#_1-3-3-使用-app-whenready-初始化app" aria-hidden="true">#</a> 1.3.3 使用 app.whenReady() 初始化app</h4><p>最后，使用 <code>app.whenReady()</code> 初始化app（在 Electron 完成初始化时触发）</p><p>初始化完成后，再挂载上面创建的 桌面应用程序窗口</p><h3 id="_1-3-4-整理-electron-main-index-ts" tabindex="-1"><a class="header-anchor" href="#_1-3-4-整理-electron-main-index-ts" aria-hidden="true">#</a> 1.3.4 整理 electron/main/index.ts</h3><ul><li>开发环境下，我们访问的是 Vite 本地服务</li><li>打包之后，我们访问的是 dist 静态文件</li></ul><p>要修改 win.loadURL 中的路径参数，判断下当前是生产环境，还是开发环境</p><p>在 <code>electron/main/index.ts</code>中，写入下方代码</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// app 控制应用程序的事件生命周期（相当于应用程序）</span>
<span class="token comment">// BrowserWindow 创建并控制浏览器窗口（相当于打开桌面弹框）</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:path&#39;</span>
 
<span class="token comment">// 定义全局变量，获取窗口实例</span>
<span class="token keyword">let</span> win<span class="token operator">:</span> BrowserWindow <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/**
 * 创建一个窗口
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">createWindow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;Main window&#39;</span><span class="token punctuation">,</span>
    icon<span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PUBLIC</span><span class="token punctuation">,</span> <span class="token string">&#39;favicon.ico&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    webPreferences<span class="token operator">:</span> <span class="token punctuation">{</span>
      preload<span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../preload/index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 集成网页和 Node.js，也就是在渲染进程中，可以调用 Node.js 方法</span>
      nodeIntegration<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      contextIsolation<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
    <span class="token comment">// 集成网页和 Node.js 后，需要加载</span>
    <span class="token comment">// 这里接收的网址是指：Vite 启动后，会在本地运行一个服务，把这个服务网址丢进去就行</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_DEV_SERVER_URL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    win<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_DEV_SERVER_URL</span><span class="token punctuation">)</span>
    <span class="token comment">// Open devTool if the app is not packaged</span>
    win<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    win<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DIST</span><span class="token punctuation">,</span> <span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
<span class="token punctuation">}</span>
 
<span class="token comment">// 初始化app（在 Electron 完成初始化时触发），挂载上面创建的 桌面应用程序窗口</span>
app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>createWindow<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-配置-package-json-运行项目" tabindex="-1"><a class="header-anchor" href="#_1-4-配置-package-json-运行项目" aria-hidden="true">#</a> 1.4 配置 package json，运行项目</h3><h4 id="_1-4-1-运行项目后-出现的两个报错" tabindex="-1"><a class="header-anchor" href="#_1-4-1-运行项目后-出现的两个报错" aria-hidden="true">#</a> 1.4.1 运行项目后，出现的两个报错</h4><p>启动项目后，出现下面两个报错</p><figure><img src="https://i0.hdslb.com/bfs/album/c3930ad13d276b0464c2ec6f21e8d086d84698a3.png" alt="image-20230112211622286" tabindex="0" loading="lazy"><figcaption>image-20230112211622286</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/d97a2fcf5c1c54c2b7a5fd9acc150f7c50f769eb.png" alt="image-20230112211645212" tabindex="0" loading="lazy"><figcaption>image-20230112211645212</figcaption></figure><p>综上所述，需要在 package.json 中，增加 main 字段，去掉 type 字段</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-vue-vite&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist-electron/main/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Electron + Vue + Vite.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dselegent&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;electron&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;rollup&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;vue3&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;vue&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc --noEmit &amp;&amp; vite build&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@vitejs/plugin-vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^22.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-builder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^23.6.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.9.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vite&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.0.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vite-plugin-electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.11.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vite-plugin-electron-renderer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.11.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.2.45&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-tsc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.0.16&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-4-2-开发环境运行效果" tabindex="-1"><a class="header-anchor" href="#_1-4-2-开发环境运行效果" aria-hidden="true">#</a> 1.4.2 开发环境运行效果</h4><p>运行项目 <code>npm run dev</code></p><figure><img src="https://i0.hdslb.com/bfs/album/8f976933df64ef13215224dcb6d7f91672dab9df.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-打包-electron-桌面程序" tabindex="-1"><a class="header-anchor" href="#_2-打包-electron-桌面程序" aria-hidden="true">#</a> 2.打包 Electron 桌面程序</h2><h3 id="_3-1-安装打包依赖-调整打包命令" tabindex="-1"><a class="header-anchor" href="#_3-1-安装打包依赖-调整打包命令" aria-hidden="true">#</a> 3.1 安装打包依赖，调整打包命令</h3><p>安装打包依赖 <code>electron-builder</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> electron-builder <span class="token parameter variable">-D</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后，在 package json 中，配置 build 命令</p><p><code>&quot;build&quot;: &quot;vue-tsc --noEmit &amp;&amp; vite build &amp;&amp; electron-builder&quot;</code>,</p><h3 id="_3-2-增加-electron-builder-相关配置" tabindex="-1"><a class="header-anchor" href="#_3-2-增加-electron-builder-相关配置" aria-hidden="true">#</a> 3.2 增加 electron-builder 相关配置</h3><p>appId、productName... —— 应用基本信息信息</p><p>win、mac —— 不同类型设备配置</p><p>nsis—— 桌面应用程序安装过程的配置</p><p>在根目录配置<code>electron-builder.json5</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">/**
 * @see https://www.electron.build/configuration/configuration
 */</span>
<span class="token punctuation">{</span>
  appId<span class="token operator">:</span> &#39;com.electron.desktop&#39;<span class="token punctuation">,</span>
  asar<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  icon<span class="token operator">:</span> &#39;public/favicon.ico&#39;<span class="token punctuation">,</span>
  copyright<span class="token operator">:</span> &#39;Copyright © <span class="token number">2022</span> electron&#39;<span class="token punctuation">,</span>
  directories<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 输出路径</span>
    output<span class="token operator">:</span> &#39;release/$<span class="token punctuation">{</span>version<span class="token punctuation">}</span>&#39;<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  productName<span class="token operator">:</span> &#39;electron&#39;<span class="token punctuation">,</span>
  files<span class="token operator">:</span> <span class="token punctuation">[</span>&#39;dist-electron&#39;<span class="token punctuation">,</span> &#39;dist&#39;<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// mac 配置</span>
  mac<span class="token operator">:</span> <span class="token punctuation">{</span>
    artifactName<span class="token operator">:</span> &#39;$<span class="token punctuation">{</span>productName<span class="token punctuation">}</span>_$<span class="token punctuation">{</span>version<span class="token punctuation">}</span>.$<span class="token punctuation">{</span>ext<span class="token punctuation">}</span>&#39;<span class="token punctuation">,</span>
    target<span class="token operator">:</span> <span class="token punctuation">[</span>&#39;dmg&#39;<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// windows 配置</span>
  win<span class="token operator">:</span> <span class="token punctuation">{</span>
    target<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        target<span class="token operator">:</span> &#39;nsis&#39;<span class="token punctuation">,</span>
        arch<span class="token operator">:</span> <span class="token punctuation">[</span>&#39;x64&#39;<span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    artifactName<span class="token operator">:</span> &#39;$<span class="token punctuation">{</span>productName<span class="token punctuation">}</span>_$<span class="token punctuation">{</span>version<span class="token punctuation">}</span>.$<span class="token punctuation">{</span>ext<span class="token punctuation">}</span>&#39;<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 应用程序的安装过程配置</span>
  nsis<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 关闭了一键集成，因此会走 下一步、下一步、下一步... 进行安装</span>
    oneClick<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    perMachine<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    allowToChangeInstallationDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    deleteAppDataOnUninstall<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-nsis-桌面应用程序安装过程-配置一览" tabindex="-1"><a class="header-anchor" href="#_3-3-nsis-桌面应用程序安装过程-配置一览" aria-hidden="true">#</a> 3.3 nsis（桌面应用程序安装过程）配置一览</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
  <span class="token comment">// 一键安装程序、或者辅助安装程序（默认是一键安装）</span>
  <span class="token property">&quot;oneClick&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 是否允许请求提升，如果为 false，则用户必须使用提升的权限重新启动安装程序（仅作用于辅助安装程序）</span>
  <span class="token property">&quot;allowElevation&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> 
  <span class="token comment">// 是否允许修改安装目录（仅作用于辅助安装程序）</span>
  <span class="token property">&quot;allowToChangeInstallationDirectory&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 安装程序图标的路径</span>
  <span class="token property">&quot;installerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/timg.ico&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 卸载程序图标的路径</span>
  <span class="token property">&quot;uninstallerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/timg.ico&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 安装时头部图片路径（仅作用于辅助安装程序）</span>
  <span class="token property">&quot;installerHeader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/timg.ico&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 安装时标题图标（进度条上方）的路径（仅作用于一键安装程序）</span>
  <span class="token property">&quot;installerHeaderIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/timg.ico&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 安装完毕界面图片的路径，图片后缀.bmp，尺寸 164*314（仅作用于辅助安装程序）</span>
  <span class="token property">&quot;installerSidebar&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/installerSiddebar.bmp&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 开始卸载界面图片的路径，图片后缀.bmp，尺寸 164*314（仅作用于辅助安装程序）</span>
  <span class="token property">&quot;uninstallerSidebar&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/uninstallerSiddebar.bmp&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 控制面板中的卸载程序显示名称</span>
  <span class="token property">&quot;uninstallDisplayName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${productName}\${version}&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 是否创建桌面快捷方式</span>
  <span class="token property">&quot;createDesktopShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 是否创建开始菜单快捷方式</span>
  <span class="token property">&quot;createStartMenuShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 用于快捷方式的名称，默认为应用程序名称</span>
  <span class="token property">&quot;shortcutName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TestApp&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// NSIS 包含定制安装程序脚本的路径，安装过程中自行调用 (可用于写入注册表 开机自启动等操作)</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token string">&quot;script/installer.nsi&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 用于自定义安装程序的 NSIS 脚本的路径</span>
  <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token string">&quot;script/installer.nsi&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 是否在卸载时删除应用程序数据（仅作用于一键安装程序）</span>
  <span class="token property">&quot;deleteAppDataOnUninstall&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 完成后是否运行已安装的应用程序（对于辅助安装程序，应删除相应的复选框）</span>
  <span class="token property">&quot;runAfterFinish&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 是否为开始菜单快捷方式和程序文件目录创建子菜单，如果为 true，则使用公司名称</span>
  <span class="token property">&quot;menuCategory&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-执行打包-安装应用" tabindex="-1"><a class="header-anchor" href="#_3-4-执行打包-安装应用" aria-hidden="true">#</a> 3.4 执行打包，安装应用</h3><blockquote><p>npm run build</p></blockquote><p>打包成功后，生成的文件都放到了 release 目录下（之前是这么配置的）</p><p>双击 exe 结尾的文件，就能运行桌面应用程序了</p><figure><img src="https://i0.hdslb.com/bfs/album/5b5236d4a3afc8a161ccb1cb2b69be0d6eafd061.png" alt="image-20230112212528749" tabindex="0" loading="lazy"><figcaption>image-20230112212528749</figcaption></figure><h3 id="_3-5-主进程接收渲染进程消息时-在控制台输出乱码" tabindex="-1"><a class="header-anchor" href="#_3-5-主进程接收渲染进程消息时-在控制台输出乱码" aria-hidden="true">#</a> 3.5 主进程接收渲染进程消息时，在控制台输出乱码</h3><p>加上<code> chcp 65001</code> 输出中文</p><p>加上<code> cross-env NODE_ENV=development</code> 实现自定义开发时的环境变量</p><p>最终 dev 命令如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;chcp 65001 &amp;&amp; cross-env NODE_ENV=development vite&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-实现-渲染进程-主进程-通信-ipc" tabindex="-1"><a class="header-anchor" href="#_4-实现-渲染进程-主进程-通信-ipc" aria-hidden="true">#</a> 4.实现 渲染进程 / 主进程 通信（IPC）</h2><h3 id="_4-1-让-vite-支持-ipcrenderer" tabindex="-1"><a class="header-anchor" href="#_4-1-让-vite-支持-ipcrenderer" aria-hidden="true">#</a> 4.1 让 Vite 支持 ipcRenderer</h3><p>使用 ipcRenderer 进行通信</p><p>默认情况下，Vite 不支持 ipcRenderer，得安装插件<code> vite-plugin-electron-renderer</code> 让他支持，同时安装了<code> vite-plugin-electron-renderer</code>。</p><p>修改 <code>vite.config.ts</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> electron <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-electron&#39;</span>
<span class="token keyword">import</span> renderer <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-electron-renderer&#39;</span>
 
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">electron</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    main<span class="token operator">:</span> <span class="token punctuation">{</span>
       entry<span class="token operator">:</span> <span class="token string">&#39;electron/main/index.ts&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
   <span class="token comment">// Use Node.js API in the Renderer-process</span>
  <span class="token function">renderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    nodeIntegration<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">]</span><span class="token punctuation">,</span>
  build<span class="token operator">:</span><span class="token punctuation">{</span>
    emptyOutDir<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，就实现了让 Vite 支持 ipcRenderer</p><h2 id="_4-2-渲染进程发送消息-主进程接收消息" tabindex="-1"><a class="header-anchor" href="#_4-2-渲染进程发送消息-主进程接收消息" aria-hidden="true">#</a> 4.2 渲染进程发送消息，主进程接收消息</h2><p>渲染进程使用 ipcRenderer.send() 发送消息</p><p>在 vue 文件中，添加一个按钮，点击后通过 ipcRenderer 给主进程发消息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ipcRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">open</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 ipcRenderer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token number">12321</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主进程使用 ipcMain.on() 接收消息</p><p>在<code>electron/ main/index.ts</code>文件中，引入<code> ipcMain</code>，监听<code>.vue</code>文件发出的消息</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow<span class="token punctuation">,</span> ipcMain <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>
 
<span class="token comment">// 这段代码在 createWindow 创建窗口函数内执行</span>
ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;来了&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,80),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(t,[["render",i],["__file","10.html.vue"]]);export{r as default};
