const e=JSON.parse('{"key":"v-7ae0608c","path":"/professional_knowledge/software_engineer/07.html","title":"07 【面向对象方法学引论】","lang":"zh-CN","frontmatter":{"description":"07 【面向对象方法学引论】 ​ 面向对象技术强调在软件开发过程中面向客观世界或问题域中的事物，采用人类在认识客观世界的过程中普遍运用的思维方法，直观、自然地描述客观世界中的有关事物。 面向对象的分析方法是利用面向对象的信息建模概念，如实体、关系、属性等，同时运用封装、继承、多态等机制来构造模拟现实系统的方法。 传统的结构化设计方法的基本点是面向过程，系统被分解成若干个过程。而面向对象的方法是采用构造模型的观点，在系统的开发过程中，各个步骤的共同的目标是建造一个问题域的模型。在面向对象的设计中，初始元素是对象，然后将具有共同特征的对象归纳成类，组织类之间的等级关系，构造类库。在应用时，在类库中选择相应的类。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/professional_knowledge/software_engineer/07.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"07 【面向对象方法学引论】"}],["meta",{"property":"og:description","content":"07 【面向对象方法学引论】 ​ 面向对象技术强调在软件开发过程中面向客观世界或问题域中的事物，采用人类在认识客观世界的过程中普遍运用的思维方法，直观、自然地描述客观世界中的有关事物。 面向对象的分析方法是利用面向对象的信息建模概念，如实体、关系、属性等，同时运用封装、继承、多态等机制来构造模拟现实系统的方法。 传统的结构化设计方法的基本点是面向过程，系统被分解成若干个过程。而面向对象的方法是采用构造模型的观点，在系统的开发过程中，各个步骤的共同的目标是建造一个问题域的模型。在面向对象的设计中，初始元素是对象，然后将具有共同特征的对象归纳成类，组织类之间的等级关系，构造类库。在应用时，在类库中选择相应的类。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T02:59:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-23T02:59:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07 【面向对象方法学引论】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T02:59:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.面向对象方法学概述","slug":"_1-面向对象方法学概述","link":"#_1-面向对象方法学概述","children":[{"level":3,"title":"1.1 面向对象方法学的要点","slug":"_1-1-面向对象方法学的要点","link":"#_1-1-面向对象方法学的要点","children":[]},{"level":3,"title":"1.2 面向对象方法学的优点","slug":"_1-2-面向对象方法学的优点","link":"#_1-2-面向对象方法学的优点","children":[]}]},{"level":2,"title":"2.面向对象的概念","slug":"_2-面向对象的概念","link":"#_2-面向对象的概念","children":[{"level":3,"title":"2.1 对象","slug":"_2-1-对象","link":"#_2-1-对象","children":[]},{"level":3,"title":"2.2 其他概念","slug":"_2-2-其他概念","link":"#_2-2-其他概念","children":[]}]},{"level":2,"title":"3.面向对象模型","slug":"_3-面向对象模型","link":"#_3-面向对象模型","children":[]},{"level":2,"title":"4.对象模型","slug":"_4-对象模型","link":"#_4-对象模型","children":[{"level":3,"title":"4.1 类图的基本符号","slug":"_4-1-类图的基本符号","link":"#_4-1-类图的基本符号","children":[]},{"level":3,"title":"4.2 表示关系的符号","slug":"_4-2-表示关系的符号","link":"#_4-2-表示关系的符号","children":[]}]},{"level":2,"title":"5.动态模型","slug":"_5-动态模型","link":"#_5-动态模型","children":[]},{"level":2,"title":"6.功能模型","slug":"_6-功能模型","link":"#_6-功能模型","children":[{"level":3,"title":"6.1 用例图","slug":"_6-1-用例图","link":"#_6-1-用例图","children":[]},{"level":3,"title":"6.2 用例建模","slug":"_6-2-用例建模","link":"#_6-2-用例建模","children":[]}]},{"level":2,"title":"7.种模型之间的关系","slug":"_7-种模型之间的关系","link":"#_7-种模型之间的关系","children":[]},{"level":2,"title":"8.本章小结","slug":"_8-本章小结","link":"#_8-本章小结","children":[]}],"git":{"createdTime":1677121190000,"updatedTime":1677121190000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":35.27,"words":10580},"filePathRelative":"professional_knowledge/software_engineer/07.md","localizedDate":"2023年2月23日","excerpt":"<h1> 07 【面向对象方法学引论】</h1>\\n<p>​     面向对象技术强调在软件开发过程中面向客观世界或问题域中的事物，采用人类在认识客观世界的过程中普遍运用的思维方法，直观、自然地描述客观世界中的有关事物。</p>\\n<p>面向对象的分析方法是利用面向对象的信息建模概念，如实体、关系、属性等，同时运用封装、继承、多态等机制来构造模拟现实系统的方法。</p>\\n<p>传统的结构化设计方法的基本点是面向过程，系统被分解成若干个过程。而面向对象的方法是采用构造模型的观点，在系统的开发过程中，各个步骤的共同的目标是建造一个问题域的模型。在面向对象的设计中，初始元素是对象，然后将具有共同特征的对象归纳成类，组织类之间的等级关系，构造类库。在应用时，在类库中选择相应的类。</p>","autoDesc":true}');export{e as data};
