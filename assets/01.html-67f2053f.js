const e=JSON.parse('{"key":"v-6c412aac","path":"/tool/lint/01.html","title":"01 【JS 代码规范】","lang":"zh-CN","frontmatter":{"description":"01 【JS 代码规范】 1. 统一代码风格的重要性 1.1 为什么要统一代码风格 团队千千万，团队中每个人的代码风格也是千千万。比如有的同学写代码就喜欢用双引号，缩进用两个字符，而其他同学却可能更喜欢用单引号，四个字符缩进。而团队中的人一多，一往代码仓库提交代码，难免会出现下面这些情况： （1）如果没有统一代码风格，diff时可能会出现很多因为格式不同的问题，不便于我们查看提交代码所做的修改 如下图所示，提交的文件内容其实没有变化，只是代码风格变了（双引号变成了单引号，缩进从两个字符变成了四个字符），但是diff时大段代码会标红，不利于我们查看提交的修改。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/tool/lint/01.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"01 【JS 代码规范】"}],["meta",{"property":"og:description","content":"01 【JS 代码规范】 1. 统一代码风格的重要性 1.1 为什么要统一代码风格 团队千千万，团队中每个人的代码风格也是千千万。比如有的同学写代码就喜欢用双引号，缩进用两个字符，而其他同学却可能更喜欢用单引号，四个字符缩进。而团队中的人一多，一往代码仓库提交代码，难免会出现下面这些情况： （1）如果没有统一代码风格，diff时可能会出现很多因为格式不同的问题，不便于我们查看提交代码所做的修改 如下图所示，提交的文件内容其实没有变化，只是代码风格变了（双引号变成了单引号，缩进从两个字符变成了四个字符），但是diff时大段代码会标红，不利于我们查看提交的修改。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T02:54:58.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-23T02:54:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01 【JS 代码规范】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T02:54:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 统一代码风格的重要性","slug":"_1-统一代码风格的重要性","link":"#_1-统一代码风格的重要性","children":[{"level":3,"title":"1.1 为什么要统一代码风格","slug":"_1-1-为什么要统一代码风格","link":"#_1-1-为什么要统一代码风格","children":[]},{"level":3,"title":"1.2 如何统一代码风格","slug":"_1-2-如何统一代码风格","link":"#_1-2-如何统一代码风格","children":[]}]},{"level":2,"title":"2. ESLint","slug":"_2-eslint","link":"#_2-eslint","children":[{"level":3,"title":"2.1 什么是ESLint","slug":"_2-1-什么是eslint","link":"#_2-1-什么是eslint","children":[]},{"level":3,"title":"2.2 安装ESLint","slug":"_2-2-安装eslint","link":"#_2-2-安装eslint","children":[]},{"level":3,"title":"2.3 ESLint配置方式","slug":"_2-3-eslint配置方式","link":"#_2-3-eslint配置方式","children":[]},{"level":3,"title":"2.4 ESLint配置项解析","slug":"_2-4-eslint配置项解析","link":"#_2-4-eslint配置项解析","children":[]},{"level":3,"title":"2.5 运行ESLint检查文件","slug":"_2-5-运行eslint检查文件","link":"#_2-5-运行eslint检查文件","children":[]},{"level":3,"title":"2.6 跳过ESLint的检查","slug":"_2-6-跳过eslint的检查","link":"#_2-6-跳过eslint的检查","children":[]}]},{"level":2,"title":"3. Prettier","slug":"_3-prettier","link":"#_3-prettier","children":[{"level":3,"title":"3.1 什么是Prettier","slug":"_3-1-什么是prettier","link":"#_3-1-什么是prettier","children":[]},{"level":3,"title":"3.2 为什么要用Prettier","slug":"_3-2-为什么要用prettier","link":"#_3-2-为什么要用prettier","children":[]},{"level":3,"title":"3.3 安装Prettier","slug":"_3-3-安装prettier","link":"#_3-3-安装prettier","children":[]},{"level":3,"title":"3.4 安装eslint-config-prettier","slug":"_3-4-安装eslint-config-prettier","link":"#_3-4-安装eslint-config-prettier","children":[]},{"level":3,"title":"3.5 安装eslint-plugin-prettier","slug":"_3-5-安装eslint-plugin-prettier","link":"#_3-5-安装eslint-plugin-prettier","children":[]},{"level":3,"title":"3.6 配置文件","slug":"_3-6-配置文件","link":"#_3-6-配置文件","children":[]},{"level":3,"title":"3.7 忽略某些文件的格式化","slug":"_3-7-忽略某些文件的格式化","link":"#_3-7-忽略某些文件的格式化","children":[]}]},{"level":2,"title":"4. VSCode插件","slug":"_4-vscode插件","link":"#_4-vscode插件","children":[{"level":3,"title":"4.1 安装VSCode插件","slug":"_4-1-安装vscode插件","link":"#_4-1-安装vscode插件","children":[]},{"level":3,"title":"4.2 配置settings.json文件","slug":"_4-2-配置settings-json文件","link":"#_4-2-配置settings-json文件","children":[]},{"level":3,"title":"4.3 配置EditorConfig文件","slug":"_4-3-配置editorconfig文件","link":"#_4-3-配置editorconfig文件","children":[]}]}],"git":{"createdTime":1676529494000,"updatedTime":1677120898000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":2}]},"readingTime":{"minutes":18.65,"words":5594},"filePathRelative":"tool/lint/01.md","localizedDate":"2023年2月16日","excerpt":"<h1> 01 【JS 代码规范】</h1>\\n<h2> 1. 统一代码风格的重要性</h2>\\n<h3> 1.1 为什么要统一代码风格</h3>\\n<p>团队千千万，团队中每个人的代码风格也是千千万。比如有的同学写代码就喜欢用双引号，缩进用两个字符，而其他同学却可能更喜欢用单引号，四个字符缩进。而团队中的人一多，一往代码仓库提交代码，难免会出现下面这些情况：</p>\\n<p><strong>（1）如果没有统一代码风格，diff时可能会出现很多因为格式不同的问题，不便于我们查看提交代码所做的修改</strong></p>\\n<p>如下图所示，提交的文件内容其实没有变化，只是代码风格变了（双引号变成了单引号，缩进从两个字符变成了四个字符），但是diff时大段代码会标红，不利于我们查看提交的修改。</p>","autoDesc":true}');export{e as data};
