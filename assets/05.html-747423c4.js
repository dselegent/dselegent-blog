const n=JSON.parse(`{"key":"v-b3b8d794","path":"/front_end/front_end_framework/react/05.html","title":"05 【条件渲染】","lang":"zh-CN","frontmatter":{"description":"05 【条件渲染】 在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后，依据应用的不同状态，你可以只渲染对应状态下的部分内容。 基础配置 &lt;style&gt; .other { color: #ff0000; } &lt;/style&gt; &lt;body&gt; &lt;div id=\\"app\\"&gt;&lt;/div&gt; &lt;script type=\\"text/babel\\"&gt; class Demo extends React.Component { state = { type: 1, isLogin:false } render() { const {type} = this.state return ( &lt;div&gt; {type} &lt;/div&gt; ); } } ReactDOM.render(&lt;Demo/&gt;, document.getElementById('app')) &lt;/script&gt;","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/front_end/front_end_framework/react/05.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"05 【条件渲染】"}],["meta",{"property":"og:description","content":"05 【条件渲染】 在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后，依据应用的不同状态，你可以只渲染对应状态下的部分内容。 基础配置 &lt;style&gt; .other { color: #ff0000; } &lt;/style&gt; &lt;body&gt; &lt;div id=\\"app\\"&gt;&lt;/div&gt; &lt;script type=\\"text/babel\\"&gt; class Demo extends React.Component { state = { type: 1, isLogin:false } render() { const {type} = this.state return ( &lt;div&gt; {type} &lt;/div&gt; ); } } ReactDOM.render(&lt;Demo/&gt;, document.getElementById('app')) &lt;/script&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05 【条件渲染】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基础配置","slug":"基础配置","link":"#基础配置","children":[]},{"level":2,"title":"1.条件判断语句","slug":"_1-条件判断语句","link":"#_1-条件判断语句","children":[]},{"level":2,"title":"2.三目运算符","slug":"_2-三目运算符","link":"#_2-三目运算符","children":[]},{"level":2,"title":"3.与运算符&&","slug":"_3-与运算符","link":"#_3-与运算符","children":[]},{"level":2,"title":"4.元素变量","slug":"_4-元素变量","link":"#_4-元素变量","children":[]},{"level":2,"title":"5.阻止组件渲染","slug":"_5-阻止组件渲染","link":"#_5-阻止组件渲染","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":3.99,"words":1197},"filePathRelative":"front_end/front_end_framework/react/05.md","localizedDate":"2023年1月30日","excerpt":"<h1> 05 【条件渲染】</h1>\\n<p>在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后，依据应用的不同状态，你可以只渲染对应状态下的部分内容。</p>\\n<h2> 基础配置</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token operator\\">&lt;</span>style<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token punctuation\\">.</span>other <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">color</span><span class=\\"token operator\\">:</span> #ff0000<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>style<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span>body<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span>div id<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"app\\"</span><span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token operator\\">&lt;</span>script type<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"text/babel\\"</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Demo</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">React<span class=\\"token punctuation\\">.</span>Component</span> <span class=\\"token punctuation\\">{</span>\\n    state <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">isLogin</span><span class=\\"token operator\\">:</span><span class=\\"token boolean\\">false</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>type<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>state\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n            <span class=\\"token operator\\">&lt;</span>div<span class=\\"token operator\\">&gt;</span>\\n                <span class=\\"token punctuation\\">{</span>type<span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nReactDOM<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&lt;</span>Demo<span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">,</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getElementById</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'app'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
