import{ab as e,G as o,H as c,E as n,S as s,N as p,ac as a,W as l}from"./framework-09305b5d.js";const i={},u=n("h1",{id:"_11-【组件通信】",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_11-【组件通信】","aria-hidden":"true"},"#"),s(" 11 【组件通信】")],-1),r=n("h2",{id:"_1-props",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-props","aria-hidden":"true"},"#"),s(" 1.props")],-1),d=n("p",null,"适用于的场景:父子组件通信",-1),k=n("p",null,"注意事项:",-1),v=n("p",null,"如果父组件给子组件传递数据(函数):本质其实是子组件给父组件传递数据",-1),g=n("p",null,"如果父组件给子组件传递数据(非函数):本质就是父组件给子组件传递数据",-1),m=n("p",null,"书写方式:3种",-1),b=n("p",{"type:Array,default:[]":""},"['todos'],{type:Array},",-1),h=a('<p>特殊情况：路由传递props 1:布尔值类型，把路由中params参数映射为组件props数据 2:对象，静态数据，很少用 3:函数，可以把路由中params|query参数映射为组件props数据</p><h2 id="_2-自定义事件" tabindex="-1"><a class="header-anchor" href="#_2-自定义事件" aria-hidden="true">#</a> 2.自定义事件</h2><p>使用于场景:子组件给父组件传递数据</p><p>$on与$emit</p><ul><li>$emit绑定一个自定义事件event，当这个这个语句被执行到的时候，就会将参数arg传递给父组件，父组件通过@event监听并接收参数。</li></ul><h2 id="_3-全局事件总线-bus" tabindex="-1"><a class="header-anchor" href="#_3-全局事件总线-bus" aria-hidden="true">#</a> 3.全局事件总线$bus</h2><p>使用于场景:万能</p><p>组件实例的原型的原型指向的Vue.prototype</p><p>Vue.prototype.$bus = this;</p><ul><li>对于比较小型的项目，没有必要引入 vuex 的情况下，可以使用 eventBus。</li><li>它的实现思想也很好理解，在要相互通信的两个组件中，都引入同一个新的vue实例，然后在两个组件中通过分别调用这个实例的事件触发和监听来实现通信。</li></ul><h2 id="_4-pubsub-js" tabindex="-1"><a class="header-anchor" href="#_4-pubsub-js" aria-hidden="true">#</a> 4.pubsub-js</h2><p>适用于场景:万能</p><p>vue当中几乎不用（因为vue中有全局事件总线和这个第三方提供的库功能重复）</p>',13),f={href:"https://so.csdn.net/so/search?q=React&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},y=a(`<h2 id="_5-vuex" tabindex="-1"><a class="header-anchor" href="#_5-vuex" aria-hidden="true">#</a> 5.Vuex</h2><p>适用于场景:万能</p><p>数据非持久化</p><p>核心概念： State：保存所有组件的共享状态 Getters：类似状态值的计算属性 Mutations：修改 State中状态值的唯一方法，里面包含状态变化监听器和记录器 Actions：用于异步处理 State中状态值，异步函数结束后调用Mutations Modules：当一个 State 对象比较庞大时，可以将 State 分割成多个Modules 模块。</p><h2 id="_6-插槽" tabindex="-1"><a class="header-anchor" href="#_6-插槽" aria-hidden="true">#</a> 6.插槽</h2><p>适用于场景:父子组件通信 --- (结构)</p><p>默认插槽 具名插槽 作用域插槽:子组件的数据来源于父组件，但是子组件的自己的结构有父亲决定。</p><ul><li>插槽就是子组件中的提供给父组件使用的一个占位符，用<code>&lt;slot&gt;&lt;/slot&gt;</code> 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的<code>&lt;slot&gt;&lt;/slot&gt;</code>标签。</li></ul><h2 id="_7-小总结" tabindex="-1"><a class="header-anchor" href="#_7-小总结" aria-hidden="true">#</a> 7.小总结</h2><ol><li>可以实现任意组件的通信的方法有两个：事件总线 和 Vuex，事件总线难维护数据但轻量，Vux维护数据方便但比较重量。</li><li>可以实现父与子孙跨越层级通信的方法也有两个：<code>$attrs/$listeners</code> 和 <code>provide/inject</code> ，<code>$attrs/$listeners </code>具有响应性且可以双向通信，<code>provide/inject</code>无响应性且只能单向通信（父传子）</li><li>只能实现父与子组件通信的方法有一个：<code>props/emit</code>，方法比较基础，适合只有父子组件通信的方法，若想跨层级通信需要中间组件做转发，比较麻烦。</li></ol><h2 id="_8-v-model" tabindex="-1"><a class="header-anchor" href="#_8-v-model" aria-hidden="true">#</a> 8.v-model</h2><p><code>CustomInput.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>input包装组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 
      :value 动态数据v-bind
      @input 给原生DOM绑定原生DOM事件
    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(&#39;input&#39;,$event.target.value)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;CustomInput&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ModelTest.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 深入学习v-model:实现父子组件数据同步(实现父子组件通信) --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- 
      组件身上的:value是props,父子组件通信
      这里的@input是 非原生DOM的input事件 ,属于自定义事件
    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CustomInput</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg = $event<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!--上面那种写法可以简化为下面这种写法,可以实现父子组件数据同步,
    v-model不仅可以在表单元素身上使用,还可以在非表单元素身上使用,
    后台管理系统中经常在非表单元素身上,或者已经封装好的身上v-model--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CustomInput</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> CustomInput <span class="token keyword">from</span> <span class="token string">&#39;./CustomInput.vue&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ModelTest&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    CustomInput
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;我爱你中国&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/863ff5e9ee926c07deba0703b73be3ccd24cd0be.png" alt="image-20220720160842780" tabindex="0" loading="lazy"><figcaption>image-20220720160842780</figcaption></figure><h2 id="_9-属性修饰符-sync" tabindex="-1"><a class="header-anchor" href="#_9-属性修饰符-sync" aria-hidden="true">#</a> 9.属性修饰符.sync</h2><h3 id="_9-1-基础结构" tabindex="-1"><a class="header-anchor" href="#_9-1-基础结构" aria-hidden="true">#</a> 9.1 基础结构</h3><p><code>SyncTest.vue</code></p><figure><img src="https://i0.hdslb.com/bfs/album/3008f2f3306613b761c30d1b9fe608ba4c5000cd.png" alt="image-20220720161216737" tabindex="0" loading="lazy"><figcaption>image-20220720161216737</figcaption></figure><p>效果:</p><figure><img src="https://i0.hdslb.com/bfs/album/19b66b760694909f499aa2aaae13ffa23698f336.png" alt="image-20220720161239089" tabindex="0" loading="lazy"><figcaption>image-20220720161239089</figcaption></figure><h3 id="_9-2-不使用sync修饰符" tabindex="-1"><a class="header-anchor" href="#_9-2-不使用sync修饰符" aria-hidden="true">#</a> 9.2 不使用sync修饰符</h3><p><code>SyncTest.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    小明的爸爸现在有{{money}}元
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>不使用sync修改符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 
      :money 父组件给子组件传递props
      @update:money给子组件绑定的自定义事件,只不过名字叫做update:money
      目前这种操作,其实和v-model很相似,可以实现父子组件数据同步
      money=$event 给monet重新赋值,为子组件传回来的数据
    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">:money</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">@update:</span>money</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money = $event<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>使用sync修改符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">&#39;./Child.vue&#39;</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;SyncTest&#39;</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">10000</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      Child<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Child.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>小明每次花100元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- $emit触发自定义事件,第一个参数是触发自定义事件的名字,
    第二个参数是子组件需要把父亲还剩多少钱告诉父亲 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(&#39;update:money&#39;,money-100)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>花钱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    爸爸还剩{{money}}元
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;money&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><figure><img src="https://i0.hdslb.com/bfs/album/260da592b2db6f54d7b574df17a61c9ab3856330.png" alt="image-20220720161712884" tabindex="0" loading="lazy"><figcaption>image-20220720161712884</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/260da592b2db6f54d7b574df17a61c9ab3856330.png" alt="image-20220720161627872" tabindex="0" loading="lazy"><figcaption>image-20220720161627872</figcaption></figure><h3 id="_9-3-使用sync修饰符" tabindex="-1"><a class="header-anchor" href="#_9-3-使用sync修饰符" aria-hidden="true">#</a> 9.3 使用sync修饰符</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    小明的爸爸现在有{{money}}元
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>使用sync修改符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 
      :money.sync的作用:
      第一,父组件给子组件传递props money
      第二,给当前子组件绑定了自定义事件,而且事件名称即为update:money
    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">:money.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">&#39;./Child.vue&#39;</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;SyncTest&#39;</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">10000</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      Child<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>:money.sync,代表父组件给子组件传递props[money],给当前子组件绑定一个自定义事件(update:money)</p></blockquote><h2 id="_10-attrs和-listeners" tabindex="-1"><a class="header-anchor" href="#_10-attrs和-listeners" aria-hidden="true">#</a> 10. $attrs和$listeners</h2>`,34),q={id:"_10-1-封装elementui按钮-并且是带hover提示的按钮",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#_10-1-封装elementui按钮-并且是带hover提示的按钮","aria-hidden":"true"},"#",-1),x={href:"https://so.csdn.net/so/search?q=ElementUI&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},$=a(`<p>新建<code>HintButton</code>,里面放一个index.vue,这个文件用来封装按钮</p><figure><img src="https://i0.hdslb.com/bfs/album/e0eea44a2f57235a5529a71677a8c81ba57df973.png" alt="image-20220720162833922" tabindex="0" loading="lazy"><figcaption>image-20220720162833922</figcaption></figure><p><code>AttrsListenersTest.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>自定义带Hover提示的按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 当用户再使用我们封装的按钮的时候,需要向HintButton组件传递相应的参数 (我们这里做的就是el-button二次封装) --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HintButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-icon-delete<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mini<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提示按钮<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HintButton</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> HintButton <span class="token keyword">from</span> <span class="token string">&#39;./HintButton/index.vue&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;AttrsListenersTest&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">//点击事件的回调</span>
      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> HintButton <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>HintButton</code></p><p>这回我们子组件接收父组件传递过来的参数,我们就不用props了,我们利用组件实例身上的一个属性$attrs也可以接收父组件传递给子组件的数据</p><p>在子组件中打印一下$attrs</p><figure><img src="https://i0.hdslb.com/bfs/album/7dd31b238d3a65276250e1013e6f3479b7ca03ba.png" alt="image-20220720163113596" tabindex="0" loading="lazy"><figcaption>image-20220720163113596</figcaption></figure><p>我们注释<code>props:[&#39;title&#39;]</code>,利用$attrs接收参数的时候,会发现参数全部接收到了</p><figure><img src="https://i0.hdslb.com/bfs/album/2289cec83ac368a4330248e141770fcbeca6bdf5.png" alt="image-20220720163132358" tabindex="0" loading="lazy"><figcaption>image-20220720163132358</figcaption></figure><p>我们打开<code>props:[&#39;title&#39;]</code>,利用$attrs接收参数的时候,会发现参数除了props接收的title,其他参数都被$attrs接收了</p><figure><img src="https://i0.hdslb.com/bfs/album/a7e3d910472742d24b889b6364add8675931461a.png" alt="image-20220720163223688" tabindex="0" loading="lazy"><figcaption>image-20220720163223688</figcaption></figure><blockquote><p>所以,这里可以总结为:对于子组件而言,父组件给的数据可以利用props接收,注意,如果子组件通过props接收的属性,在$attrs属性当中是获取不到的</p></blockquote><p>因为我们需要封装ElementUI按钮,并且是带Hover提示的按钮</p><p>在<code>HintButton/index.vue</code>中:</p><p>我们在el-button外面来一个a标签,因为a标签有一个title属性,就带有提示功能</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 可以巧妙利用a标签实现按钮带有提示功能 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 
        这是复杂的写法,也可以实现效果,但是当属性过多的时候就很麻烦了
        &lt;el-button :type=&quot;$attrs.type&quot; :icon=&quot;$attrs.icon&quot; :size=&quot;$attrs.size&quot;&gt;&lt;/el-button&gt;
      --&gt;</span>
      <span class="token comment">&lt;!-- 下面这种写法v-bind不能用 : 不然没效果,这是简单的写法实现效果 --&gt;</span>
      <span class="token comment">&lt;!-- v-on也不能用 @ 不然没效果--&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$attrs<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$listeners<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//$attrs属于组件实例自身的一个属性,可以获取到父组件传递过来的props数据</span>
      <span class="token comment">//对于子组件而言,父组件给的数据可以利用props接收,</span>
      <span class="token comment">//注意,如果子组件通过props接收的属性,在$attrs属性当中是获取不到的</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//$listeners,它也是组件实例自身的一个属性,它可以获取到父组件给子组件传递的自定义事件</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$listeners<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/c4c72b3fcfd8d8262ae439849e0f2e326d58fc6d.png" alt="image-20220720163348444" tabindex="0" loading="lazy"><figcaption>image-20220720163348444</figcaption></figure><h3 id="_10-2-listeners获取父组件给子组件传递的自定义事件" tabindex="-1"><a class="header-anchor" href="#_10-2-listeners获取父组件给子组件传递的自定义事件" aria-hidden="true">#</a> 10.2 $listeners获取父组件给子组件传递的自定义事件</h3><p>这个时候我们想给按钮绑定一个点击事件,点击弹出一个666什么的,我们知道HintButton是一个组件,在组件身上写@click他就变成了自定义事件了</p><p>@click.native其实是可以解决的,但是我们这里有另外的解决办法,所以我这样来演示:</p><p>父组件绑定自定义事件</p><figure><img src="https://i0.hdslb.com/bfs/album/b09e64028d9508c701ec3ad42e5e93739b339411.png" alt="image-20220720163615015" tabindex="0" loading="lazy"><figcaption>image-20220720163615015</figcaption></figure><p>我们想给<code>HintButton</code>绑定单击事件 实际上是给el-button绑定单击事件</p><p>我们先看看<code>$listeners</code>身上有没有父组件传递过来的自定义事件,并且利用v-on来给el-button绑定单击事件</p><p>在<code>HintButton/index.vue</code>中:</p><p>子组件中</p><figure><img src="https://i0.hdslb.com/bfs/album/884f009b73780b496eb9c4f25f13067bcf2d0d01.png" alt="image-20220720163647822" tabindex="0" loading="lazy"><figcaption>image-20220720163647822</figcaption></figure><p>打印发现:$listeners确实可以获取父组件给子组件传递的自定义事件</p><figure><img src="https://i0.hdslb.com/bfs/album/46636f193d20bda03b3e43162ac98b6adddd24ab.png" alt="image-20220720163745480" tabindex="0" loading="lazy"><figcaption>image-20220720163745480</figcaption></figure><p>此时我们再点击一个按钮,会发现成功弹出了666</p><figure><img src="https://i0.hdslb.com/bfs/album/65d1b619c2946088b18e6298c31a5a989b722014.png" alt="image-20220720163812048" tabindex="0" loading="lazy"><figcaption>image-20220720163812048</figcaption></figure><h3 id="_10-3-总结" tabindex="-1"><a class="header-anchor" href="#_10-3-总结" aria-hidden="true">#</a> 10.3 总结</h3><p>$listeners与$attrs(组件通信方式的一种)</p><p>他们两者都是组件实例的属性,可以获取到父组件给子组件传递的props与自定义事件</p>`,35);function w(C,z){const t=l("ExternalLinkIcon");return o(),c("div",null,[u,r,d,k,v,g,m,b,h,n("p",null,[s("在"),n("a",f,[s("React"),p(t)]),s("框架中使用比较多(发布与订阅)")]),y,n("h3",q,[_,s(" 10.1 封装"),n("a",x,[s("ElementUI"),p(t)]),s("按钮,并且是带Hover提示的按钮")]),$])}const B=e(i,[["render",w],["__file","11.html.vue"]]);export{B as default};
