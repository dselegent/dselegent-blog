const l=JSON.parse('{"key":"v-9c48931c","path":"/front_end/front_end_base/html_css/19.html","title":"19 【flex布局】","lang":"zh-CN","frontmatter":{"description":"19 【flex布局】 1.flex布局体验 1.1 传统布局与flex布局 【传统布局】 兼容性好 布局繁琐 局限性，不能在移动端很好的布局 【flex布局】 操作方便，布局极为简单，移动端应用很广泛 PC 端浏览器支持情况较差 IE11 或更低版本不支持或仅部分支持 建议： 如果是 PC 端页面布局，我们还是建议使用传统布局 如果是移动端或者不考虑兼容性问题的 PC 端页面布局，推荐使用 flex 弹性布局","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/front_end/front_end_base/html_css/19.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"19 【flex布局】"}],["meta",{"property":"og:description","content":"19 【flex布局】 1.flex布局体验 1.1 传统布局与flex布局 【传统布局】 兼容性好 布局繁琐 局限性，不能在移动端很好的布局 【flex布局】 操作方便，布局极为简单，移动端应用很广泛 PC 端浏览器支持情况较差 IE11 或更低版本不支持或仅部分支持 建议： 如果是 PC 端页面布局，我们还是建议使用传统布局 如果是移动端或者不考虑兼容性问题的 PC 端页面布局，推荐使用 flex 弹性布局"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-03T03:34:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-03T03:34:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"19 【flex布局】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-03T03:34:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.flex布局体验","slug":"_1-flex布局体验","link":"#_1-flex布局体验","children":[{"level":3,"title":"1.1 传统布局与flex布局","slug":"_1-1-传统布局与flex布局","link":"#_1-1-传统布局与flex布局","children":[]},{"level":3,"title":"1.2 初体验","slug":"_1-2-初体验","link":"#_1-2-初体验","children":[]}]},{"level":2,"title":"2.flex布局原理","slug":"_2-flex布局原理","link":"#_2-flex布局原理","children":[]},{"level":2,"title":"3.常见弹性容器属性","slug":"_3-常见弹性容器属性","link":"#_3-常见弹性容器属性","children":[]},{"level":2,"title":"4.flex-direction设置主轴的方向","slug":"_4-flex-direction设置主轴的方向","link":"#_4-flex-direction设置主轴的方向","children":[]},{"level":2,"title":"5.justify-content设置主轴上的子元素排列方式","slug":"_5-justify-content设置主轴上的子元素排列方式","link":"#_5-justify-content设置主轴上的子元素排列方式","children":[]},{"level":2,"title":"6.flex-wrap设置子元素是否换行","slug":"_6-flex-wrap设置子元素是否换行","link":"#_6-flex-wrap设置子元素是否换行","children":[]},{"level":2,"title":"7.flex-flow复合属性","slug":"_7-flex-flow复合属性","link":"#_7-flex-flow复合属性","children":[]},{"level":2,"title":"8.align-items设置侧轴上的子元素排列方式（单行）","slug":"_8-align-items设置侧轴上的子元素排列方式-单行","link":"#_8-align-items设置侧轴上的子元素排列方式-单行","children":[]},{"level":2,"title":"9.align-content 设置侧轴上的子元素的排列方式（多行）","slug":"_9-align-content-设置侧轴上的子元素的排列方式-多行","link":"#_9-align-content-设置侧轴上的子元素的排列方式-多行","children":[]},{"level":2,"title":"10.align-content和align-items区别","slug":"_10-align-content和align-items区别","link":"#_10-align-content和align-items区别","children":[]},{"level":2,"title":"11.常见弹性元素属性","slug":"_11-常见弹性元素属性","link":"#_11-常见弹性元素属性","children":[]},{"level":2,"title":"12.伸展系数","slug":"_12-伸展系数","link":"#_12-伸展系数","children":[{"level":3,"title":"12.1 flex-grow基础","slug":"_12-1-flex-grow基础","link":"#_12-1-flex-grow基础","children":[]},{"level":3,"title":"12.2 flow-grow应用","slug":"_12-2-flow-grow应用","link":"#_12-2-flow-grow应用","children":[]},{"level":3,"title":"3.12.3 总结","slug":"_3-12-3-总结","link":"#_3-12-3-总结","children":[]}]},{"level":2,"title":"13.缩减系数","slug":"_13-缩减系数","link":"#_13-缩减系数","children":[{"level":3,"title":"13.1 flex-shrink基础","slug":"_13-1-flex-shrink基础","link":"#_13-1-flex-shrink基础","children":[]},{"level":3,"title":"13.2 总结","slug":"_13-2-总结","link":"#_13-2-总结","children":[]}]},{"level":2,"title":"14.基础长度","slug":"_14-基础长度","link":"#_14-基础长度","children":[{"level":3,"title":"14.1 flex-basis基础","slug":"_14-1-flex-basis基础","link":"#_14-1-flex-basis基础","children":[]},{"level":3,"title":"3.14.2 总结","slug":"_3-14-2-总结","link":"#_3-14-2-总结","children":[]}]},{"level":2,"title":"15.flex属性","slug":"_15-flex属性","link":"#_15-flex属性","children":[]},{"level":2,"title":"16.order属性定义项目的排列顺序","slug":"_16-order属性定义项目的排列顺序","link":"#_16-order属性定义项目的排列顺序","children":[]},{"level":2,"title":"17.align-self属性","slug":"_17-align-self属性","link":"#_17-align-self属性","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1677814492000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":2}]},"readingTime":{"minutes":27.02,"words":8107},"filePathRelative":"front_end/front_end_base/html_css/19.md","localizedDate":"2023年1月30日","excerpt":"<h1> 19 【flex布局】</h1>\\n<h2> 1.flex布局体验</h2>\\n<h3> 1.1 传统布局与flex布局</h3>\\n<p>【传统布局】</p>\\n<ul>\\n<li>\\n<p>兼容性好</p>\\n</li>\\n<li>\\n<p>布局繁琐</p>\\n</li>\\n<li>\\n<p>局限性，不能在移动端很好的布局</p>\\n</li>\\n</ul>\\n<p>【flex布局】</p>\\n<ul>\\n<li>操作方便，布局极为简单，移动端应用很广泛</li>\\n<li>PC 端浏览器支持情况较差</li>\\n<li>IE11 或更低版本不支持或仅部分支持</li>\\n</ul>\\n<p>建议：</p>\\n<ol>\\n<li>如果是 PC 端页面布局，我们还是建议使用传统布局</li>\\n<li>如果是移动端或者不考虑兼容性问题的 PC 端页面布局，推荐使用 flex 弹性布局</li>\\n</ol>","autoDesc":true}');export{l as data};
