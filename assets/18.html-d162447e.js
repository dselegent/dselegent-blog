const e=JSON.parse('{"key":"v-670b1ae1","path":"/back_end/nodeJs/18.html","title":"18 【Koa基本使用】","lang":"zh-CN","frontmatter":{"description":"18 【Koa基本使用】 1.简介 image-20221231151037428 koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/back_end/nodeJs/18.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"18 【Koa基本使用】"}],["meta",{"property":"og:description","content":"18 【Koa基本使用】 1.简介 image-20221231151037428 koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18 【Koa基本使用】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2.快速开始","slug":"_2-快速开始","link":"#_2-快速开始","children":[{"level":3,"title":"2.1 安装koa2","slug":"_2-1-安装koa2","link":"#_2-1-安装koa2","children":[]},{"level":3,"title":"2.2 hello world 代码","slug":"_2-2-hello-world-代码","link":"#_2-2-hello-world-代码","children":[]},{"level":3,"title":"2.3 启动","slug":"_2-3-启动","link":"#_2-3-启动","children":[]}]},{"level":2,"title":"3. koa vs express","slug":"_3-koa-vs-express","link":"#_3-koa-vs-express","children":[{"level":3,"title":"3.1更轻量","slug":"_3-1更轻量","link":"#_3-1更轻量","children":[]},{"level":3,"title":"3.2 Context对象","slug":"_3-2-context对象","link":"#_3-2-context对象","children":[]},{"level":3,"title":"3.3 异步流程控制","slug":"_3-3-异步流程控制","link":"#_3-3-异步流程控制","children":[]},{"level":3,"title":"3.4 中间件模型","slug":"_3-4-中间件模型","link":"#_3-4-中间件模型","children":[]}]},{"level":2,"title":"4. 路由","slug":"_4-路由","link":"#_4-路由","children":[{"level":3,"title":"4.1基本用发","slug":"_4-1基本用发","link":"#_4-1基本用发","children":[]},{"level":3,"title":"4.2 router.allowedMethods作用","slug":"_4-2-router-allowedmethods作用","link":"#_4-2-router-allowedmethods作用","children":[]},{"level":3,"title":"4.3 请求方式","slug":"_4-3-请求方式","link":"#_4-3-请求方式","children":[]},{"level":3,"title":"4.4 拆分路由","slug":"_4-4-拆分路由","link":"#_4-4-拆分路由","children":[]},{"level":3,"title":"4.5 路由前缀","slug":"_4-5-路由前缀","link":"#_4-5-路由前缀","children":[]},{"level":3,"title":"4.6 路由重定向","slug":"_4-6-路由重定向","link":"#_4-6-路由重定向","children":[]}]},{"level":2,"title":"5. 静态资源","slug":"_5-静态资源","link":"#_5-静态资源","children":[]},{"level":2,"title":"6.  获取请求参数","slug":"_6-获取请求参数","link":"#_6-获取请求参数","children":[{"level":3,"title":"6.1 get参数","slug":"_6-1-get参数","link":"#_6-1-get参数","children":[]},{"level":3,"title":"6.2 post参数","slug":"_6-2-post参数","link":"#_6-2-post参数","children":[]}]},{"level":2,"title":"7. ejs模板","slug":"_7-ejs模板","link":"#_7-ejs模板","children":[{"level":3,"title":"7.1 安装模块","slug":"_7-1-安装模块","link":"#_7-1-安装模块","children":[]},{"level":3,"title":"7.2 使用模板引擎","slug":"_7-2-使用模板引擎","link":"#_7-2-使用模板引擎","children":[]}]},{"level":2,"title":"8. cookie&session","slug":"_8-cookie-session","link":"#_8-cookie-session","children":[{"level":3,"title":"8.1 cookie","slug":"_8-1-cookie","link":"#_8-1-cookie","children":[]},{"level":3,"title":"8.2 session","slug":"_8-2-session","link":"#_8-2-session","children":[]}]},{"level":2,"title":"9.图片上传","slug":"_9-图片上传","link":"#_9-图片上传","children":[{"level":3,"title":"9.1 环境","slug":"_9-1-环境","link":"#_9-1-环境","children":[]},{"level":3,"title":"9.2 代码结构","slug":"_9-2-代码结构","link":"#_9-2-代码结构","children":[]},{"level":3,"title":"9.3 实现","slug":"_9-3-实现","link":"#_9-3-实现","children":[]}]},{"level":2,"title":"10.记录日志","slug":"_10-记录日志","link":"#_10-记录日志","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":8.14,"words":2442},"filePathRelative":"back_end/nodeJs/18.md","localizedDate":"2023年1月30日","excerpt":"<h1> 18 【Koa基本使用】</h1>\\n<h2> 1.简介</h2>\\n<figure><img src=\\"https://i0.hdslb.com/bfs/album/143d174518b6a8dc724b126198b11f07fdac90f7.png\\" alt=\\"image-20221231151037428\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20221231151037428</figcaption></figure>\\n<p>koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。</p>","autoDesc":true}');export{e as data};
