const e=JSON.parse('{"key":"v-46f6440e","path":"/front_end/front_end_base/html_css/23.html","title":"23 【grid布局】","lang":"zh-CN","frontmatter":{"description":"23 【grid布局】 1.概述 网格布局（Grid）是最强大的 CSS 布局方案。 它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。 上图这样的布局，就是 Grid 布局的拿手好戏。 Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内多个项目的位置。但是它们也存在重大区别。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/front_end/front_end_base/html_css/23.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"23 【grid布局】"}],["meta",{"property":"og:description","content":"23 【grid布局】 1.概述 网格布局（Grid）是最强大的 CSS 布局方案。 它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。 上图这样的布局，就是 Grid 布局的拿手好戏。 Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内多个项目的位置。但是它们也存在重大区别。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-03T03:34:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-03T03:34:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"23 【grid布局】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-03T03:34:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2.基本概念","slug":"_2-基本概念","link":"#_2-基本概念","children":[{"level":3,"title":"2.1 容器和项目","slug":"_2-1-容器和项目","link":"#_2-1-容器和项目","children":[]},{"level":3,"title":"2.2 行和列","slug":"_2-2-行和列","link":"#_2-2-行和列","children":[]},{"level":3,"title":"2.3 单元格","slug":"_2-3-单元格","link":"#_2-3-单元格","children":[]},{"level":3,"title":"2.4 网格线","slug":"_2-4-网格线","link":"#_2-4-网格线","children":[]}]},{"level":2,"title":"3.容器属性","slug":"_3-容器属性","link":"#_3-容器属性","children":[{"level":3,"title":"3.1 display 属性","slug":"_3-1-display-属性","link":"#_3-1-display-属性","children":[]},{"level":3,"title":"3.2 grid-template-columns 属性，grid-template-rows 属性","slug":"_3-2-grid-template-columns-属性-grid-template-rows-属性","link":"#_3-2-grid-template-columns-属性-grid-template-rows-属性","children":[]},{"level":3,"title":"3.3 grid-row-gap 属性，grid-column-gap 属性，grid-gap 属性","slug":"_3-3-grid-row-gap-属性-grid-column-gap-属性-grid-gap-属性","link":"#_3-3-grid-row-gap-属性-grid-column-gap-属性-grid-gap-属性","children":[]},{"level":3,"title":"3.4 grid-template-areas 属性","slug":"_3-4-grid-template-areas-属性","link":"#_3-4-grid-template-areas-属性","children":[]},{"level":3,"title":"3.5 grid-auto-flow 属性","slug":"_3-5-grid-auto-flow-属性","link":"#_3-5-grid-auto-flow-属性","children":[]},{"level":3,"title":"3.6 justify-items 属性，align-items 属性，place-items 属性","slug":"_3-6-justify-items-属性-align-items-属性-place-items-属性","link":"#_3-6-justify-items-属性-align-items-属性-place-items-属性","children":[]},{"level":3,"title":"3.7 justify-content 属性，align-content 属性，place-content 属性","slug":"_3-7-justify-content-属性-align-content-属性-place-content-属性","link":"#_3-7-justify-content-属性-align-content-属性-place-content-属性","children":[]},{"level":3,"title":"3.8 grid-auto-columns 属性，grid-auto-rows 属性","slug":"_3-8-grid-auto-columns-属性-grid-auto-rows-属性","link":"#_3-8-grid-auto-columns-属性-grid-auto-rows-属性","children":[]},{"level":3,"title":"3.9 grid-template 属性，grid 属性","slug":"_3-9-grid-template-属性-grid-属性","link":"#_3-9-grid-template-属性-grid-属性","children":[]}]},{"level":2,"title":"4.项目属性","slug":"_4-项目属性","link":"#_4-项目属性","children":[{"level":3,"title":"4.1 grid-column-start 属性，grid-column-end 属性，grid-row-start 属性，grid-row-end 属性","slug":"_4-1-grid-column-start-属性-grid-column-end-属性-grid-row-start-属性-grid-row-end-属性","link":"#_4-1-grid-column-start-属性-grid-column-end-属性-grid-row-start-属性-grid-row-end-属性","children":[]},{"level":3,"title":"4.2 grid-column 属性，grid-row 属性","slug":"_4-2-grid-column-属性-grid-row-属性","link":"#_4-2-grid-column-属性-grid-row-属性","children":[]},{"level":3,"title":"4.3 grid-area 属性","slug":"_4-3-grid-area-属性","link":"#_4-3-grid-area-属性","children":[]},{"level":3,"title":"4.4 justify-self 属性，align-self 属性，place-self 属性","slug":"_4-4-justify-self-属性-align-self-属性-place-self-属性","link":"#_4-4-justify-self-属性-align-self-属性-place-self-属性","children":[]}]},{"level":2,"title":"5.grid 布局工具","slug":"_5-grid-布局工具","link":"#_5-grid-布局工具","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1677814492000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":2}]},"readingTime":{"minutes":20.72,"words":6215},"filePathRelative":"front_end/front_end_base/html_css/23.md","localizedDate":"2023年1月30日","excerpt":"<h1> 23 【grid布局】</h1>\\n<h2> 1.概述</h2>\\n<p>网格布局（Grid）是最强大的 CSS 布局方案。</p>\\n<p>它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。</p>\\n<img src=\\"https://i0.hdslb.com/bfs/album/2729550f5b4e45483dd0521776047c455a544861.png\\" alt=\\"img\\" style=\\"zoom:50%;\\">\\n<p>上图这样的布局，就是 Grid 布局的拿手好戏。</p>\\n<p>Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内多个项目的位置。但是它们也存在重大区别。</p>","autoDesc":true}');export{e as data};
