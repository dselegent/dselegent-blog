import{ab as a,G as i,H as e,ac as d}from"./framework-09305b5d.js";const l={},r=d('<h1 id="_02-【可行性研究】" tabindex="-1"><a class="header-anchor" href="#_02-【可行性研究】" aria-hidden="true">#</a> 02 【可行性研究】</h1><h2 id="_1-可行性研究的任务" tabindex="-1"><a class="header-anchor" href="#_1-可行性研究的任务" aria-hidden="true">#</a> 1.可行性研究的任务</h2><h3 id="_1-1-目的和任务" tabindex="-1"><a class="header-anchor" href="#_1-1-目的和任务" aria-hidden="true">#</a> 1.1 目的和任务</h3><blockquote><p>可行性研究的目的不是解决问题，而是<strong>确定问题是否值得去解决。</strong></p><p>可行性研究最根本的任务是对以后的行动方针提出建议。</p></blockquote><h3 id="_1-2-本质" tabindex="-1"><a class="header-anchor" href="#_1-2-本质" aria-hidden="true">#</a> 1.2 本质</h3><p>可行性研究的本质是要进行一次大大压缩简化了的系统分析和设计的过程，也就是在较高层次上以较抽象的方式进行的系统分析和设计的过程。</p><h3 id="_1-3-步骤" tabindex="-1"><a class="header-anchor" href="#_1-3-步骤" aria-hidden="true">#</a> 1.3 步骤</h3><ul><li>首先需要进一步分析和澄清问题定义</li><li>在澄清了问题定义之后，分析员应该导出系统的逻辑模型。</li><li>再从逻辑模型出发，探索若干种可供选择的主要解法（即系统实现方案）。对每种解法都应该仔细研究它的可行性，一般说来，至少应该从下述三个方面研究每种解法的可行性： <ul><li>技术可行性：使用现有的技术能够实现这个系统</li><li>经济可行性：这个系统的经济效益能超过它的开发成本？</li><li>操作可行性：系统的操作方式在这个用户组织内行得通吗</li><li>必要时还应该从法律、社会效益等更广泛的方面研究每种解法的可行性。</li></ul></li></ul><h3 id="_1-4-投入时间" tabindex="-1"><a class="header-anchor" href="#_1-4-投入时间" aria-hidden="true">#</a> 1.4 投入时间</h3><p>可行性研究需要的时间长短取决于工程的规模。一般来说，可行性研究的成本只是预期的工程总成本的5%~10%。</p><h2 id="_2-可行性研究过程" tabindex="-1"><a class="header-anchor" href="#_2-可行性研究过程" aria-hidden="true">#</a> 2.可行性研究过程</h2><p>典型的可行性研究过程有下述一些步骤：</p><h3 id="_2-1-复查系统规模和目标" tabindex="-1"><a class="header-anchor" href="#_2-1-复查系统规模和目标" aria-hidden="true">#</a> 2.1 复查系统规模和目标</h3><p>分析员对问题定义阶段书写的关于规模和目标的报告书进一步复查确认，改正含糊或不确切的叙述，清晰地描述对目标系统的一切限制和约束</p><h3 id="_2-2-研究目前正在使用的系统" tabindex="-1"><a class="header-anchor" href="#_2-2-研究目前正在使用的系统" aria-hidden="true">#</a> 2.2 研究目前正在使用的系统</h3><p>现有的系统是信息的重要来源，新的目标系统必须也能完成它的基本功能 现有的系统必然有某些缺点，新系统必须能解决旧系统中存在的问题 运行使用旧系统所需要的费用是一个重要的经济指标，如果新系统不能增加收入或减少使用费用，那么从经济角度看新系统就不如旧系统。</p><h3 id="_2-3-导出新系统的高层逻辑模型" tabindex="-1"><a class="header-anchor" href="#_2-3-导出新系统的高层逻辑模型" aria-hidden="true">#</a> 2.3 导出新系统的高层逻辑模型</h3><p>优秀的设计过程通常总是从现有的物理系统出发，导出现有系统的逻辑模型，再参考现有系统的逻辑模型，设想目标系统的逻辑模型，最后根据目标系统的逻辑模型建造新的物理系统。</p><p>通过前一步的工作，分析员能够使用数据流图，描绘数据在系统中流动和处理的情况，从而概括的表达出对新系统的设想。为了把系统描绘的更清洗准确，还应该有一个初步的数据字典，定义系统中使用的数据。</p><h3 id="_2-4-进一步定义问题" tabindex="-1"><a class="header-anchor" href="#_2-4-进一步定义问题" aria-hidden="true">#</a> 2.4 进一步定义问题</h3><p>新系统的逻辑模型实质上表达了分析员对新系统必须做什么的看法。分析员应该和用户一起再次复查问题定义、工程规模和目标，这次复查应该把数据流图和数据字典作为讨论的基础</p><p>前4个步骤构成一个循环，直到提出的逻辑模型完全符合系统目标。</p><h3 id="_2-5-导出和评价供选择的解法" tabindex="-1"><a class="header-anchor" href="#_2-5-导出和评价供选择的解法" aria-hidden="true">#</a> 2.5 导出和评价供选择的解法</h3><p>分析员应该从他建议的系统逻辑模型出发，导出若干个较高层次的物理解法供比较和选择。</p><p>导出供选择的解法的最简单的途径，是从技术角度出发考虑解决问题的不同方案。</p><p>首先，根据技术可行性的考虑初步排除一些不现实的系统方案 其次，考虑操作方面的可行性。分析员应该根据使用部门处理事务的原则和习惯检查技术上可行的哪些方案。 最后考虑经济方面的可行性。分析员应该估计余下的每个可能的系统的开发成本和运行费用，并且估计相对于现有的系统而言这个系统可以节省的开支或可以增加的收入。</p><h3 id="_2-6-推荐行动方针" tabindex="-1"><a class="header-anchor" href="#_2-6-推荐行动方针" aria-hidden="true">#</a> 2.6 推荐行动方针</h3><p>根据可行性研究结果应该做出的一个关键性决定是，是否继续进行这项开发工程 如果分析员认为值得继续进行这项开发工程，那么他应该选择一种最好的解法，并且说明选择这个解决方案的理由 通常使用部门的负责人主要根据经济上是否划算决定是否投资于一项开发工程，因此分析员对于所推荐的系统必须进行比较仔细的成本/效益分析。</p><h3 id="_2-7-草拟开发计划" tabindex="-1"><a class="header-anchor" href="#_2-7-草拟开发计划" aria-hidden="true">#</a> 2.7 草拟开发计划</h3><p>分析员应该为所推荐的方案草拟一份开发计划，除了制定工程进度表之外还应该估计对各类开发人员和各种资源的需要情况，应该指明什么时候使用以及使用多长时间。</p><p>此外，还应该估计系统生命周期每个阶段的成本。</p><p>最后，应该给出下一个阶段（需求分析）的详细进度表和成本估计。</p><h3 id="_2-8-书写文档提交审查" tabindex="-1"><a class="header-anchor" href="#_2-8-书写文档提交审查" aria-hidden="true">#</a> 2.8 书写文档提交审查</h3><p>应该把上述可行性研究各个步骤的工作结果写成清晰的文档，请用户、客户组织的负责人及评审组审查，以决定是否继续这项工程及是否接受分析员推荐的方案。</p><h2 id="_3-系统流程图" tabindex="-1"><a class="header-anchor" href="#_3-系统流程图" aria-hidden="true">#</a> 3.系统流程图</h2><blockquote><p>系统流程图是概括地描绘物理系统的传统工具。它的基本思想是用图形符号以黑盒子形式描绘组成系统的每个组件（程序、文档、数据库、人工过程等）</p><p>系统流程图表达的是数据在系统各部件之间流动的情况，而不是对数据进行加工处理的控制过程，因此尽管系统流程图的某些符号和程序流程图的符号形式相同，但是它却是物理数据流图而不是程序流程图。</p></blockquote><figure><img src="https://i0.hdslb.com/bfs/album/c77580d1c7699be67bee618f50e573fa30f3976c.png" alt="image-20230125232134632" tabindex="0" loading="lazy"><figcaption>image-20230125232134632</figcaption></figure><h2 id="_4-数据流图-dfd" tabindex="-1"><a class="header-anchor" href="#_4-数据流图-dfd" aria-hidden="true">#</a> 4.数据流图 DFD</h2><h3 id="_4-1-概念" tabindex="-1"><a class="header-anchor" href="#_4-1-概念" aria-hidden="true">#</a> 4.1 概念</h3><p>数据流图是一种图形化技术，它描绘信息流和数据从输入移动到输出的过程中所经受的变换（加工、处理）。</p><blockquote><p><strong>它是以图示的方式来表示软件模型</strong></p></blockquote><ul><li>在数据流图中没有任何具体的物理部件，它只是描绘数据在软件中流动和被处理的逻辑过程。</li><li>数据流图是系统逻辑功能的图形表示，即使不是专业的计算机技术人员也容易理解它，因此是分析员与用户之间极好的通信工具</li><li>设计数据流程图时只需考虑系统必须完成的基本逻辑功能，完全不需要考虑怎样具体地实现这些功能。</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/44dd497329d1bce30fb5a00529238d99fe6288e0.png" alt="image-20230125232428889" tabindex="0" loading="lazy"><figcaption>image-20230125232428889</figcaption></figure><h3 id="_4-2-符号" tabindex="-1"><a class="header-anchor" href="#_4-2-符号" aria-hidden="true">#</a> 4.2 符号</h3><p>四种基本符号：</p><ul><li>正方形或立方体表示数据的源点或终点</li><li>圆角矩形或圆形代表变换数据的处理</li><li>开口矩形或两条平行横线代表数据存储</li><li>箭头表示数据流，即特定数据的流动方向</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/3c8574d5213656d828748ac4e743dc1e3d227473.png" alt="image-20230125232503486" tabindex="0" loading="lazy"><figcaption>image-20230125232503486</figcaption></figure><h3 id="_4-3-例子" tabindex="-1"><a class="header-anchor" href="#_4-3-例子" aria-hidden="true">#</a> 4.3 例子</h3><p>假设一家工厂的采购部每天需要一张订货报表，报表按零件编号排序，表中列出所有需要再次订货的零件。对于每个需要再次订货的零件应该列出下述数据：零件编号，零件名称，订货数量，目前价格，主要供应者，次要供应者。零件入库或出库称为事务，通过放在仓库中的CRT终端把事务报告给订货系统。当某种零件的库存数量少于库存量临界值时就应该再次订货。</p><p>第一步可以从问题描述中提取数据流图的4种成分：</p><blockquote><p>首先考虑数据的源点和终点，从上面对系统的描述可以知道“采购部每天需要一张订货报表”，“通过放在仓库中的CRT终端把事务报告给订货系统”，所以采购员是数据终点，而仓库管理员是数据源点。</p></blockquote><figure><img src="https://i0.hdslb.com/bfs/album/942ad121235fca879ed3dfb846dd2cf27832ea5e.png" alt="image-20230125232722928" tabindex="0" loading="lazy"><figcaption>image-20230125232722928</figcaption></figure><p>第二步：再一次阅读问题描述，“采购部需要报表”</p><blockquote><p>因此必须有一个用于产生报表的处理。事务的后果是改变零件库存量，然而任何改变数据的操作都是处理，因此对事务进行的加工是另一个处理。注意，在问题描述中并没有明显地提到需要对事务进行处理，但是通过分析可以看出这种需要。</p></blockquote><p>把数据流图的4种成分都分离出来以后，就可以着手画数据流图了</p><figure><img src="https://i0.hdslb.com/bfs/album/f5c660666f149f24e0b5481619234aa2e8c81f5f.png" alt="image-20230125232927713" tabindex="0" loading="lazy"><figcaption>image-20230125232927713</figcaption></figure><p>第三步：考虑数据流和数据存储</p><blockquote><p>系统把订货报表送给采购部，因此订货报表是一个数据流；事务需要从仓库送到系统中，显然事务是另一个数据流。产生报表和处理事务这两个处理在时间上明显不匹配——每当有一个事务发生时立即处理它，然而每天只产生一次订货报表。因此，用来产生订货报表的数据必须存放一段时间，也就是应该有一个数据存储。</p></blockquote><p>把基本系统模型细化，描绘系统的主要功能</p><figure><img src="https://i0.hdslb.com/bfs/album/a8b52cbd87dffa68ac9c8207c5d81c6b051ac974.png" alt="image-20230125232950795" tabindex="0" loading="lazy"><figcaption>image-20230125232950795</figcaption></figure><p>对功能级数据流图中描绘的系统主要功能进一步细化</p><figure><img src="https://i0.hdslb.com/bfs/album/f75bd43e95fb35c8422920827f89e33c635dcc36.png" alt="image-20230125233147062" tabindex="0" loading="lazy"><figcaption>image-20230125233147062</figcaption></figure><h3 id="_4-4-命名" tabindex="-1"><a class="header-anchor" href="#_4-4-命名" aria-hidden="true">#</a> 4.4 命名</h3><p>​ 数据流图中每个成分的命名是否恰当，直接影响数据流图的可理解性。因此，给这些成分起名字时应该仔细推敲。</p><p><strong>数据流命名时应注意的问题</strong></p><ol><li><p>名字应代表整个数据流的内容，而不是仅仅反映它的某些成分</p></li><li><p>不要使用空洞的、缺乏具体含义的名字</p></li><li><p>在为某个数据流(或数据存储)起名字时遇到了困难，则很可能是因为对数据流图分解不恰当造成的，应该试试重新分解</p></li></ol><p><strong>为处理命名时应注意的问题</strong></p><ol><li><p>通常先为数据流命名，然后再为与之相关联的处理命名。</p></li><li><p>名字应该反映整个处理的功能，而不是它的一部分功能。</p></li><li><p>名字最好由一个具体的及物动词加上一个具体的宾语组成。</p></li><li><p>通常名字中仅包括一个动词，如果必须用两个动词才能描述整个处理的功能，则把这个处理再分解成两个处理可能更恰当些。</p></li><li><p>如果在为某个处理命名时遇到困难，则很可能是发现了分解不当的迹象，应考虑重新分解。</p></li></ol><h3 id="_4-5-用途" tabindex="-1"><a class="header-anchor" href="#_4-5-用途" aria-hidden="true">#</a> 4.5 用途</h3><ol><li><p>画数据流图的基本目的是利用它作为交流信息的工具。</p></li><li><p>数据流图的另一个主要用途是作为分析和设计的工具。</p></li><li><p>数据流图辅助物理系统的设计时，以图中不同处理的定时要求为指南，能够在数据流图上画出许多组自动化边界，每组自动化边界可能意味着一个不同的物理系统。</p></li></ol><h2 id="_5-数据字典-dd" tabindex="-1"><a class="header-anchor" href="#_5-数据字典-dd" aria-hidden="true">#</a> 5.数据字典 DD</h2><blockquote><p>数据字典是关于数据的信息的集合，也就是对数据流图中包含的所有元素的定义的集合。</p></blockquote><h3 id="_5-1-内容" tabindex="-1"><a class="header-anchor" href="#_5-1-内容" aria-hidden="true">#</a> 5.1 内容</h3><p>数据字典有以下四类条目：数据项(数据流分量)、数据流、文件(数据存储)、基本加工(处理)。</p><p>除了数据定义之外，数据字典中还应该包含关于数据的一些其他信息。典型的情况是，在数据字典中记录数据元素的下列信息： 一般信息(名字，别名，描述等)，定义(数据类型，长度，结构等)，使用特点(值的范围，使用频率，使用方式——输入、输出、本地，条件值等)，控制信息(来源，用户，使用它的程序，改变权，使用权等)和分组信息(父结构，从属结构，物理位置——记录、文件和数据库等)。</p><p>数据元素的别名就是该元素的其他等价的名字，出现别名主要有下述3个原因：</p><ul><li>对于同样的数据，不同的用户使用了不同的名字。</li><li>一个分析员在不同时期对同一个数据使用了不同的名字。</li><li>两个分析员分别分析同一个数据流时，使用了不同的名字。</li></ul><h3 id="_5-2-定义数据的方法" tabindex="-1"><a class="header-anchor" href="#_5-2-定义数据的方法" aria-hidden="true">#</a> 5.2 定义数据的方法</h3><p>由数据元素组成数据的方式只有下述3种基本类型：</p><ul><li><strong>顺序</strong>即以确定次序连接两个或多个分量。</li><li><strong>选择</strong>即从两个或多个可能的元素中选取一个。</li><li><strong>重复</strong>即把指定的分量重复零次或多次。</li></ul><p>关系算符</p><ul><li>= 意思是等价于(或定义为)；</li><li>+ 意思是和(即连接两个分量)；</li><li>［］意思是或(即从方括弧内列出的若干个分量中选择一个)，通常用“|”号隔开供选择的分量；</li><li>{} 意思是重复(即重复花括弧内的分量)；</li><li>() 意思是可选(即圆括弧里的分量可有可无)。</li></ul><h3 id="_5-3-数据字典的用途" tabindex="-1"><a class="header-anchor" href="#_5-3-数据字典的用途" aria-hidden="true">#</a> 5.3 数据字典的用途</h3><ul><li>数据字典最重要的用途是作为分析阶段的工具</li><li>数据字典中包含的每个数据元素的控制信息是很有价值的</li><li>数据字典是开发数据库的第一步，而且是很有价值的一步。</li></ul><h3 id="_5-4-数据字典的实现" tabindex="-1"><a class="header-anchor" href="#_5-4-数据字典的实现" aria-hidden="true">#</a> 5.4 数据字典的实现</h3><p>目前，数据字典几乎总是作为CASE“结构化分析与设计工具”的一部分实现的。在开发大型软件系统的过程中，数据字典的规模和复杂程度迅速增加，人工维护数据字典几乎是不可能的。</p><p>在开发小型软件系统时暂时没有数据字典处理程序，建议采用卡片形式书写数据字典，每张卡片上保存描述一个数据的信息。</p><p>下面给出第4.3节的例子中几个数据元素的数据字典卡片，以具体说明数据字典卡片中上述几项内容的含义。</p><figure><img src="https://i0.hdslb.com/bfs/album/6893276e702422b328e53fdf765dd9c6db1a6e5f.png" alt="image-20230126215439920" tabindex="0" loading="lazy"><figcaption>image-20230126215439920</figcaption></figure><h2 id="_6-成本-效益分析" tabindex="-1"><a class="header-anchor" href="#_6-成本-效益分析" aria-hidden="true">#</a> 6.成本/效益分析</h2><h3 id="_6-1-成本估计" tabindex="-1"><a class="header-anchor" href="#_6-1-成本估计" aria-hidden="true">#</a> 6.1 成本估计</h3><p>软件开发成本主要表现为人力消耗(乘以平均工资则得到开发费用)。成本估计不是精确的科学，因此应该使用几种不同的估计技术以便相互校验。</p><p>下面简单介绍3种估算技术。</p><ol><li>代码行技术</li><li>任务分解技术</li><li>自动估计成本技术</li></ol><p>任务分解技术最常用的办法是按开发阶段划分任务。典型环境下各个开发阶段需要使用的人力的百分比大致如下表所示:</p><figure><img src="https://i0.hdslb.com/bfs/album/3f7e54b605c1dd01c89da79fb0fcd1e654bdd6b7.png" alt="image-20230126220107192" tabindex="0" loading="lazy"><figcaption>image-20230126220107192</figcaption></figure><h3 id="_6-2-成本-效益分析的方法" tabindex="-1"><a class="header-anchor" href="#_6-2-成本-效益分析的方法" aria-hidden="true">#</a> 6.2 成本/效益分析的方法</h3><p>成本/效益分析方法主要从四个方面考虑</p><ul><li><p>货币的时间价值</p></li><li><p>投资回收期</p></li><li><p>纯收入</p></li><li><p>投资回收率</p></li></ul><p>货币的时间价值</p><figure><img src="https://i0.hdslb.com/bfs/album/8f9c0d28098866b2e38d4abf0a739610853be8d6.png" alt="image-20230126220405883" tabindex="0" loading="lazy"><figcaption>image-20230126220405883</figcaption></figure><p>例如，修改一个已有的库存清单系统，使它能在每天送给采购员一份订货报表。修改已有的库存清单程序并且编写产生报表的程序，估计共需5000元；系统修改后能及时订货，这将消除零件短缺问题，估计因此每年可以节省2500元，5年共可节省12500元。但是，不能简单地把5000元和12500元相比较，因为前者是现在投资的钱，后者是若干年以后节省的钱。</p><p>假定年利率为12%，利用上面计算货币现在价值的公式可以算出修改库存清单系统后每年预计节省的钱的现在价值，如下表所示。</p><figure><img src="https://i0.hdslb.com/bfs/album/c716d3f63fbf6e106d95ffa03fcef3d1f001aca2.png" alt="image-20230126220419136" tabindex="0" loading="lazy"><figcaption>image-20230126220419136</figcaption></figure><h2 id="_7-本章小结" tabindex="-1"><a class="header-anchor" href="#_7-本章小结" aria-hidden="true">#</a> 7.本章小结</h2><ol><li><p>了解可行性研究的必要性，以及如何进行可行性研究</p></li><li><p>学习系统流程图、数据流图</p></li><li><p>学习数据字典的概念、用途及实现</p></li><li><p>成本/效益分析方法</p></li></ol>',106),h=[r];function p(t,n){return i(),e("div",null,h)}const o=a(l,[["render",p],["__file","02.html.vue"]]);export{o as default};
