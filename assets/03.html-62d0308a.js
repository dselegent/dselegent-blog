const e=JSON.parse(`{"key":"v-cff7d9fc","path":"/front_end/front_end_framework/vue3/03.html","title":"03 【响应式原理 ref和reactive总结 setup注意点】","lang":"zh-CN","frontmatter":{"description":"03 【响应式原理 ref和reactive总结 setup注意点】 1.Vue3.0中的响应式原理 1.1 vue2.x的响应式 实现原理： 对象类型：通过Object.defineProperty()对属性的读取、修改进行拦截（数据劫持）。 数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。 Object.defineProperty(data, 'count', { get () {}, set () {} }) 存在问题： 新增属性、删除属性, 界面不会更新。 直接通过下标修改数组, 界面不会自动更新。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/front_end/front_end_framework/vue3/03.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"03 【响应式原理 ref和reactive总结 setup注意点】"}],["meta",{"property":"og:description","content":"03 【响应式原理 ref和reactive总结 setup注意点】 1.Vue3.0中的响应式原理 1.1 vue2.x的响应式 实现原理： 对象类型：通过Object.defineProperty()对属性的读取、修改进行拦截（数据劫持）。 数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。 Object.defineProperty(data, 'count', { get () {}, set () {} }) 存在问题： 新增属性、删除属性, 界面不会更新。 直接通过下标修改数组, 界面不会自动更新。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03 【响应式原理 ref和reactive总结 setup注意点】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.Vue3.0中的响应式原理","slug":"_1-vue3-0中的响应式原理","link":"#_1-vue3-0中的响应式原理","children":[{"level":3,"title":"1.1 vue2.x的响应式","slug":"_1-1-vue2-x的响应式","link":"#_1-1-vue2-x的响应式","children":[]},{"level":3,"title":"1.2 Vue3.0的响应式","slug":"_1-2-vue3-0的响应式","link":"#_1-2-vue3-0的响应式","children":[]}]},{"level":2,"title":"2.ref和reactive总结","slug":"_2-ref和reactive总结","link":"#_2-ref和reactive总结","children":[{"level":3,"title":"2.1 reactive对比ref","slug":"_2-1-reactive对比ref","link":"#_2-1-reactive对比ref","children":[]},{"level":3,"title":"2.2 ref","slug":"_2-2-ref","link":"#_2-2-ref","children":[]},{"level":3,"title":"2.3 reactive","slug":"_2-3-reactive","link":"#_2-3-reactive","children":[]},{"level":3,"title":"2.4 注意事项","slug":"_2-4-注意事项","link":"#_2-4-注意事项","children":[]}]},{"level":2,"title":"3.setup的两个注意点","slug":"_3-setup的两个注意点","link":"#_3-setup的两个注意点","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":6.03,"words":1810},"filePathRelative":"front_end/front_end_framework/vue3/03.md","localizedDate":"2023年1月30日","excerpt":"<h1> 03 【响应式原理 ref和reactive总结 setup注意点】</h1>\\n<h2> 1.Vue3.0中的响应式原理</h2>\\n<h3> 1.1 vue2.x的响应式</h3>\\n<ul>\\n<li>\\n<p>实现原理：</p>\\n<ul>\\n<li>\\n<p>对象类型：通过<code>Object.defineProperty()</code>对属性的读取、修改进行拦截（数据劫持）。</p>\\n</li>\\n<li>\\n<p>数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">defineProperty</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'count'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">get</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> \\n    <span class=\\"token function\\">set</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<p>存在问题：</p>\\n<ul>\\n<li>新增属性、删除属性, 界面不会更新。</li>\\n<li>直接通过下标修改数组, 界面不会自动更新。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
