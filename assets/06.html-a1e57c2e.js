import{ab as t,G as o,H as l,E as n,S as s,N as e,ac as p,W as i}from"./framework-09305b5d.js";const c={},d=p(`<h1 id="_06-【多表查询】" tabindex="-1"><a class="header-anchor" href="#_06-【多表查询】" aria-hidden="true">#</a> 06 【多表查询】</h1><p>多表查询，也称为关联查询，指两个或更多个表一起完成查询操作。</p><p>前提条件：这些一起查询的表之间是有关系的（一对一、一对多），它们之间一定是有关联字段，这个关联字段可能建立了外键，也可能没有建立外键。比如：员工表和部门表，这两个表依靠“部门编号”进行关联。</p><h2 id="_1-一个案例引发的多表连接" tabindex="-1"><a class="header-anchor" href="#_1-一个案例引发的多表连接" aria-hidden="true">#</a> 1.一个案例引发的多表连接</h2><h3 id="_1-1-案例说明" tabindex="-1"><a class="header-anchor" href="#_1-1-案例说明" aria-hidden="true">#</a> 1.1 案例说明</h3><figure><img src="https://i0.hdslb.com/bfs/album/dbd56a91d1ed9a3ef59ecfc9082d72debefdf6b9.png" alt="image-20221011201046719" tabindex="0" loading="lazy"><figcaption>image-20221011201046719</figcaption></figure><p>从多个表中获取数据：</p><figure><img src="https://i0.hdslb.com/bfs/album/b6259a28a729726b4efc17e228c4fab663310316.png" alt="image-20221011201102068" tabindex="0" loading="lazy"><figcaption>image-20221011201102068</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#案例：查询员工的姓名及其部门名称</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> department_name
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/788db294c05c5616353a782d45db49c4fb194f4d.png" alt="image-20221011201135030" tabindex="0" loading="lazy"><figcaption>image-20221011201135030</figcaption></figure><p>查询结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">+</span><span class="token comment">-----------+----------------------+</span>
<span class="token operator">|</span> last_name <span class="token operator">|</span> department_name      <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+----------------------+</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Administration       <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Marketing            <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Purchasing           <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Human Resources      <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Shipping             <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> IT                   <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> <span class="token keyword">Public</span> Relations     <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Sales                <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Executive            <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Finance              <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Accounting           <span class="token operator">|</span>
<span class="token operator">|</span> King      <span class="token operator">|</span> Treasury             <span class="token operator">|</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> IT Support           <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> NOC                  <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> IT Helpdesk          <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> Government Sales     <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> Retail Sales         <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> Recruiting           <span class="token operator">|</span>
<span class="token operator">|</span> Gietz     <span class="token operator">|</span> Payroll              <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+----------------------+</span>
<span class="token number">2889</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>分析错误情况：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
<span class="token comment">#输出107行</span>
 
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>department_id<span class="token punctuation">)</span><span class="token keyword">FROM</span> departments<span class="token punctuation">;</span>
<span class="token comment">#输出27行</span>
 
<span class="token keyword">SELECT</span> <span class="token number">107</span><span class="token operator">*</span><span class="token number">27</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们把上述多表查询中出现的问题称为：笛卡尔积的错误。</p><h3 id="_1-2-笛卡尔积-或交叉连接-的理解" tabindex="-1"><a class="header-anchor" href="#_1-2-笛卡尔积-或交叉连接-的理解" aria-hidden="true">#</a> 1.2 笛卡尔积（或交叉连接）的理解</h3><p>笛卡尔乘积是一个数学运算。假设我有两个集合 X 和 Y，那么 X 和 Y 的笛卡尔积就是 X 和 Y 的<code>所有可能组合</code>，也就是第一个对象来自于 X，第二个对象来自于 Y 的所有可能。组合的个数即为两个集合中元素个数的乘积数。</p><blockquote><p><strong>表一和表二做笛卡尔积，就是将表一的每一行和表二的每一行进行拼接</strong></p></blockquote><figure><img src="https://i0.hdslb.com/bfs/album/4b0ab3f5bb9797e459e56bc553a65b866b34b9ef.png" alt="image-20221011202054089" tabindex="0" loading="lazy"><figcaption>image-20221011202054089</figcaption></figure><p>SQL92中，笛卡尔积也称为<code>交叉连接</code>，英文是 <code>CROSS JOIN</code>。在 SQL99 中也是使用 CROSS JOIN表示交叉连接。它的作用就是可以把任意表进行连接，即使这两张表不相关。在MySQL中如下情况会出现笛卡尔积：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#查询员工姓名和所在部门名称</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name <span class="token keyword">FROM</span> employees<span class="token punctuation">,</span>departments<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name <span class="token keyword">FROM</span> employees <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> departments<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name <span class="token keyword">FROM</span> employees <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> departments<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name <span class="token keyword">FROM</span> employees <span class="token keyword">JOIN</span> departments<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-案例分析与问题解决" tabindex="-1"><a class="header-anchor" href="#_1-3-案例分析与问题解决" aria-hidden="true">#</a> 1.3 案例分析与问题解决</h3><ul><li><p><strong>笛卡尔积的错误会在下面条件下产生</strong>：</p><ul><li>省略多个表的连接条件（或关联条件）</li><li>连接条件（或关联条件）无效</li><li>所有表中的所有行互相连接</li></ul></li><li><p><strong><code>为了避免笛卡尔积， 可以在 WHERE 加入有效的连接条件。</code></strong></p></li><li><p>加入连接条件后，查询语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>	table1<span class="token punctuation">.</span><span class="token keyword">column</span><span class="token punctuation">,</span> table2<span class="token punctuation">.</span><span class="token keyword">column</span>
<span class="token keyword">FROM</span>	table1<span class="token punctuation">,</span> table2
<span class="token keyword">WHERE</span>	table1<span class="token punctuation">.</span>column1 <span class="token operator">=</span> table2<span class="token punctuation">.</span>column2<span class="token punctuation">;</span>  <span class="token comment">#连接条件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>在 WHERE子句中写入连接条件。</strong></li></ul></li><li><p>正确写法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#案例：查询员工的姓名及其部门名称</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> department_name
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>在表中有相同列时，在列名之前加上表名前缀。</strong></p></li></ul><h2 id="_2-多表查询分类讲解" tabindex="-1"><a class="header-anchor" href="#_2-多表查询分类讲解" aria-hidden="true">#</a> 2. 多表查询分类讲解</h2><h3 id="_2-1-分类1-等值连接-vs-非等值连接" tabindex="-1"><a class="header-anchor" href="#_2-1-分类1-等值连接-vs-非等值连接" aria-hidden="true">#</a> 2.1 分类1：等值连接 vs 非等值连接</h3><h4 id="_2-1-1-等值连接" tabindex="-1"><a class="header-anchor" href="#_2-1-1-等值连接" aria-hidden="true">#</a> 2.1.1 等值连接</h4><figure><img src="https://i0.hdslb.com/bfs/album/ebcdbd2da70c3986c423ead9afcc69d10784b494.png" alt="image-20221011203058524" tabindex="0" loading="lazy"><figcaption>image-20221011203058524</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employees<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> employees<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> 
       employees<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>
       departments<span class="token punctuation">.</span>location_id
<span class="token keyword">FROM</span>   employees<span class="token punctuation">,</span> departments
<span class="token keyword">WHERE</span>  employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/450ad7fb6831a42f6fb311b8d532d5c7c6693451.png" alt="image-20221011203125333" tabindex="0" loading="lazy"><figcaption>image-20221011203125333</figcaption></figure><p><strong>拓展1：多个连接条件与 AND 操作符</strong></p><figure><img src="https://i0.hdslb.com/bfs/album/1b51f07cb253c6391c5099de2826153e9ebadebd.png" alt="image-20221011203149366" tabindex="0" loading="lazy"><figcaption>image-20221011203149366</figcaption></figure><p><strong>拓展2：区分重复的列名</strong></p><ul><li><strong><code>多个表中有相同列时，必须在列名之前加上表名前缀。</code></strong></li><li>在不同表中具有相同列名的列可以用<code>表名</code>加以区分。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employees<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> departments<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>employees<span class="token punctuation">.</span>department_id
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>拓展3：表的别名</strong></p><ul><li>使用别名可以简化查询。</li><li>列名前使用表名前缀可以提高查询效率。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>
       d<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>location_id
<span class="token keyword">FROM</span>   employees e <span class="token punctuation">,</span> departments d
<span class="token keyword">WHERE</span>  e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>需要注意的是，如果我们使用了表的别名，在查询字段中、过滤条件中就只能使用别名进行代替，不能使用原有的表名，否则就会报错。</p></blockquote>`,38),r=n("p",null,[n("code",null,"阿里开发规范"),s("：")],-1),u=n("p",null,[s("【"),n("code",null,"强制"),s("】对于数据库中表记录的查询和变更，只要涉及多个表，都需要在列名前加表的别名（或 表名）进行限定。")],-1),k=n("p",null,[n("code",null,"说明"),s("：对多表进行查询记录、更新记录、删除记录时，如果对操作列没有限定表的别名（或表名），并且操作列在多个表中存在时，就会抛异常。")],-1),m=n("code",null,"正例",-1),v={href:"http://t1.name",target:"_blank",rel:"noopener noreferrer"},b={href:"http://t1.id=t2.id",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,[n("code",null,"反例"),s("：在某业务中，由于多表关联查询语句没有加表的别名（或表名）的限制，正常运行两年后，最近在 某个表中增加一个同名字段，在预发布环境做数据库变更后，线上查询语句出现出 1052 异常：Column 'name' in field list is ambiguous。")],-1),y=p(`<p><strong>拓展4：连接多个表</strong></p><figure><img src="https://i0.hdslb.com/bfs/album/a1e66c17d094211d8628b70b4975ad7265a0e6e6.png" alt="image-20221012204729458" tabindex="0" loading="lazy"><figcaption>image-20221012204729458</figcaption></figure><p>**总结：连接 n个表,至少需要n-1个连接条件。**比如，连接三个表，至少需要两个连接条件。</p><p>练习：查询出公司员工的 last_name,department_name, city</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> empl<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>dept<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>loca<span class="token punctuation">.</span>city
<span class="token keyword">FROM</span> employees <span class="token keyword">AS</span> empl 
<span class="token keyword">JOIN</span> departments <span class="token keyword">AS</span> dept <span class="token keyword">ON</span> empl<span class="token punctuation">.</span>department_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>department_id 
<span class="token keyword">JOIN</span> locations <span class="token keyword">AS</span> loca <span class="token keyword">ON</span> loca<span class="token punctuation">.</span>location_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>location_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-2-非等值连接" tabindex="-1"><a class="header-anchor" href="#_2-1-2-非等值连接" aria-hidden="true">#</a> 2.1.2 非等值连接</h4><figure><img src="https://i0.hdslb.com/bfs/album/4683d48086df2578216966cb6d630165793e3722.png" alt="image-20221012204858177" tabindex="0" loading="lazy"><figcaption>image-20221012204858177</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>salary<span class="token punctuation">,</span> j<span class="token punctuation">.</span>grade_level
<span class="token keyword">FROM</span>   employees e<span class="token punctuation">,</span> job_grades j
<span class="token keyword">WHERE</span>  e<span class="token punctuation">.</span>salary <span class="token operator">BETWEEN</span> j<span class="token punctuation">.</span>lowest_sal <span class="token operator">AND</span> j<span class="token punctuation">.</span>highest_sal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/6660a016d838fcb8ebc8ff3b2f9f5eb7b6909579.png" alt="image-20221012204913733" tabindex="0" loading="lazy"><figcaption>image-20221012204913733</figcaption></figure><h3 id="_2-2-分类2-自连接-vs-非自连接" tabindex="-1"><a class="header-anchor" href="#_2-2-分类2-自连接-vs-非自连接" aria-hidden="true">#</a> 2.2 分类2：自连接 vs 非自连接</h3><figure><img src="https://i0.hdslb.com/bfs/album/8516b9f9f01a034af9035d4bdfd494bfecd923f1.png" alt="image-20221012210804738" tabindex="0" loading="lazy"><figcaption>image-20221012210804738</figcaption></figure><p>当table1和table2本质上是同一张表，只是用取别名的方式虚拟成两张表以代表不同的意义。然后两个表再进行内连接，外连接等查询。</p><p><strong>题目：查询employees表，返回“Xxx works for Xxx”</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>worker<span class="token punctuation">.</span>last_name <span class="token punctuation">,</span><span class="token string">&#39; works for &#39;</span> 
       <span class="token punctuation">,</span> manager<span class="token punctuation">.</span>last_name<span class="token punctuation">)</span>
<span class="token keyword">FROM</span>   employees worker<span class="token punctuation">,</span> employees manager
<span class="token keyword">WHERE</span>  worker<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> manager<span class="token punctuation">.</span>employee_id <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/c0930ff29b358ba0009832df134172a736a40172.png" alt="image-20221012211036857" tabindex="0" loading="lazy"><figcaption>image-20221012211036857</figcaption></figure><p>练习：查询出last_name为 ‘Chen’ 的员工的 manager 的信息。</p><h3 id="_2-3-分类3-内连接-vs-外连接" tabindex="-1"><a class="header-anchor" href="#_2-3-分类3-内连接-vs-外连接" aria-hidden="true">#</a> 2.3 分类3：内连接 vs 外连接</h3><p><mark>内连接包括：等值连接、非等值连接、自连接</mark></p><p><mark>外连接包括：左外连接、右外连接、满外连接</mark></p><blockquote><p><strong>所有的这些连接都是先将这两张表做笛卡尔积，然后留下其中某些列，删除其他列</strong></p></blockquote><p>除了查询满足条件的记录以外，外连接还可以查询某一方不满足条件的记录。</p><figure><img src="https://i0.hdslb.com/bfs/album/b51c923a4b66f1412dce297326ed2533078f43e4.png" alt="image-20221012211326100" tabindex="0" loading="lazy"><figcaption>image-20221012211326100</figcaption></figure><ul><li><p>内连接: 合并具有同一列的两个以上的表的行, <strong>结果集中不包含一个表与另一个表不匹配的行</strong><img src="https://i0.hdslb.com/bfs/album/209e3180db54eca5fb867da49cf84b65df9842d8.png" alt="image-20221012213228203" loading="lazy"></p></li><li><p>外连接: 两个表在连接过程中除了返回满足连接条件的行以外<strong>还返回左（或右）表中不满足条件的行</strong> <strong>，这种连接称为左（或右） 外连接</strong>。没有匹配的行时, 结果表中相应的列为空(NULL)。</p></li><li><p>如果是左外连接，则连接条件中左边的表也称为<code>主表</code>，右边的表称为<code>从表</code>。</p><p>如果是右外连接，则连接条件中右边的表也称为<code>主表</code>，左边的表称为<code>从表</code>。</p></li></ul><blockquote><p><strong>Outer是可以省略的</strong></p><p>Left Join=Left Outer Join 即左连接就是左外连接</p><p>Right Join=Right Outer Join 即右连接就是右外连接</p></blockquote><p>举个例子：下面两张表</p><figure><img src="https://i0.hdslb.com/bfs/album/1493aa8c8d85be9b144426b6adfffe444df353f3.png" alt="image-20221012213346181" tabindex="0" loading="lazy"><figcaption>image-20221012213346181</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/6a0353394f02d8010c41ae0adf1f85674fbcabb5.png" alt="image-20221012213352602" tabindex="0" loading="lazy"><figcaption>image-20221012213352602</figcaption></figure><p>Persons表和Orders表进行笛卡尔积得到：</p><figure><img src="https://i0.hdslb.com/bfs/album/7883bd24e7b17296730a2f30a6569a541da33a6b.png" alt="image-20221012213427268" tabindex="0" loading="lazy"><figcaption>image-20221012213427268</figcaption></figure><p>运行Mysql语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Persons<span class="token punctuation">.</span>LastName<span class="token punctuation">,</span> Persons<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> Orders<span class="token punctuation">.</span>OrderNo
<span class="token keyword">FROM</span> Persons
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> Orders
<span class="token keyword">ON</span> Persons<span class="token punctuation">.</span>Id_P<span class="token operator">=</span>Orders<span class="token punctuation">.</span>Id_P
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> Persons<span class="token punctuation">.</span>LastName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就是在上面的笛卡尔积中，只保存Persons.Id_P=Orders.Id_P的行（也就是红色四行）</p><figure><img src="https://i0.hdslb.com/bfs/album/632853a19cf85fd1686b7e962cf1d38dd45e29d9.png" alt="image-20221012213449257" tabindex="0" loading="lazy"><figcaption>image-20221012213449257</figcaption></figure><p>最后由于是Persons Left Join Orders，所以Persons表是主表，因此Persons表是主表，主表Person表中有些行在Orders表中匹配不到，但是也要添加到最后的结果里面，最后结果为：</p><figure><img src="https://i0.hdslb.com/bfs/album/873246af6ef22213d1ebf075278fc8961d924fb1.png" alt="image-20221012215158694" tabindex="0" loading="lazy"><figcaption>image-20221012215158694</figcaption></figure><p>如果是右连接：（<strong>也就是主表不再是Persons表了，而是Orders表</strong>）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Persons<span class="token punctuation">.</span>LastName<span class="token punctuation">,</span> Persons<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> Orders<span class="token punctuation">.</span>OrderNo
<span class="token keyword">FROM</span> Persons
<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> Orders
<span class="token keyword">ON</span> Persons<span class="token punctuation">.</span>Id_P<span class="token operator">=</span>Orders<span class="token punctuation">.</span>Id_P
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> Persons<span class="token punctuation">.</span>LastName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时要保存的就是主表Orders中没有匹配到的行了（而不是Persons表中没有匹配到的行）</p><figure><img src="https://i0.hdslb.com/bfs/album/0916eff9a89b5b3ac3659708049df7d9e6fd4f4a.png" alt="image-20221012213516586" tabindex="0" loading="lazy"><figcaption>image-20221012213516586</figcaption></figure><h3 id="_2-4-补充-on-和-where区别" tabindex="-1"><a class="header-anchor" href="#_2-4-补充-on-和-where区别" aria-hidden="true">#</a> 2.4 补充 on 和 where区别</h3><p>两个表在，join时，首先做一个笛卡尔积，on后面的条件是对这个笛卡尔积做一个过滤形成一张临时表，如果没有where就直接返回结果，如果有where就对上一步的临时表再进行过滤。</p><p>在使用left jion时，on和where条件的区别如下：</p><p>1、on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。</p><p>2、where条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉</p><p>如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/9abc4fefa4adad991f8b6696f3063c87a911da8d.png" alt="image-20221013173518505" tabindex="0" loading="lazy"><figcaption>image-20221013173518505</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/137479c211e560c2d06947a37272ec28c2bd5dcc.png" alt="image-20221013173527595" tabindex="0" loading="lazy"><figcaption>image-20221013173527595</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/da152db6a165dbe78b3cd48073ad0e1b7f3a574b.png" alt="image-20221013173537385" tabindex="0" loading="lazy"><figcaption>image-20221013173537385</figcaption></figure><h2 id="_3-sql99语法实现多表查询" tabindex="-1"><a class="header-anchor" href="#_3-sql99语法实现多表查询" aria-hidden="true">#</a> 3.SQL99语法实现多表查询</h2><h3 id="_3-1-基本语法" tabindex="-1"><a class="header-anchor" href="#_3-1-基本语法" aria-hidden="true">#</a> 3.1 基本语法</h3><ul><li><p>使用JOIN...ON子句创建连接的语法结构：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> table1<span class="token punctuation">.</span><span class="token keyword">column</span><span class="token punctuation">,</span> table2<span class="token punctuation">.</span><span class="token keyword">column</span><span class="token punctuation">,</span>table3<span class="token punctuation">.</span><span class="token keyword">column</span>
<span class="token keyword">FROM</span> table1
    <span class="token keyword">JOIN</span> table2 <span class="token keyword">ON</span> table1 和 table2 的连接条件
        <span class="token keyword">JOIN</span> table3 <span class="token keyword">ON</span> table2 和 table3 的连接条件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它的嵌套逻辑类似我们使用的 FOR 循环：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">for</span> t1 <span class="token operator">in</span> table1:
    <span class="token keyword">for</span> t2 <span class="token operator">in</span> table2:
       <span class="token keyword">if</span> condition1:
           <span class="token keyword">for</span> t3 <span class="token operator">in</span> table3:
              <span class="token keyword">if</span> condition2:
                  output t1 <span class="token operator">+</span> t2 <span class="token operator">+</span> t3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL99 采用的这种嵌套结构非常清爽、层次性更强、可读性更强，即使再多的表进行连接也都清晰可见。如果你采用 SQL92，可读性就会大打折扣。</p></li><li><p>语法说明：</p><ul><li><strong>可以使用 ON 子句指定额外的连接条件</strong>。</li><li>这个连接条件是与其它条件分开的。</li><li><strong>ON 子句使语句具有更高的易读性</strong>。</li><li>关键字 JOIN、INNER JOIN、CROSS JOIN 的含义是一样的，都表示内连接</li></ul></li></ul><h3 id="_3-2-内连接-inner-join-的实现" tabindex="-1"><a class="header-anchor" href="#_3-2-内连接-inner-join-的实现" aria-hidden="true">#</a> 3.2 内连接(INNER JOIN)的实现</h3><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表
<span class="token keyword">FROM</span> A表 <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> B表
<span class="token keyword">ON</span> 关联条件
<span class="token keyword">WHERE</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>题目1：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> 
       d<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>location_id
<span class="token keyword">FROM</span>   employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span>     <span class="token punctuation">(</span>e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/42dcde5aed77d5b7f8831b84325715d48a4f9e29.png" alt="image-20221012220021455" tabindex="0" loading="lazy"><figcaption>image-20221012220021455</figcaption></figure><h3 id="_3-3-外连接-outer-join-的实现" tabindex="-1"><a class="header-anchor" href="#_3-3-外连接-outer-join-的实现" aria-hidden="true">#</a> 3.3 外连接(OUTER JOIN)的实现</h3><h4 id="_3-3-1-左外连接-left-outer-join" tabindex="-1"><a class="header-anchor" href="#_3-3-1-左外连接-left-outer-join" aria-hidden="true">#</a> 3.3.1 左外连接(LEFT OUTER JOIN)</h4><ul><li>语法：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现查询结果是A</span>
<span class="token keyword">SELECT</span> 字段列表
<span class="token keyword">FROM</span> A表 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> B表
<span class="token keyword">ON</span> 关联条件
<span class="token keyword">WHERE</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>举例：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span>   employees e
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span>   <span class="token punctuation">(</span>e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/c069e78ea05325c9a61786e812577390005ee4e7.png" alt="image-20221012220314591" tabindex="0" loading="lazy"><figcaption>image-20221012220314591</figcaption></figure><h4 id="_3-3-2-右外连接-right-outer-join" tabindex="-1"><a class="header-anchor" href="#_3-3-2-右外连接-right-outer-join" aria-hidden="true">#</a> 3.3.2 右外连接(RIGHT OUTER JOIN)</h4><ul><li>语法：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现查询结果是B</span>
<span class="token keyword">SELECT</span> 字段列表
<span class="token keyword">FROM</span> A表 <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> B表
<span class="token keyword">ON</span> 关联条件
<span class="token keyword">WHERE</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>举例：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span>   employees e
<span class="token keyword">RIGHT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span>    <span class="token punctuation">(</span>e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/46d22608cd937778fed6763b173404763e99279e.png" alt="image-20221012220354262" tabindex="0" loading="lazy"><figcaption>image-20221012220354262</figcaption></figure><h4 id="_3-3-3-满外连接-full-outer-join" tabindex="-1"><a class="header-anchor" href="#_3-3-3-满外连接-full-outer-join" aria-hidden="true">#</a> 3.3.3 满外连接(FULL OUTER JOIN)</h4><ul><li>满外连接的结果 = 左右表匹配的数据 + 左表没有匹配到的数据 + 右表没有匹配到的数据。</li><li>SQL99是支持满外连接的。使用FULL JOIN 或 FULL OUTER JOIN来实现。</li><li>需要注意的是，MySQL不支持FULL JOIN，但是可以用 LEFT JOIN <strong>UNION</strong> RIGHT join代替。</li></ul><h2 id="_4-union的使用" tabindex="-1"><a class="header-anchor" href="#_4-union的使用" aria-hidden="true">#</a> 4.UNION的使用</h2><p><strong>合并查询结果</strong> 利用UNION关键字，可以给出多条SELECT语句，并将它们的结果组合成单个结果集。合并时，两个表对应的列数和数据类型必须相同，并且相互对应。各个SELECT语句之间使用UNION或UNION ALL关键字分隔。</p><p>语法格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">column</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> table1
<span class="token keyword">UNION</span> <span class="token punctuation">[</span><span class="token keyword">ALL</span><span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> <span class="token keyword">column</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> table2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>UNION操作符</strong></p><figure><img src="https://i0.hdslb.com/bfs/album/c5734bcf59763d3f8eb8b9c5d901af47a581778b.png" alt="image-20221013164638507" tabindex="0" loading="lazy"><figcaption>image-20221013164638507</figcaption></figure><p>UNION 操作符返回两个查询的结果集的并集，去除重复记录。</p><p><strong>UNION ALL操作符</strong></p><figure><img src="https://i0.hdslb.com/bfs/album/bee36fb86d89a8b363b736e0264012caa369ed59.png" alt="image-20221013164651398" tabindex="0" loading="lazy"><figcaption>image-20221013164651398</figcaption></figure><p>UNION ALL操作符返回两个查询的结果集的并集。对于两个结果集的重复部分，不去重。</p><blockquote><p>注意：执行UNION ALL语句时所需要的资源比UNION语句少。如果明确知道合并数据后的结果数据不存在重复数据，或者不需要去除重复的数据，则尽量使用UNION ALL语句，以提高数据查询的效率。</p></blockquote><p>举例：查询部门编号&gt;90或邮箱包含a的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#方式1</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> email <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span> <span class="token operator">OR</span> department_id<span class="token operator">&gt;</span><span class="token number">90</span><span class="token punctuation">;</span>
<span class="token comment">#方式2</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees  <span class="token keyword">WHERE</span> email <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span>
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees  <span class="token keyword">WHERE</span> department_id<span class="token operator">&gt;</span><span class="token number">90</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：查询中国用户中男性的信息以及美国用户中年男性的用户信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>cname <span class="token keyword">FROM</span> t_chinamale <span class="token keyword">WHERE</span> csex<span class="token operator">=</span><span class="token string">&#39;男&#39;</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>tname <span class="token keyword">FROM</span> t_usmale <span class="token keyword">WHERE</span> tGender<span class="token operator">=</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-7种sql-joins的实现" tabindex="-1"><a class="header-anchor" href="#_5-7种sql-joins的实现" aria-hidden="true">#</a> 5.7种SQL JOINS的实现</h2><h3 id="_5-1-图" tabindex="-1"><a class="header-anchor" href="#_5-1-图" aria-hidden="true">#</a> 5.1 图</h3><figure><img src="https://i0.hdslb.com/bfs/album/85acab011bb121784b5a69f286df9e6449e64437.png" alt="image-20221013164813501" tabindex="0" loading="lazy"><figcaption>image-20221013164813501</figcaption></figure><h3 id="_5-2-代码实现" tabindex="-1"><a class="header-anchor" href="#_5-2-代码实现" aria-hidden="true">#</a> 5.2 代码实现</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#中图：内连接 A∩B</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#左上图：左外连接</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#右上图：右外连接</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#左中图：A - A∩B</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#右中图：B-A∩B</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#左下图：满外连接</span>
<span class="token comment"># 左中图 + 右上图  A∪B</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>  <span class="token comment">#没有去重操作，效率高</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#右下图</span>
<span class="token comment">#左中图 + 右中图  A ∪B- A∩B 或者 (A -  A∩B) ∪ （B - A∩B）</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-语法格式小结" tabindex="-1"><a class="header-anchor" href="#_5-3-语法格式小结" aria-hidden="true">#</a> 5.3 语法格式小结</h3><ul><li>左中图</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现A -  A∩B</span>
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">left</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 从表关联字段 <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token operator">and</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>右中图</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现B -  A∩B</span>
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">right</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 从表关联字段 <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token operator">and</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>左下图</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现查询结果是A∪B</span>
<span class="token comment">#用左外的A，union 右外的B</span>
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">left</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 等其他子句
 
<span class="token keyword">union</span> 
 
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">right</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 等其他子句<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>右下图</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#实现A∪B -  A∩B  或   (A -  A∩B) ∪ （B - A∩B）</span>
<span class="token comment">#使用左外的 (A -  A∩B)  union 右外的（B - A∩B）</span>
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">left</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 从表关联字段 <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token operator">and</span> 等其他子句
 
<span class="token keyword">union</span>
 
<span class="token keyword">select</span> 字段列表
<span class="token keyword">from</span> A表 <span class="token keyword">right</span> <span class="token keyword">join</span> B表
<span class="token keyword">on</span> 关联条件
<span class="token keyword">where</span> 从表关联字段 <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token operator">and</span> 等其他子句
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-sql99语法新特性" tabindex="-1"><a class="header-anchor" href="#_6-sql99语法新特性" aria-hidden="true">#</a> 6.SQL99语法新特性</h2><h3 id="_6-1-自然连接" tabindex="-1"><a class="header-anchor" href="#_6-1-自然连接" aria-hidden="true">#</a> 6.1 自然连接</h3><p>SQL99 在 SQL92 的基础上提供了一些特殊语法，比如 <code>NATURAL JOIN</code> 用来表示自然连接。我们可以把自然连接理解为 SQL92 中的等值连接。它会帮你自动查询两张连接表中<code>所有相同的字段</code>，然后进行<code>等值连接</code>。</p><p>在SQL92标准中：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span>
<span class="token operator">AND</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>manager_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>manager_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 SQL99 中你可以写成：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">NATURAL</span> <span class="token keyword">JOIN</span> departments d<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-using连接" tabindex="-1"><a class="header-anchor" href="#_6-2-using连接" aria-hidden="true">#</a> 6.2 USING连接</h3><p>当我们进行连接的时候，SQL99还支持使用 USING 指定数据表里的<code>同名字段</code>进行等值连接。但是只能配合JOIN一起使用。比如：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">USING</span> <span class="token punctuation">(</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你能看出与自然连接 NATURAL JOIN 不同的是，USING 指定了具体的相同的字段名称，你需要在 USING 的括号 () 中填入要指定的同名字段。同时使用 <code>JOIN...USING</code> 可以简化 JOIN ON 的等值连接。它与下面的 SQL 查询结果是相同的：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-章节小结" tabindex="-1"><a class="header-anchor" href="#_7-章节小结" aria-hidden="true">#</a> 7.章节小结</h2><p>表连接的约束条件可以有三种方式：WHERE, ON, USING</p><ul><li>WHERE：适用于所有关联查询</li><li><code>ON</code>：只能和JOIN一起使用，只能写关联条件。虽然关联条件可以并到WHERE中和其他条件一起写，但分开写可读性更好。</li><li>USING：只能和JOIN一起使用，而且要求<strong>两个</strong>关联字段在关联表中名称一致，而且只能表示关联字段值相等</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#关联条件</span>
<span class="token comment">#把关联条件写在where后面</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name 
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span>departments 
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
 
<span class="token comment">#把关联条件写在on后面，只能和JOIN一起使用</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name 
<span class="token keyword">FROM</span> employees <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> departments 
<span class="token keyword">ON</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
 
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name 
<span class="token keyword">FROM</span> employees <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> departments 
<span class="token keyword">ON</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
 
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name  
<span class="token keyword">FROM</span> employees <span class="token keyword">JOIN</span> departments 
<span class="token keyword">ON</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
 
<span class="token comment">#把关联字段写在using()中，只能和JOIN一起使用</span>
<span class="token comment">#而且两个表中的关联字段必须名称相同，而且只能表示=</span>
<span class="token comment">#查询员工姓名与基本工资</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>job_title
<span class="token keyword">FROM</span> employees <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> jobs <span class="token keyword">USING</span><span class="token punctuation">(</span>job_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">#n张表关联，需要n-1个关联条件</span>
<span class="token comment">#查询员工姓名，基本工资，部门名称</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>job_title<span class="token punctuation">,</span>department_name <span class="token keyword">FROM</span> employees<span class="token punctuation">,</span>departments<span class="token punctuation">,</span>jobs 
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id 
<span class="token operator">AND</span> employees<span class="token punctuation">.</span>job_id <span class="token operator">=</span> jobs<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span>
 
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>job_title<span class="token punctuation">,</span>department_name 
<span class="token keyword">FROM</span> employees <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> departments <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> jobs 
<span class="token keyword">ON</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id 
<span class="token operator">AND</span> employees<span class="token punctuation">.</span>job_id <span class="token operator">=</span> jobs<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><p>我们要<code>控制连接表的数量</code>。多表连接就相当于嵌套 for 循环一样，非常消耗资源，会让 SQL 查询性能下降得很严重，因此不要连接不必要的表。在许多 DBMS 中，也都会有最大连接表的限制。</p><blockquote><p>【强制】超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时， 保证被关联的字段需要有索引。</p><p>说明：即使双表 join 也要注意表索引、SQL 性能。</p><p>来源：阿里巴巴《Java开发手册》</p></blockquote><h3 id="附录-常用的-sql-标准有哪些" tabindex="-1"><a class="header-anchor" href="#附录-常用的-sql-标准有哪些" aria-hidden="true">#</a> 附录：常用的 SQL 标准有哪些</h3><p>在正式开始讲连接表的种类时，我们首先需要知道 SQL 存在不同版本的标准规范，因为不同规范下的表连接操作是有区别的。</p><p>SQL 有两个主要的标准，分别是 <code>SQL92</code> 和 <code>SQL99</code>。92 和 99 代表了标准提出的时间，SQL92 就是 92 年提出的标准规范。当然除了 SQL92 和 SQL99 以外，还存在 SQL-86、SQL-89、SQL:2003、SQL:2008、SQL:2011 和 SQL:2016 等其他的标准。</p><p>这么多标准，到底该学习哪个呢？<strong><code>实际上最重要的 SQL 标准就是 SQL92 和 SQL99</code></strong>。一般来说 SQL92 的形式更简单，但是写的 SQL 语句会比较长，可读性较差。而 SQL99 相比于 SQL92 来说，语法更加复杂，但可读性更强。我们从这两个标准发布的页数也能看出，SQL92 的标准有 500 页，而 SQL99 标准超过了 1000 页。实际上从 SQL99 之后，很少有人能掌握所有内容，因为确实太多了。就好比我们使用 Windows、Linux 和 Office 的时候，很少有人能掌握全部内容一样。我们只需要掌握一些核心的功能，满足日常工作的需求即可。</p><p>**<code>SQL92 和 SQL99 是经典的 SQL 标准，也分别叫做 SQL-2 和 SQL-3 标准。</code>**也正是在这两个标准发布之后，SQL 影响力越来越大，甚至超越了数据库领域。现如今 SQL 已经不仅仅是数据库领域的主流语言，还是信息领域中信息处理的主流语言。在图形检索、图像检索以及语音检索中都能看到 SQL 语言的使用。</p><h2 id="_8-练习" tabindex="-1"><a class="header-anchor" href="#_8-练习" aria-hidden="true">#</a> 8.练习</h2><h3 id="_8-1-多表查询1" tabindex="-1"><a class="header-anchor" href="#_8-1-多表查询1" aria-hidden="true">#</a> 8.1 多表查询1</h3><p>1.显示所有员工的姓名，部门号和部门名称</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span> department_name 
<span class="token keyword">FROM</span> employees e 
<span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.查询90号部门员工的job_id和90号部门的location_id</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> job_id<span class="token punctuation">,</span> location_id 
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span> departments d 
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token operator">AND</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
 
<span class="token comment">------------或----------</span>
<span class="token keyword">SELECT</span> job_id<span class="token punctuation">,</span> location_id 
<span class="token keyword">FROM</span> employees e 
<span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.选择所有有奖金的员工的 last_name , department_name , location_id , city</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name <span class="token punctuation">,</span> department_name <span class="token punctuation">,</span> d<span class="token punctuation">.</span>location_id <span class="token punctuation">,</span> city 
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> 
<span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> 
<span class="token keyword">JOIN</span> locations l 
<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.选择city在Toronto工作的员工的 last_name , job_id , department_id , department_name</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name <span class="token punctuation">,</span> job_id <span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id <span class="token punctuation">,</span> department_name 
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span> departments d<span class="token punctuation">,</span> locations l 
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token operator">AND</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> 
<span class="token operator">AND</span> city <span class="token operator">=</span> <span class="token string">&#39;Toronto&#39;</span><span class="token punctuation">;</span>
 
<span class="token comment">------------或--------------</span>
<span class="token keyword">SELECT</span> last_name <span class="token punctuation">,</span> job_id <span class="token punctuation">,</span> e<span class="token punctuation">.</span>department_id <span class="token punctuation">,</span> department_name 
<span class="token keyword">FROM</span> employees e 
<span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">JOIN</span> locations l 
<span class="token keyword">ON</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>city<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;Toronto&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5．查询员工所在的部门名称、部门地址、姓名、工作、工资，其中员工所 在部门的部门名称为’Executive’</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span> street_address<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary 
<span class="token keyword">FROM</span> employees e 
<span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id 
<span class="token keyword">JOIN</span> locations l 
<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> department_name <span class="token operator">=</span> <span class="token string">&#39;Executive&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6.选择指定员工的姓名，员工号，以及他的管理者的姓名和员工号，结果 类似于下面的格式</p><figure><img src="https://img2022.cnblogs.com/blog/2402456/202206/2402456-20220611182821793-1656692981.png" alt="image-20220521190414561" tabindex="0" loading="lazy"><figcaption>image-20220521190414561</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> emp<span class="token punctuation">.</span>last_name employees<span class="token punctuation">,</span> emp<span class="token punctuation">.</span>employee_id <span class="token string">&quot;Emp#&quot;</span><span class="token punctuation">,</span> mgr<span class="token punctuation">.</span>last_name manager<span class="token punctuation">,</span> mgr<span class="token punctuation">.</span>employee_id <span class="token string">&quot;Mgr#&quot;</span> 
<span class="token keyword">FROM</span> employees emp <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> 
<span class="token keyword">JOIN</span> employees mgr 
<span class="token keyword">ON</span> emp<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> mgr<span class="token punctuation">.</span>employee_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.查询哪些部门没有员工</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 方式1： </span>
<span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>department_id 
<span class="token keyword">FROM</span> departments d <span class="token keyword">LEFT</span> 
<span class="token keyword">JOIN</span> employees e 
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span> 
 
<span class="token comment">#方式2： </span>
<span class="token keyword">SELECT</span> department_id 
<span class="token keyword">FROM</span> departments d 
<span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees e <span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8.查询哪个城市没有部门</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> l<span class="token punctuation">.</span>location_id<span class="token punctuation">,</span>l<span class="token punctuation">.</span>city 
<span class="token keyword">FROM</span> locations l <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d 
<span class="token keyword">ON</span> l<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> 
<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>location_id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>9.查询部门名为 Sales 或 IT 的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_name 
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d 
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_id<span class="token punctuation">\`</span></span> 
<span class="token operator">AND</span> d<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>department_name<span class="token punctuation">\`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;IT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-多表查询2" tabindex="-1"><a class="header-anchor" href="#_8-2-多表查询2" aria-hidden="true">#</a> 8.2 多表查询2</h3><p>建表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 储备：建表操作： </span>
 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>t_dept<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span> 
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> 
<span class="token identifier"><span class="token punctuation">\`</span>deptName<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 
<span class="token identifier"><span class="token punctuation">\`</span>address<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 
<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> 
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span> 
 
 
 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>t_emp<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span> 
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> 
<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 
<span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 
<span class="token identifier"><span class="token punctuation">\`</span>deptId<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 
empno <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> 
<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
<span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_dept_id<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>deptId<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> 
<span class="token comment">-- CONSTRAINT \`fk_dept_id\` FOREIGN KEY (\`deptId\`) REFERENCES \`t_dept\` (\`id\`) </span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
 
 
<span class="token comment">-- 插入数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;华山&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;华山&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;丐帮&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;洛阳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;峨眉&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;峨眉山&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;武当&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;武当山&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;明教&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;光明顶&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_dept<span class="token punctuation">(</span>deptName<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;少林&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;少林寺&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;风清扬&#39;</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100001</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;岳不群&#39;</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100002</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;令狐冲&#39;</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100003</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;洪七公&#39;</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100004</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;乔峰&#39;</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100005</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;灭绝师太&#39;</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100006</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;周芷若&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100007</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;张三丰&#39;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">100008</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;张无忌&#39;</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">100009</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>deptId<span class="token punctuation">,</span>empno<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;韦小宝&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">100010</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>1.</strong> <strong>所有有门派的人员信息</strong> （ A、B两表共有）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emp a <span class="token keyword">inner</span> <span class="token keyword">join</span> t_dept b <span class="token keyword">on</span> a<span class="token punctuation">.</span>deptId <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.</strong> <strong>列出所有用户，并显示其机构信息</strong> （A的全集）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emp a <span class="token keyword">left</span> <span class="token keyword">join</span> t_dept b <span class="token keyword">on</span> a<span class="token punctuation">.</span>deptId <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3.</strong> <strong>列出所有门派</strong> （B的全集）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_dept b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4.</strong> <strong>所有不入门派的人员</strong> （A的独有）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> t_emp a <span class="token keyword">left</span> 
<span class="token keyword">join</span> t_dept b 
<span class="token keyword">on</span> a<span class="token punctuation">.</span>deptId <span class="token operator">=</span> b<span class="token punctuation">.</span>id 
<span class="token keyword">where</span> b<span class="token punctuation">.</span>id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5.</strong> <strong>所有没人入的门派</strong> （B的独有）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> t_dept b <span class="token keyword">left</span> 
<span class="token keyword">join</span> t_emp a 
<span class="token keyword">on</span> a<span class="token punctuation">.</span>deptId <span class="token operator">=</span> b<span class="token punctuation">.</span>id 
<span class="token keyword">where</span> a<span class="token punctuation">.</span>deptId <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6.</strong> <strong>列出所有人员和机构的对照关系</strong> (AB全有)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- MySQL Full Join的实现 因为MySQL不支持FULL JOIN,下面是替代方法 </span>
 
<span class="token comment">-- left join + union(可去除重复数据)+ right join </span>
 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> t_emp A <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept B 
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>deptId <span class="token operator">=</span> B<span class="token punctuation">.</span>id 
 
<span class="token keyword">UNION</span> 
 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> t_emp A <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> t_dept B 
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>deptId <span class="token operator">=</span> B<span class="token punctuation">.</span>id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7.</strong> <strong>列出所有没入派的人员和没人入的门派</strong> （A的独有+B的独有）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> t_emp A <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept B 
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>deptId <span class="token operator">=</span> B<span class="token punctuation">.</span>id 
<span class="token keyword">WHERE</span> B<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span> 
 
<span class="token keyword">UNION</span> 
 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> t_emp A <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> t_dept B 
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>deptId <span class="token operator">=</span> B<span class="token punctuation">.</span>id 
<span class="token keyword">WHERE</span> A<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>deptId<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,169);function w(_,f){const a=i("ExternalLinkIcon");return o(),l("div",null,[d,n("blockquote",null,[r,u,k,n("p",null,[m,s("：select "),n("a",v,[s("t1.name"),e(a)]),s(" from table_first as t1 , table_second as t2 where "),n("a",b,[s("t1.id=t2.id"),e(a)]),s(";")]),g]),y])}const E=t(c,[["render",w],["__file","06.html.vue"]]);export{E as default};
