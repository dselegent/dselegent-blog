import{ab as p,G as o,H as c,E as n,S as s,N as t,ac as e,W as i}from"./framework-844b12a4.js";const l={},u=n("h1",{id:"_22-【在react中使用emotion】",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_22-【在react中使用emotion】","aria-hidden":"true"},"#"),s(" 22 【在react中使用Emotion】")],-1),r=n("h2",{id:"_1-css-in-js-的优点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-css-in-js-的优点","aria-hidden":"true"},"#"),s(" 1.CSS in JS 的优点")],-1),d={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FMicheleBertoli%2Fcss-in-js",target:"_blank",rel:"noopener noreferrer"},k={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmui-org%2Fmaterial-ui",target:"_blank",rel:"noopener noreferrer"},v=n("ol",null,[n("li",null,"不用关心繁琐的 Class 命名规则"),n("li",null,"不用担心样式被覆盖"),n("li",null,"便利的样式复用（样式都是 js 对象或字符串）"),n("li",null,"减少冗余的 CSS 代码，极致的样式按需加载")],-1),m={href:"https://link.juejin.cn?target=https%3A%2F%2Femotion.sh%2Fdocs%2Fintroduction",target:"_blank",rel:"noopener noreferrer"},g={href:"https://link.juejin.cn?target=https%3A%2F%2Femotion.sh%2Fdocs%2Fintroduction",target:"_blank",rel:"noopener noreferrer"},b=e(`<p><strong>安装</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">npm</span> i @emotion/styled @emotion/react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>使用</strong></p>`,3),h={href:"https://link.juejin.cn/?target=https%3A%2F%2Femotion.sh%2Fdocs%2Fintroduction",target:"_blank",rel:"noopener noreferrer"},f={href:"https://link.juejin.cn/?target=https%3A%2F%2Femotion.sh%2Fdocs%2Fcss-prop",target:"_blank",rel:"noopener noreferrer"},y={href:"https://link.juejin.cn/?target=https%3A%2F%2Femotion.sh%2Fdocs%2Fstyled",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"_2-css-prop",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-css-prop","aria-hidden":"true"},"#"),s(" 2.Css Prop")],-1),j=n("p",null,[s("添加预设或将杂注设置为注释后，"),n("code",null,"React.createElement"),s("编译后的 jsx 代码将使用"),n("code",null," emotion"),s(" 的函数而不是"),n("code",null," .jsx")],-1),_=n("h3",{id:"_2-1-babel-preset",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-1-babel-preset","aria-hidden":"true"},"#"),s(" 2.1 Babel Preset")],-1),w=n("strong",null,"不适用于",-1),q={href:"https://github.com/facebook/create-react-app",target:"_blank",rel:"noopener noreferrer"},S={href:"https://emotion.sh/docs/css-prop#jsx-pragma",target:"_blank",rel:"noopener noreferrer"},C=e(`<p><code>.babelrc</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@emotion/babel-preset-css-prop&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),T={href:"https://emotion.sh/docs/@emotion/babel-preset-css-prop",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"@emotion/babel-preset-css-prop",-1),z=n("code",null,">=16.14.0",-1),P={href:"https://link.juejin.cn?target=https%3A%2F%2Freactjs.org%2Fblog%2F2020%2F09%2F22%2Fintroducing-the-new-jsx-transform.html",target:"_blank",rel:"noopener noreferrer"},N=n("p",null,[s("如果 React 版本 "),n("code",null,">=16.14.0"),s(" , 可以使用如下的配置来使用新的 jsx 运行时。")],-1),A=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;@babel/preset-react&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;runtime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;automatic&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;importSource&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@emotion/react&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@emotion/babel-plugin&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-jsx-注释" tabindex="-1"><a class="header-anchor" href="#_2-2-jsx-注释" aria-hidden="true">#</a> 2.2 JSX 注释</h3><p>将<code> jsx 注释</code>设置在使用道具的源文件的顶部。 此选项最适合测试 prop 功能或在 babel 配置不可配置的项目（create-react-app、codesandbox 等）中。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">/** @jsx jsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/** @jsx jsx */</code> 不生效的时候可以改为 <code>/** @jsxImportSource @emotion/react */</code> 来尝试。</p><h3 id="_2-3-tsconfig-json" tabindex="-1"><a class="header-anchor" href="#_2-3-tsconfig-json" aria-hidden="true">#</a> 2.3 tsconfig.json</h3>`,6),B={href:"https://link.juejin.cn?target=https%3A%2F%2Fbabeljs.io%2Fdocs%2Fen%2Fbabel-preset-typescript",target:"_blank",rel:"noopener noreferrer"},I=e(`<div class="language-JSON line-numbers-mode" data-ext="JSON"><pre class="language-JSON"><code>{
  &quot;compilerOptions&quot;: {
    ...
    // &quot;jsx&quot;: &quot;react&quot;,
    &quot;jsxImportSource&quot;: &quot;@emotion/react&quot;,
    ...
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-object-styles-和-string-styles" tabindex="-1"><a class="header-anchor" href="#_2-4-object-styles-和-string-styles" aria-hidden="true">#</a> 2.4 Object Styles 和 String Styles</h3><p>Emotion 支持 <strong>js 对象</strong>和 <strong>js 字符串</strong>两种形式的样式定义。</p><p><strong>Object Styles</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">/** @jsx jsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;&amp;:hover&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;lightgreen&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This has a hotpink background.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/4b3bee53c08921bd645abafad29715eb8f035fda.png" alt="image-20221213124704208" tabindex="0" loading="lazy"><figcaption>image-20221213124704208</figcaption></figure>`,6),E={href:"https://emotion.sh/docs/object-styles",target:"_blank",rel:"noopener noreferrer"},R=n("p",null,[n("strong",null,"String Styles")],-1),L=n("code",null,"@emotion/react",-1),$=n("code",null,"css",-1),H={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",target:"_blank",rel:"noopener noreferrer"},J=e(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement</span>
<span class="token comment">/** @jsx jsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> css<span class="token punctuation">,</span> jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token string">&#39;darkgreen&#39;</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      background-color: hotpink;
      &amp;:hover {
        color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
      }
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This has a hotpink background.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/48f48eb15a459ad1c0995a5aa214c0b2c0287f84.png" alt="image-20221213124738854" tabindex="0" loading="lazy"><figcaption>image-20221213124738854</figcaption></figure><p>无论是<strong>Object Styles</strong>还是<strong>String Styles</strong>，我们都可以直接在定义样式的时候读取上下文的 js 变量，这个可以让我们很方便地更改样式。</p><h2 id="_3-styled-components" tabindex="-1"><a class="header-anchor" href="#_3-styled-components" aria-hidden="true">#</a> 3.Styled Components</h2><p><strong>Styled Components 基础用法</strong> Styled Components 导出了一些带有 html 标签的内置组件。</p><h3 id="_3-1-写一个带样式的组件" tabindex="-1"><a class="header-anchor" href="#_3-1-写一个带样式的组件" aria-hidden="true">#</a> 3.1 写一个带样式的组件</h3><p><code>styled</code>和<code>css</code>非常相似，除了你用 html 标签或 React 组件调用它，然后用字符串样式的模板文字或对象样式的常规函数调用来调用它。</p><p>语法：styled.元素名<code>样式</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: turquoise;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This my button component.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/60cc31773acca433bc2fa995080c711ff866476a.png" alt="image-20221213205055196" tabindex="0" loading="lazy"><figcaption>image-20221213205055196</figcaption></figure><h3 id="_3-2-通过参数控制样式" tabindex="-1"><a class="header-anchor" href="#_3-2-通过参数控制样式" aria-hidden="true">#</a> 3.2 通过参数控制样式</h3><p><strong>Styled Components 的 Props</strong> Styled Components 生成的组件也可以根据传入的 Props 来更改样式</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>primary <span class="token operator">?</span> <span class="token string">&#39;hotpink&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;turquoise&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> Container <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> props<span class="token punctuation">.</span>column <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;column&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Container</span></span> <span class="token attr-name">column</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a regular button.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">primary</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a primary button.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Container</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/2c23d647bf900fa4c8d593c8384fbf4971b3550b.png" alt="image-20221213211843757" tabindex="0" loading="lazy"><figcaption>image-20221213211843757</figcaption></figure><h3 id="_3-3-通过传classname创建组件" tabindex="-1"><a class="header-anchor" href="#_3-3-通过传classname创建组件" aria-hidden="true">#</a> 3.3 通过传className创建组件</h3><p>语法：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">styled</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">text&lt;/
p&gt;) )\`样式\`
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>分析：相当于把样式通过className传递给了元素</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">const</span> <span class="token function-variable function">Basic</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Some text</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> Fancy <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Basic<span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: hotpink;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fancy</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/66d270a59df509fa94d5988c28ebd530db563790.png" alt="image-20221213212041581" tabindex="0" loading="lazy"><figcaption>image-20221213212041581</figcaption></figure><h3 id="_3-4-创建与某个组件相同的样式" tabindex="-1"><a class="header-anchor" href="#_3-4-创建与某个组件相同的样式" aria-hidden="true">#</a> 3.4 创建与某个组件相同的样式</h3><p>有时您想使用一个组件创建一些样式，然后再次将这些样式用于另一个组件，该方法可用于此目的。</p><p>语法：<code>样式组件.withComponent(&#39;元素&#39;)</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">const</span> Section <span class="token operator">=</span> styled<span class="token punctuation">.</span>section<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  background: #333;
  color: #fff;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// Aside样式跟Section样式相同</span>
<span class="token keyword">const</span> Aside <span class="token operator">=</span> Section<span class="token punctuation">.</span><span class="token function">withComponent</span><span class="token punctuation">(</span><span class="token string">&#39;aside&#39;</span><span class="token punctuation">)</span>
<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Section</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a section</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Section</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Aside</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is an aside</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Aside</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/178bbf531f764220bba43a0b43fca2567d001b5a.png" alt="image-20221213212523562" tabindex="0" loading="lazy"><figcaption>image-20221213212523562</figcaption></figure><h3 id="_3-5-嵌套写法" tabindex="-1"><a class="header-anchor" href="#_3-5-嵌套写法" aria-hidden="true">#</a> 3.5 嵌套写法</h3>`,26),O=n("h4",{子组件:"",id:"_3-5-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-5-1","aria-hidden":"true"},"#"),s(" 3.5.1 $")],-1),G={href:"https://www.styled-components.com/docs/faqs#can-i-refer-to-other-components",target:"_blank",rel:"noopener noreferrer"},V={href:"https://emotion.sh/docs/@emotion/babel-plugin",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"emotion",-1),W=n("code",null,"emotion components",-1),X=e(`<p>语法：父组件 = styled.元素<code>\${子组件} {样式}</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Child <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: red;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> Parent <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Child<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {
    color: green;
  }
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Green because I am inside a Parent</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Red because I am not inside a Parent</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d05c31aa64be14c6898fb2f9cc5a1265a43f401c.png" alt="image-20221213212915098" tabindex="0" loading="lazy"><figcaption>image-20221213212915098</figcaption></figure><h4 id="_3-5-2-对象-键值对" tabindex="-1"><a class="header-anchor" href="#_3-5-2-对象-键值对" aria-hidden="true">#</a> 3.5.2 对象(键值对)</h4><p>组件选择器也可以与对象样式一起使用</p><p>语法:</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>父组件 <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">元素</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>子组件<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>样式<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Child <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> Parent <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Child<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">green</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">red</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/733e503cddf0831b7f9313fda0c9b93c6cef1bfb.png" alt="image-20221213213342914" tabindex="0" loading="lazy"><figcaption>image-20221213213342914</figcaption></figure><h3 id="_3-6-对象样式" tabindex="-1"><a class="header-anchor" href="#_3-6-对象样式" aria-hidden="true">#</a> 3.6 对象样式</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">const</span> <span class="token constant">H1</span> <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">h1</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">20</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> props<span class="token punctuation">.</span>color<span class="token punctuation">,</span>  <span class="token literal-property property">width</span><span class="token operator">:</span>props<span class="token punctuation">.</span>width <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">H1</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightgreen<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is lightgreen.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">H1</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/57fa8f06b69d2c9365e3cf44e45cf020c2a19fa7.png" alt="image-20221213214851893" tabindex="0" loading="lazy"><figcaption>image-20221213214851893</figcaption></figure><h3 id="_3-7-自定义-prop-转发" tabindex="-1"><a class="header-anchor" href="#_3-7-自定义-prop-转发" aria-hidden="true">#</a> 3.7 自定义 prop 转发</h3><p>默认情况下，Emotion 会将所有 props（<code>theme</code>除外）传递给自定义组件，并且仅传递作为字符串标签的有效 html 属性的 prop。可以通过传递自定义函数来自定义此设置。您还可以使用<code>shouldForwardProp</code>来过滤掉无效的 html 属性。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> isPropValid <span class="token keyword">from</span> <span class="token string">&#39;@emotion/is-prop-valid&#39;</span>
<span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> <span class="token constant">H1</span> <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">shouldForwardProp</span><span class="token operator">:</span> <span class="token parameter">prop</span> <span class="token operator">=&gt;</span> <span class="token function">isPropValid</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> prop <span class="token operator">!==</span> <span class="token string">&#39;color&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> props<span class="token punctuation">.</span>color
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">H1</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightgreen<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is lightgreen.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">H1</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/86abd793988549866422840d0d2548bda93026bb.png" alt="image-20221213215311231" tabindex="0" loading="lazy"><figcaption>image-20221213215311231</figcaption></figure><h3 id="_3-8-动态样式" tabindex="-1"><a class="header-anchor" href="#_3-8-动态样式" aria-hidden="true">#</a> 3.8 动态样式</h3><p>您可以创建基于 props 的动态样式，并在样式中使用它们。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">dynamicStyle</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=&gt;</span>
  css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
  </span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> Container <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dynamicStyle<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Container</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightgreen<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is lightgreen.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Container</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d9ef4d5fa40c63a7f54c12d3d35c334e91743c2f.png" alt="image-20221213220140864" tabindex="0" loading="lazy"><figcaption>image-20221213220140864</figcaption></figure><h3 id="_3-9-as-prop" tabindex="-1"><a class="header-anchor" href="#_3-9-as-prop" aria-hidden="true">#</a> 3.9 as prop</h3><p>要使用样式化组件中的样式但要更改呈现的元素，可以使用as prop。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: hotpink;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/emotion-js/emotion<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    Emotion on GitHub
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/cb866b485db2dcfec11d62fac83e22acb1773889.png" alt="image-20221213220134546" tabindex="0" loading="lazy"><figcaption>image-20221213220134546</figcaption></figure><h3 id="_3-10-嵌套元素样式写法" tabindex="-1"><a class="header-anchor" href="#_3-10-嵌套元素样式写法" aria-hidden="true">#</a> 3.10 嵌套元素样式写法</h3><p>我们可以使用以下方法嵌套选择器：<code>&amp;</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>
<span class="token keyword">const</span> Example <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: lightgreen;
  &amp; &gt; a {
    color: hotpink;
  }
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Example</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">nested</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Example</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/ea0fe7df42f32ecf6776ffe9deccff5ce4f85f7f.png" alt="image-20221213220109366" tabindex="0" loading="lazy"><figcaption>image-20221213220109366</figcaption></figure><h2 id="_4-composition" tabindex="-1"><a class="header-anchor" href="#_4-composition" aria-hidden="true">#</a> 4.Composition</h2><p>组合是<code>emotion</code>中最强大、最有用的模式之一。您可以通过在另一个样式块中插入从<code>css</code>返回的值来组合样式。</p><h3 id="_4-1-样式复用" tabindex="-1"><a class="header-anchor" href="#_4-1-样式复用" aria-hidden="true">#</a> 4.1 样式复用</h3><p>在 Emotion 中，我们可以把通用样式用变量声明，然后在不同的组件中共享。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> base <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: hotpink;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
      background-color: #eee;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is hotpink.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 <code>base</code> 样式在 render 时被使用。如果我们有其它的组件用到 base 样式，我们也可以导入 base 这个变量来使用。</p><h3 id="_4-2-样式优先级" tabindex="-1"><a class="header-anchor" href="#_4-2-样式优先级" aria-hidden="true">#</a> 4.2 样式优先级</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> danger <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: red;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> base <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  background-color: darkgreen;
  color: turquoise;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>base<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This will be turquoise</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>danger<span class="token punctuation">,</span> base<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      This will be also be turquoise since the base styles overwrite the danger
      styles.
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>base<span class="token punctuation">,</span> danger<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This will be red</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/99cc1b67631d8bbb2ae38d6f50b8fe2f46571037.png" alt="image-20221213221609976" tabindex="0" loading="lazy"><figcaption>image-20221213221609976</figcaption></figure><p>写样式的时候难免会需要覆盖样式的情况，这时候我们可以像上面一样调整 <code>base</code> 和 <code>danger</code> 的先后顺序来覆盖（后面的样式优先级较高）。</p><h2 id="_5-object-styles" tabindex="-1"><a class="header-anchor" href="#_5-object-styles" aria-hidden="true">#</a> 5.Object Styles</h2><p>带对象的写作风格是一种直接构建在<code>emotion</code>核心的强大模式。您可以使用<code>camelCase</code>来编写css属性，而不是像普通css那样使用<code>kebab-case</code>大小写，例如背景色将是backgroundColor。对象样式对于css属性特别有用，因为您不需要像字符串样式那样的css调用，但是对象样式也可以与样式一起使用。</p><h3 id="_5-1-使用-css-props" tabindex="-1"><a class="header-anchor" href="#_5-1-使用-css-props" aria-hidden="true">#</a> 5.1 使用 css props</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;darkorchid&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;lightgray&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is darkorchid.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/14181788a3309a5df5fbf2a5ede49f23b6e071c2.png" alt="image-20221213223856868" tabindex="0" loading="lazy"><figcaption>image-20221213223856868</figcaption></figure><h3 id="_5-2-使用styled" tabindex="-1"><a class="header-anchor" href="#_5-2-使用styled" aria-hidden="true">#</a> 5.2 使用<code>styled</code></h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span><span class="token function">button</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;darkorchid&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> props<span class="token punctuation">.</span>fontSize
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">fontSize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">16</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a darkorchid button.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/642dfb1e199286104af27b8bad8990ecc212e902.png" alt="image-20221213224008883" tabindex="0" loading="lazy"><figcaption>image-20221213224008883</figcaption></figure><h3 id="_5-3-子选择器" tabindex="-1"><a class="header-anchor" href="#_5-3-子选择器" aria-hidden="true">#</a> 5.3 子选择器</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;darkorchid&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;&amp; .name&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;orange&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is darkorchid.
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is orange</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/b349553deeaa0c1bb843f422d22c652c004721d6.png" alt="image-20221213224107609" tabindex="0" loading="lazy"><figcaption>image-20221213224107609</figcaption></figure><h3 id="_5-4-媒体查询" tabindex="-1"><a class="header-anchor" href="#_5-4-媒体查询" aria-hidden="true">#</a> 5.4 媒体查询</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;darkorchid&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;@media(min-width: 420px)&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;orange&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is orange on a big screen and darkorchid on a small screen.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/22fb6f288af1223c71747a4e36152ad6d64a8d23.png" alt="image-20221213224217334" tabindex="0" loading="lazy"><figcaption>image-20221213224217334</figcaption></figure><h3 id="_5-5-numbers" tabindex="-1"><a class="header-anchor" href="#_5-5-numbers" aria-hidden="true">#</a> 5.5 Numbers</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
      <span class="token literal-property property">zIndex</span><span class="token operator">:</span> <span class="token number">200</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This has 8px of padding and a z-index of 200.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/8babd6621e973346e38780fd52d46fe63cdc4b7d.png" alt="image-20221213224256993" tabindex="0" loading="lazy"><figcaption>image-20221213224256993</figcaption></figure><h3 id="_5-6-arrays" tabindex="-1"><a class="header-anchor" href="#_5-6-arrays" aria-hidden="true">#</a> 5.6 Arrays</h3><p>嵌套数组被展平</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;darkorchid&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    This is darkorchid with a hotpink background and 8px of padding.
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/92d2578e8eac63bbc96f4417725d0f6d970cd057.png" alt="image-20221213224346539" tabindex="0" loading="lazy"><figcaption>image-20221213224346539</figcaption></figure><h3 id="_5-7-用css" tabindex="-1"><a class="header-anchor" href="#_5-7-用css" aria-hidden="true">#</a> 5.7 用<code>css</code></h3><p>您也可以将<code>css</code>与对象样式一起使用。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> hotpink <span class="token operator">=</span> <span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hotpink<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is hotpink</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/a5393da38448be4d92c7b11729fed649538c5ae2.png" alt="image-20221213224458835" tabindex="0" loading="lazy"><figcaption>image-20221213224458835</figcaption></figure><h3 id="_5-8-composition-样式复用" tabindex="-1"><a class="header-anchor" href="#_5-8-composition-样式复用" aria-hidden="true">#</a> 5.8 Composition - 样式复用</h3>`,64),D={href:"https://emotion.sh/docs/composition",target:"_blank",rel:"noopener noreferrer"},U=e(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> hotpink <span class="token operator">=</span> <span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> hotpinkHoverOrFocus <span class="token operator">=</span> <span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;&amp;:hover,&amp;:focus&#39;</span><span class="token operator">:</span> hotpink
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> hotpinkWithBlackBackground <span class="token operator">=</span> <span class="token function">css</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  hotpink
<span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hotpink<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is hotpink</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hotpinkHoverOrFocus<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is hotpink on hover or focus</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hotpinkWithBlackBackground<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      This has a black background and is hotpink. Try moving where hotpink is in
      the css call and see if the color changes.
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/aba3db5b7cf387f6af88b34f3948d2a23a12bd19.png" alt="image-20221213224550509" tabindex="0" loading="lazy"><figcaption>image-20221213224550509</figcaption></figure><h2 id="_6-nested-selectors" tabindex="-1"><a class="header-anchor" href="#_6-nested-selectors" aria-hidden="true">#</a> 6.Nested Selectors</h2><p>有时，将选择器嵌套到当前类或 React 组件中的元素很有用。下面显示了带有元素选择器的示例。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> paragraph <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: turquoise;

  a {
    border-bottom: 1px solid currentColor;
    cursor: pointer;
  }
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>paragraph<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    Some text. </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">A link with a bottom border.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/2197b572f97c83f1a4a221a56f679f9d487405eb.png" alt="image-20221213224756200" tabindex="0" loading="lazy"><figcaption>image-20221213224756200</figcaption></figure><p>当组件是子组件时，使用 <code>&amp;</code> 来选择自己并设置样式</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> paragraph <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: turquoise;

  header &amp; {
    color: green;
  }
</span><span class="token template-punctuation string">\`</span></span>
<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>paragraph<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is green since it&#39;s inside a header</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>paragraph<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is turquoise since it&#39;s not inside a header.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/f2a168ff43f2f5be762d1b03832c5474cf620e63.png" alt="image-20221213224813608" tabindex="0" loading="lazy"><figcaption>image-20221213224813608</figcaption></figure><h2 id="_7-media-queries" tabindex="-1"><a class="header-anchor" href="#_7-media-queries" aria-hidden="true">#</a> 7.Media Queries</h2><p>在<code>emotion</code>中使用媒体查询就像在常规 css 中使用媒体查询一样，只是您不必在块内指定选择器，您可以将 css 直接放在 css 块中。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      font-size: 30px;
      @media (min-width: 420px) {
        font-size: 50px;
      }
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    Some text!
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/263d631dd7b4764a5b7b996461c6b92945aad50a.png" alt="image-20221213225036540" tabindex="0" loading="lazy"><figcaption>image-20221213225036540</figcaption></figure><h2 id="_8-global-styles" tabindex="-1"><a class="header-anchor" href="#_8-global-styles" aria-hidden="true">#</a> 8.Global Styles</h2><p>有时您可能希望插入全局 css，例如resets 或 font faces。您可以使用该<code>Global</code>组件来执行此操作。它接受一个 <code>styles</code>prop，该 prop 接受与<code>css</code> prop 相同的值，除了全局插入样式。当样式更改或全局组件卸载时，也会删除全局样式。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Global<span class="token punctuation">,</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Global</span></span>
      <span class="token attr-name">styles</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        .some-class {
          color: hotpink !important;
        }
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Global</span></span>
      <span class="token attr-name">styles</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token string-property property">&#39;.some-class&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
          <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>some-class<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is hotpink now!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/7988629dc67da128788bcc054e19a1199f8c6712.png" alt="image-20221213225321584" tabindex="0" loading="lazy"><figcaption>image-20221213225321584</figcaption></figure><h2 id="_9-keyframes" tabindex="-1"><a class="header-anchor" href="#_9-keyframes" aria-hidden="true">#</a> 9.Keyframes</h2><p>您可以使用<code>@emotive/react</code>中的<code>keyframes</code>来定义动画。<code>keyframe</code>接受css关键帧定义，并返回一个可以在样式中使用的对象。您可以像<code>css</code>一样使用字符串或对象。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css<span class="token punctuation">,</span> keyframes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> bounce <span class="token operator">=</span> keyframes<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  from, 20%, 53%, 80%, to {
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }

  70% {
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0,-4px,0);
  }
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      animation: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bounce<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 1s ease infinite;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    some bouncing text!
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d28d6aae15d22a847285ba8bb2a7a82271e416ab.png" alt="image-20221213225454209" tabindex="0" loading="lazy"><figcaption>image-20221213225454209</figcaption></figure><h2 id="_10-attaching-props-附加额外的属性" tabindex="-1"><a class="header-anchor" href="#_10-attaching-props-附加额外的属性" aria-hidden="true">#</a> 10.Attaching Props - 附加额外的属性</h2><p>一些 css-in-js 库提供了将 props 附加到组件的 API，而不是让我们自己的 API 来做到这一点，我们建议创建一个常规的 react 组件，使用 css prop 并像附加任何其他 React 组件一样附加 props。</p><p>请注意，如果 css 是通过 props 传递下来的，它将优先于组件中的 css。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> pinkInput <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  background-color: pink;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">const</span> <span class="token function-variable function">RedPasswordInput</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      background-color: red;
      display: block;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
    <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RedPasswordInput</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RedPasswordInput</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pink<span class="token punctuation">&quot;</span></span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pinkInput<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/844df046c45d332f079a5a1b949d80a4450359aa.png" alt="image-20221213230119759" tabindex="0" loading="lazy"><figcaption>image-20221213230119759</figcaption></figure><h2 id="_11-theming" tabindex="-1"><a class="header-anchor" href="#_11-theming" aria-hidden="true">#</a> 11.Theming</h2><p>主题包含在<code>@emotion/react</code>中。 将<code>ThemeProvider</code>添加到应用程序的顶层，并在样式组件中使用<code>props.theme</code>访问主题，或者提供一个接受主题作为css属性的函数。</p><h3 id="_11-1-css-prop" tabindex="-1"><a class="header-anchor" href="#_11-1-css-prop" aria-hidden="true">#</a> 11.1 css prop</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ThemeProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">theme</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">some other text</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/b7f0c6de7e1976e5de1881f5fb71510b1aa064d2.png" alt="image-20221213230310767" tabindex="0" loading="lazy"><figcaption>image-20221213230310767</figcaption></figure><h3 id="_11-2-styled" tabindex="-1"><a class="header-anchor" href="#_11-2-styled" aria-hidden="true">#</a> 11.2 styled</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ThemeProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>
<span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> SomeText <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SomeText</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">some text</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SomeText</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/c1f82f03c9823ade2b249fdc155e655ac449b237.png" alt="image-20221213230337193" tabindex="0" loading="lazy"><figcaption>image-20221213230337193</figcaption></figure><h3 id="_11-3-usetheme-hook" tabindex="-1"><a class="header-anchor" href="#_11-3-usetheme-hook" aria-hidden="true">#</a> 11.3 useTheme hook</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ThemeProvider<span class="token punctuation">,</span> useTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span>

<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&#39;hotpink&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">SomeText</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SomeText</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">some text</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SomeText</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/e62c366c81154fc1fc57c9deaa07ccb756351394.png" alt="image-20221213230505784" tabindex="0" loading="lazy"><figcaption>image-20221213230505784</figcaption></figure><h2 id="_12-typescript" tabindex="-1"><a class="header-anchor" href="#_12-typescript" aria-hidden="true">#</a> 12.TypeScript</h2><p>Emotion包括<code>@emotion/react</code> and <code>@emotion/styled</code>的TypeScript定义。这些定义通过对象语法、HTML/SVG标记名和属性类型推断css属性的类型。</p>`,39),K=n("p",null,[n("strong",null,"@emotion/react")],-1),Q=n("p",null,"这种方法使用好像比较麻烦，可以去看看官网",-1),Y={href:"https://emotion.sh/docs/typescript",target:"_blank",rel:"noopener noreferrer"},Z=e(`<p><code>@emotion/styled</code>与TypeScript配合使用，无需任何额外配置。</p><h3 id="_12-1-html-svg-elements" tabindex="-1"><a class="header-anchor" href="#_12-1-html-svg-elements" aria-hidden="true">#</a> 12.1 HTML/SVG elements</h3><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> Link <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: red;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> Icon <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;svg&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  stroke: green;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> NotALink <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: red;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NotALink</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NotALink</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span> Property <span class="token string">&#39;href&#39;</span> does not exist <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>withComponent</code></p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">const</span> NotALink <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: red;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> Link <span class="token operator">=</span> NotALink<span class="token punctuation">.</span><span class="token function">withComponent</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>

<span class="token comment">// No errors!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-2-定义-props-类型" tabindex="-1"><a class="header-anchor" href="#_12-2-定义-props-类型" aria-hidden="true">#</a> 12.2 定义 props 类型</h3><p>您可以定义<code>styled components</code> props 的类型。</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">ImageProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  src<span class="token operator">:</span> <span class="token builtin">string</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// Using a css block</span>
<span class="token keyword">const</span> Image0 <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token operator">&lt;</span>ImageProps<span class="token operator">&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
  background: url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) center center;
  background-size: contain;
</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">const</span> Image0 <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImageProps</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\`
  width: \${props =&gt; props.width};
  background: url(\${props =&gt; props.src}) center center;
  background-size: contain;
\`

// Or with object styles
const Image1 = styled(&#39;div&#39;)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImageProps</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(
  </span><span class="token punctuation">{</span>
    backgroundSize<span class="token operator">:</span> <span class="token string">&#39;contain&#39;</span>
  <span class="token punctuation">}</span><span class="token plain-text">,
  props =&gt; (</span><span class="token punctuation">{</span>
    width<span class="token operator">:</span> props<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
    background<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) center center</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token plain-text">)
)
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-3-react-components" tabindex="-1"><a class="header-anchor" href="#_12-3-react-components" aria-hidden="true">#</a> 12.3 React Components</h3><p><code>Emotion </code>还可以设置React组件的样式，并根据预期推断组件 props。</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token constant">FC</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">ComponentProps</span> <span class="token punctuation">{</span>
  className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Component<span class="token operator">:</span> <span class="token constant">FC</span><span class="token operator">&lt;</span>ComponentProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> label<span class="token punctuation">,</span> className <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> StyledComponent0 <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Component<span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>label <span class="token operator">===</span> <span class="token string">&#39;Important&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;red&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> StyledComponent1 <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Component<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledComponent0</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Important<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledComponent1</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Yea! No need to re-type this label prop.<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function nn(sn,an){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("p",null,[n("a",d,[s("CSS in JS"),t(a)]),s(" 已逐渐发展为 React 应用中写样式的一个主流的方案，著名组件库 "),n("a",k,[s("material-ui"),t(a)]),s(" 也已经使用 CSS in JS 来实现。 CSS in JS 的实现方式有两种: 唯一CSS选择器和内联样式。因此")]),v,n("p",null,[n("a",m,[s("Emotion"),t(a)]),s(" 是 CSS in JS 的众多实现方案中的其中一个，下面介绍一下它的使用。")]),n("p",null,[n("em",null,[s("说明：以下的介绍都来自于"),n("a",g,[s("Emotion官方文档"),t(a)])])]),b,n("p",null,[n("a",h,[s("Emotion"),t(a)]),s(" 有两种写 CSS 的方式："),n("a",f,[s("css-prop"),t(a)]),s(" 和 "),n("a",y,[s("Styled Components"),t(a)]),s("。")]),x,j,_,n("p",null,[s("此方法"),w,n("a",q,[s("创建 React App"),t(a)]),s(" 或其他不允许自定义 Babel 配置的项目。 请改用 "),n("a",S,[s("JSX 注释方法"),t(a)]),s("。")]),C,n("blockquote",null,[n("p",null,[n("a",T,[s("完整的"),F,s(" 文档"),t(a)])])]),n("blockquote",null,[n("p",null,[s("If you are using the compatible React version ("),z,s(") then you can opt into using "),n("a",P,[s("the new JSX runtimes"),t(a)]),s(" by using such configuration:")]),N]),A,n("p",null,[s("这里指的是使用 "),n("a",B,[s("babel 编译 typescript"),t(a)]),s(" 时的配置")]),I,n("blockquote",null,[n("p",null,[n("a",E,[s("Object Style Documentation"),t(a)])])]),R,n("p",null,[s("要传递字符串样式，您必须使用 "),L,s("导出的"),$,s(" ，它可以用作"),n("a",H,[s("标记模板文字"),t(a)]),s("，如下所示。")]),J,O,n("p",null,[s("与"),n("a",G,[s("styled-components"),t(a)]),s("类似，当使用"),n("a",V,[s("@emotion/babel-plugin"),t(a)]),s("时，"),M,s("允许"),W,s("像常规CSS选择器一样被嵌套。")]),X,n("p",null,[n("a",D,[s("Learn more composition in Emotion"),t(a)]),s(".")]),U,n("blockquote",null,[K,Q,n("p",null,[n("a",Y,[s("Emotion – Package Summaries"),t(a)])])]),Z])}const en=p(l,[["render",nn],["__file","22.html.vue"]]);export{en as default};
