const e=JSON.parse('{"key":"v-5cce0727","path":"/back_end/nodeJs/12.html","title":"12 【操作mongodb数据库】","lang":"zh-CN","frontmatter":{"description":"12 【操作mongodb数据库】 1.简介 1.Mongoose是一个让我们可以通过Node来操作MongoDB的模块。 2.Mongoose是一个对象文档模型(ODM)库,它对Node原生的MongoDB模块进行了进一步的优化封装，并提供了更多的功能。在大多数情况下，它被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型转换等好处 3.mongoose中的对象： Schema 模式对象（Schema对象定义约束了数据库中的文档结构） Model 模型对象（Model对象作为集合中的所有文档的表示，相当于MongoDB数据库中的集合collection） Document 文档对象（Document表示集合中的具体文档，相当于集合中的一个具体的文档）","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/back_end/nodeJs/12.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"12 【操作mongodb数据库】"}],["meta",{"property":"og:description","content":"12 【操作mongodb数据库】 1.简介 1.Mongoose是一个让我们可以通过Node来操作MongoDB的模块。 2.Mongoose是一个对象文档模型(ODM)库,它对Node原生的MongoDB模块进行了进一步的优化封装，并提供了更多的功能。在大多数情况下，它被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型转换等好处 3.mongoose中的对象： Schema 模式对象（Schema对象定义约束了数据库中的文档结构） Model 模型对象（Model对象作为集合中的所有文档的表示，相当于MongoDB数据库中的集合collection） Document 文档对象（Document表示集合中的具体文档，相当于集合中的一个具体的文档）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"12 【操作mongodb数据库】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2.连接数据库","slug":"_2-连接数据库","link":"#_2-连接数据库","children":[]},{"level":2,"title":"3.创建模式对象和模型对象","slug":"_3-创建模式对象和模型对象","link":"#_3-创建模式对象和模型对象","children":[]},{"level":2,"title":"4.文档新增","slug":"_4-文档新增","link":"#_4-文档新增","children":[{"level":3,"title":"4.1 save()","slug":"_4-1-save","link":"#_4-1-save","children":[]},{"level":3,"title":"4.2 create()","slug":"_4-2-create","link":"#_4-2-create","children":[]},{"level":3,"title":"4.3 insertMany()","slug":"_4-3-insertmany","link":"#_4-3-insertmany","children":[]}]},{"level":2,"title":"5.文档查询","slug":"_5-文档查询","link":"#_5-文档查询","children":[{"level":3,"title":"5.1 find()","slug":"_5-1-find","link":"#_5-1-find","children":[]},{"level":3,"title":"5.2 findById()","slug":"_5-2-findbyid","link":"#_5-2-findbyid","children":[]},{"level":3,"title":"5.3 findOne()","slug":"_5-3-findone","link":"#_5-3-findone","children":[]},{"level":3,"title":"5.4 复杂查询【$where】","slug":"_5-4-复杂查询【-where】","link":"#_5-4-复杂查询【-where】","children":[]},{"level":3,"title":"5.5 常用查询条件","slug":"_5-5-常用查询条件","link":"#_5-5-常用查询条件","children":[]},{"level":3,"title":"5.6 特定类型查询","slug":"_5-6-特定类型查询","link":"#_5-6-特定类型查询","children":[]}]},{"level":2,"title":"6.文档更新","slug":"_6-文档更新","link":"#_6-文档更新","children":[{"level":3,"title":"6.1 update()","slug":"_6-1-update","link":"#_6-1-update","children":[]},{"level":3,"title":"6.2 updateOne()","slug":"_6-2-updateone","link":"#_6-2-updateone","children":[]},{"level":3,"title":"6.3 updateMany()","slug":"_6-3-updatemany","link":"#_6-3-updatemany","children":[]},{"level":3,"title":"6.4 find()+save()","slug":"_6-4-find-save","link":"#_6-4-find-save","children":[]},{"level":3,"title":"6.5 findOne() + save()","slug":"_6-5-findone-save","link":"#_6-5-findone-save","children":[]},{"level":3,"title":"6.6 fingOneAndUpdate()","slug":"_6-6-fingoneandupdate","link":"#_6-6-fingoneandupdate","children":[]},{"level":3,"title":"6.7 findByIdAndUpdate()","slug":"_6-7-findbyidandupdate","link":"#_6-7-findbyidandupdate","children":[]}]},{"level":2,"title":"7.文档删除","slug":"_7-文档删除","link":"#_7-文档删除","children":[{"level":3,"title":"7.1 deleteOne()","slug":"_7-1-deleteone","link":"#_7-1-deleteone","children":[]},{"level":3,"title":"7.2 findOneAndRemove()","slug":"_7-2-findoneandremove","link":"#_7-2-findoneandremove","children":[]},{"level":3,"title":"7.3 findByIdAndRemove()","slug":"_7-3-findbyidandremove","link":"#_7-3-findbyidandremove","children":[]}]},{"level":2,"title":"8.前后钩子","slug":"_8-前后钩子","link":"#_8-前后钩子","children":[]},{"level":2,"title":"9.文档验证","slug":"_9-文档验证","link":"#_9-文档验证","children":[{"level":3,"title":"9.1 【required】：数据必填","slug":"_9-1-【required】-数据必填","link":"#_9-1-【required】-数据必填","children":[]},{"level":3,"title":"9.2 【default】：默认值","slug":"_9-2-【default】-默认值","link":"#_9-2-【default】-默认值","children":[]},{"level":3,"title":"9.3 【min】【max】：最小/大值","slug":"_9-3-【min】【max】-最小-大值","link":"#_9-3-【min】【max】-最小-大值","children":[]},{"level":3,"title":"9.4 【match】：正则匹配","slug":"_9-4-【match】-正则匹配","link":"#_9-4-【match】-正则匹配","children":[]},{"level":3,"title":"9.5【enum】：枚举匹配","slug":"_9-5【enum】-枚举匹配","link":"#_9-5【enum】-枚举匹配","children":[]},{"level":3,"title":"9.6 【validate】：自定义匹配","slug":"_9-6-【validate】-自定义匹配","link":"#_9-6-【validate】-自定义匹配","children":[]}]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":14.27,"words":4281},"filePathRelative":"back_end/nodeJs/12.md","localizedDate":"2023年1月30日","excerpt":"<h1> 12 【操作mongodb数据库】</h1>\\n<h2> 1.简介</h2>\\n<ul>\\n<li>1.Mongoose是一个让我们可以通过Node来操作MongoDB的模块。</li>\\n<li>2.Mongoose是一个对象文档模型(ODM)库,它对Node原生的MongoDB模块进行了进一步的优化封装，并提供了更多的功能。在大多数情况下，它被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型转换等好处</li>\\n<li>3.mongoose中的对象：\\n<ul>\\n<li>Schema  模式对象（Schema对象定义约束了数据库中的文档结构）</li>\\n<li>Model  模型对象（Model对象作为集合中的所有文档的表示，相当于MongoDB数据库中的集合collection）</li>\\n<li>Document  文档对象（Document表示集合中的具体文档，相当于集合中的一个具体的文档）</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
