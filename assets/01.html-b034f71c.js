import{ab as t,G as e,H as o,E as n,S as s,N as p,ac as c,W as i}from"./framework-09305b5d.js";const l={},u=n("h1",{id:"mongodb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb","aria-hidden":"true"},"#"),s(" MongoDB")],-1),r={href:"https://github.com/Vacricticy/mongodb_practice",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/lyyrhf/article/details/115469161",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"_1-下载安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-下载安装","aria-hidden":"true"},"#"),s(" 1.下载安装")],-1),m=n("h3",{id:"_1-1-下载mongodb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-下载mongodb","aria-hidden":"true"},"#"),s(" 1.1 下载MongoDB")],-1),v=n("p",null,"这里我推介下载zip版本，解压到任意盘，由于C盘容易满，所以我放到了D盘。我在D盘创建了一个 mongoDB 的目录，并将压缩包解压到了这个目录里面。",-1),b={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},g=c(`<figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3egzpj5qdj31dt0nzk40.jpg" alt="image-20220618195425165" tabindex="0" loading="lazy"><figcaption>image-20220618195425165</figcaption></figure><blockquote><p>mongodb 可以不用配置环境变量。配置环境变量只是为了能在终端（cmd窗口）任意路径中执行bin目录中的命令，就是起到一个方便的作用。</p><p>环境变量也非常的简单,<code>H:\\mongoDB\\bin</code>将这个添加到系统变量path</p><p>不配置环境变量。如果要启动数据库只能在解压后的 bin 目录中打开 cmd 窗口输入 mongod --dbpath=..\\data\\db 才可以启动，（这里 dbpath 是指定数据存放的位置，默认在c盘）这里暂时不要启动数据库，因为没有创建 data 目录还有 db 目录</p><p>不过等会会将 MongoDB 添加到系统服务中，这样就不用手动来启动了。</p></blockquote><h3 id="_1-2-创建目录及配置文件" tabindex="-1"><a class="header-anchor" href="#_1-2-创建目录及配置文件" aria-hidden="true">#</a> 1.2 创建目录及配置文件</h3><figure><img src="https://img-blog.csdnimg.cn/20210406195537258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x5eXJoZg==,size_16,color_FFFFFF,t_70" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>接下来在 F盘创建 <code>data</code> 目录，继续在 <code>data</code> <strong>目录下</strong>创建 <code>db</code> 以及 <code>log</code>。<strong><code>log</code> 目录中还需要创建 <code>mongod.log</code> 文件</strong>。这个文件一定要创建否则找不到会报错。</p><ul><li>db：表示数据存储的文件夹</li><li>log：表示日志打印的文件夹</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/a61b017b4467cdfa5d0956ac0d1f5617dc3a13b2.png" alt="image-20220618194533964" tabindex="0" loading="lazy"><figcaption>image-20220618194533964</figcaption></figure><p>然后在 <code>bin</code> 目录的<strong>同级</strong>目录创建 <code>mongod.cfg</code> 文件（说明：配置创建路径其实可以随意，但是不建议😅。后缀也可以随意，建议语义化点比如：cfg、config、conf…），并写入如下内容，<strong>注意：配置件缩进需要使用tab键</strong>（根据自己安装的路径来配置）。</p><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh2u3hn2j30mt0d2795.jpg" alt="image-20220618194730846" tabindex="0" loading="lazy"><figcaption>image-20220618194730846</figcaption></figure><p><strong>mongod.cfg</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># mongod.conf</span>

<span class="token comment"># for documentation of all options, see:</span>
<span class="token comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span>

<span class="token comment"># Where and how to store data.</span>
storage:
  dbPath: F:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>db
  journal:
    enabled: <span class="token boolean">true</span>
<span class="token comment">#  engine:</span>
<span class="token comment">#  mmapv1:</span>
<span class="token comment">#  wiredTiger:</span>

<span class="token comment"># where to write logging data.</span>
systemLog:
  destination: <span class="token function">file</span>
  logAppend: <span class="token boolean">true</span>
  path:  F:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>log<span class="token punctuation">\\</span>mongod.log

<span class="token comment"># network interfaces</span>
net:
  port: <span class="token number">27017</span>
  bindIp: <span class="token number">127.0</span>.0.1


<span class="token comment">#processManagement:</span>

<span class="token comment">#security:</span>

<span class="token comment">#operationProfiling:</span>

<span class="token comment">#replication:</span>

<span class="token comment">#sharding:</span>

<span class="token comment">## Enterprise-Only Options:</span>

<span class="token comment">#auditLog:</span>

<span class="token comment">#snmp:</span>

mongod <span class="token parameter variable">--config</span> H:<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>mongod.cfg <span class="token parameter variable">--install</span> <span class="token parameter variable">--serviceName</span> <span class="token string">&quot;mongodb&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>path 是配置打印日志的目录</li><li>dbpath 是配置数据的存储位置</li><li>port 是配置的端口号</li></ul><h3 id="_1-3-添加到服务-开机自动启动" tabindex="-1"><a class="header-anchor" href="#_1-3-添加到服务-开机自动启动" aria-hidden="true">#</a> 1.3 添加到服务（开机自动启动）</h3><p>只有将 <code>mongodb</code> 添加到系统服务中，他才能自动启动。</p><p><strong>注意</strong>！！<strong>必须以管理员身份打开 <code>cmd</code> 窗口。</strong></p><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh31effmj30xx0hvwfm.jpg" alt="image-20220618194902474" tabindex="0" loading="lazy"><figcaption>image-20220618194902474</figcaption></figure><figure><img src="https://img-blog.csdnimg.cn/8533efb70d064648a8307ff3f0217095.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5a-45aS055S355Sf,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="server" tabindex="0" loading="lazy"><figcaption>server</figcaption></figure><p><strong>这里表示执行配置文件，需要写入你的配置文件路径：</strong></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>mongod --config H:<span class="token function selector">\\mongodb</span><span class="token function selector">\\bin</span><span class="token function selector">\\mongod</span>.cfg --install --serviceName &quot;mongodb&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>如果配置文件执行报错，最终无法启动，那么就自己在命令行配置mongoDB，把上面需要执行的命令替换为如下命令即可(注意修改自己的路径)</strong></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>mongod --dbpath &quot;F:<span class="token function selector">\\data</span><span class="token function selector">\\db</span>&quot; --logpath &quot;F:<span class="token function selector">\\data</span><span class="token function selector">\\log</span><span class="token function selector">\\mongod</span>.log&quot; --install --serviceName &quot;mongodb&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>启动mongoDB：</strong></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>net start mongodb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>后续如果修改 mongoDB 的端口就直接改配置文件，删除服务（服务的删除执行命令：sc delete mongodb），重新执行“添加到服务”</strong></p><h3 id="_1-4-检查" tabindex="-1"><a class="header-anchor" href="#_1-4-检查" aria-hidden="true">#</a> 1.4 检查</h3><p>在键盘上按 “WIN+R”，输入“services.msc”指令确定。</p><p>打开服务后，找到MongoDB，如下图表示已经成功！</p><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh3cmeu6j314t0g2qdn.jpg" alt="image-20220618195406910" tabindex="0" loading="lazy"><figcaption>image-20220618195406910</figcaption></figure><p>到这里你已经完成了 mongoDB 的所有配置。接下来如果你需要连接数据库。分两种情况：</p><ul><li>使用 cmd 命令窗口连接 <ul><li>如果你已经配置了环境变量，直接在 cmd 窗口中输入 <code>mongo</code> 即可连接成功</li><li>如果没有配置环境变量，则需要在 bin 目录中打开 cmd 窗口，输入 <code>mongo</code></li></ul></li></ul><h2 id="_2-基本介绍" tabindex="-1"><a class="header-anchor" href="#_2-基本介绍" aria-hidden="true">#</a> 2.基本介绍</h2><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh3jh74yj30id0jajzd.jpg" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh3p846vj30n70c0adr.jpg" alt="image-20220618195909214" tabindex="0" loading="lazy"><figcaption>image-20220618195909214</figcaption></figure><p><strong>三个概念</strong></p><ol><li>数据库(database)：数据库是一个仓库，在仓库中可以存放集合(collection)</li><li>集合(collection)：一个集合类似于数组，在集合中可以存放文档(document)</li><li>文档(document)：文档数据库中的最小单位，我们存储和操作的内容都是文档</li></ol><figure><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh3xhtbwj310m0bj75i.jpg" alt="image-20220618195919953" tabindex="0" loading="lazy"><figcaption>image-20220618195919953</figcaption></figure><h2 id="_3-基本操作" tabindex="-1"><a class="header-anchor" href="#_3-基本操作" aria-hidden="true">#</a> 3.基本操作</h2><p>在MongoDB中，数据库和集合都不需要我们手动创建，当我们创建文档时，如果文档所在的集合或数据库不存在，她会自动创建数据库和集合！</p><p><strong>基本指令</strong></p><ul><li>show dbs 或show databases <ul><li>查看所有的数据库</li></ul></li><li>use xxx <ul><li>切换到指定的数据库</li></ul></li><li>db <ul><li>查看当前操作的数据库</li></ul></li><li>show collections <ul><li>查看当前数据库中所有的集合</li></ul></li></ul><h2 id="_4-插入文档" tabindex="-1"><a class="header-anchor" href="#_4-插入文档" aria-hidden="true">#</a> 4.插入文档</h2><ul><li>插入一条数据 <ul><li>db.collectionName.insertOne( {name:&#39;liu&#39;} ) <ul><li>db表示的是当前操作的数据库</li><li>collectionName表示操作的集合，若没有，则会自动创建</li><li>插入的文档如果没有手动提供_id属性，则会自动创建一个</li></ul></li></ul></li><li>插入多条数据 <ul><li>db.collectionName.insertMany( [ {name:&#39;liu5&#39;} , {name:&#39;liu6&#39;} ] ) <ul><li>需要用数组包起来</li></ul></li></ul></li><li>万能API：db.collectionName.insert()</li></ul><blockquote><p>向集合中插入一个或多个文档 当我们向集合中插入文档时，如果没有给文档指定_id属性，则数据库会自动给文档添加_id 该属性用来作为文档的唯一标识 <code>_id</code>可以自己指定，如果我们指定了，数据库就不会再添加了,如果自己指定_id必须也确保唯一性</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>stus<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;dselegent&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>stus<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;蜘蛛精&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>


#添加两万条数据
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">20000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token operator">+</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span> #需要执行<span class="token number">20000</span>次数据库的添加操作
<span class="token punctuation">}</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//20000</span>


#优化：
<span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">20000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token operator">+</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> #只需执行<span class="token number">1</span>次数据库的添加操作，可以节约很多时间

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-查询文档" tabindex="-1"><a class="header-anchor" href="#_5-查询文档" aria-hidden="true">#</a> 5.查询文档</h2><p><strong>查询数据</strong></p><ul><li><p>db.collectionName.find() 或db.collectionName.find({})</p><ul><li>查询集合所有的文档，即所有的数据。</li><li>查询到的是整个<strong>数组</strong>对象。在最外层是有一个对象包裹起来的。</li><li>db.collectionName.count()或db.collectionName.length() 统计文档个数</li></ul></li><li><p>db.collectionName.find({_id:222})</p><ul><li>条件查询。注意：结果返回的是一个<strong>数组</strong></li></ul></li><li><p>db.collectionName.findOne() 返回的是查询到的对象数组中的第一个对象</p><ul><li>注意：</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>#查询集合中的所有文档
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">222</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name  <span class="token comment">//错误 </span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">222</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token comment">//正确</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>db.stus.find({}).count()</strong></p><p>查询所有结果的数量</p><blockquote><ul><li><p>MongoDB的文档的属性值也可以是一个文档，当一个文档的属性值是文档时，我们称这个文档为内嵌文档</p></li><li><p>MongoDB支持直接通过内嵌文档的属性进行查询，如果要查询内嵌文档可以则可以通过==.的形式来匹配，且属性名必须使用引号==,双引号单引号都可以</p></li></ul></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code># <span class="token number">1</span><span class="token punctuation">.</span>mongodb支持直接通过内嵌文档的属性值进行查询
# 什么是内嵌文档：hobby就属于内嵌文档
<span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">hobby</span><span class="token operator">:</span><span class="token punctuation">{</span>
		<span class="token literal-property property">movies</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;movie1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;movie2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token literal-property property">cities</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;zhuhai&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;chengdu&#39;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hobby<span class="token punctuation">.</span>movies<span class="token operator">:</span><span class="token string">&#39;movie1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//错误</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;hobby.movies&quot;</span><span class="token operator">:</span><span class="token string">&#39;movie1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//此时查询的属性名必须加上引号</span>



#<span class="token number">2.</span>查询操作符的使用
#比较操作符
$gt 大于
$gte 大于等于
$lt 小于
$lte 小于等于
$ne 不等于
$eq 等于的另一种写法

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #大于<span class="token number">200</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #大于<span class="token number">200</span>小于<span class="token number">300</span>

$or 或者
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span> #大于<span class="token number">300</span>或小于<span class="token number">200</span>


#<span class="token number">3.</span>分页查询
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>页码<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">*</span> 每页显示的条数<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>每页显示的条数<span class="token punctuation">)</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> #前<span class="token number">10</span>条数据
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> #跳过前<span class="token number">50</span>条数据，即查询的是第<span class="token number">61</span><span class="token operator">-</span><span class="token number">70</span>条数据，即第<span class="token number">6</span>页的数据


#<span class="token number">4.</span>排序
db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">sal</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #<span class="token number">1</span>表示升序排列，<span class="token operator">-</span><span class="token number">1</span>表示降序排列
db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">sal</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">empno</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #先按照sal升序排列，如果遇到相同的sal，则按empno降序排列

#注意：skip<span class="token punctuation">,</span>limit<span class="token punctuation">,</span>sort可以以任意的顺序调用，最终的结果都是先调sort，再调skip，最后调limit

#<span class="token number">5.</span>设置查询结果的投影，即只过滤出自己想要的字段
db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">ename</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #在匹配到的文档中只显示ename字段


db<span class="token punctuation">.</span>stus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;冉海锋&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>stus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;冉海锋&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
db<span class="token punctuation">.</span>stus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-删除文档" tabindex="-1"><a class="header-anchor" href="#_6-删除文档" aria-hidden="true">#</a> 6.删除文档</h2><ul><li>db.collection.remove（）</li></ul><blockquote><ul><li>可以根据条件来删除文档，传递条件的方式和find（）一样</li><li>能删除符合条件的所有文档，默认删除多个</li><li>如果第二个参数传递一个true，则只会删除一个</li><li>如果只传递一个{ }作为参数，则会删除集合中的所有文档</li></ul></blockquote><ul><li>db.collection.deleteOne（）</li><li>db.collection.deleteMany（）</li><li>db.collection.drop（）</li></ul><blockquote><p>删除集合（如果最后一个集合没了，数据库也没了。。)</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code># <span class="token number">1.</span> db<span class="token punctuation">.</span>collectionName<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
# <span class="token function">remove默认会删除所有匹配的文档。相当于deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
# <span class="token function">remove可以加第二个参数，表示只删除匹配到的第一个文档。此时相当于deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

# <span class="token number">2.</span> db<span class="token punctuation">.</span>collectionName<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

# <span class="token number">3.</span> db<span class="token punctuation">.</span>collectionName<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

# <span class="token number">4.</span> 删除所有数据：db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">--</span>性格较差，内部是在一条一条的删除文档。
# 可直接通过db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>删除整个集合来提高效率。

# <span class="token number">5.</span>删除集合
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

# <span class="token number">6.</span>删除数据库
db<span class="token punctuation">.</span><span class="token function">dropDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

# <span class="token number">7.</span>注意：删除某一个文档的属性，应该用update。   remove以及<span class="token keyword">delete</span>系列删除的是整个文档

# <span class="token number">8.</span>当删除的条件为内嵌的属性时：
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;hobby.movies&quot;</span><span class="token operator">:</span><span class="token string">&#39;movie3&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>一般数据库中的数据都不会删除，所以删除的方法很少调用，一般会在数据中添加一个字段，来表示数据是否被删除</p></blockquote><h2 id="_7-修改文档" tabindex="-1"><a class="header-anchor" href="#_7-修改文档" aria-hidden="true">#</a> 7.修改文档</h2><ul><li>db.collection.update(查询条件，新对象) <ul><li>update（）默认情况下会使用新对象来替换旧对象</li><li>update（）默认只会修改一个对象</li></ul></li></ul><p>如果需要修改指定的属性，而不是替换，需要使用 “修改操作符” 来完成修改</p><ul><li>$set：可以用来修改文档中的指定属性</li><li>$unset：可以用来删除文档的指定属性</li></ul><p>db.collection.updateMany()：同时修改多个符合条件的文档</p><p>db.collection.updateOne()：修改一个符合条件的文档</p><p>db.collection.replaceOne()：替换一个符合条件的文档</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code># <span class="token number">1.</span><span class="token function">替换整个文档</span><span class="token punctuation">(</span>只修改查找到的第一个<span class="token punctuation">)</span>
db<span class="token punctuation">.</span>collectionName<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>condiction<span class="token punctuation">,</span>newDocument<span class="token punctuation">)</span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&#39;222&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

# <span class="token number">2.</span>修改对应的属性，需要用到修改操作符，比如$set<span class="token punctuation">,</span>$unset<span class="token punctuation">,</span>$push<span class="token punctuation">,</span>$addToSet
<span class="token comment">/*修改一个文档*/</span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;小A&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span>

<span class="token comment">/*修改多个文档*/</span>
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">multi</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token comment">/*update中加multi:true可以修改多个文档*/</span>
  <span class="token punctuation">)</span>


db<span class="token punctuation">.</span>collectionName<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
	# 查询条件
	<span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">222</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
		#修改对应的属性
		<span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span> 
			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;kang2&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">21</span>
		<span class="token punctuation">}</span>
		#删除对应的属性
		<span class="token literal-property property">$unset</span><span class="token operator">:</span><span class="token punctuation">{</span>
			<span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token number">1</span> <span class="token comment">//这里的1可以随便改为其他的值，无影响</span>
		<span class="token punctuation">}</span>
		
	<span class="token punctuation">}</span>
<span class="token punctuation">)</span>

# <span class="token number">3.</span><span class="token function">update默认与updateOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>等效，即对于匹配到的文档只更改其中的第一个
# <span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span>可以用来更改匹配到的所有文档
db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>
	<span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span>
			<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span>
			<span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token number">222</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">)</span>


# <span class="token number">4.</span>向数组中添加数据
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$push</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;hobby.movies&quot;</span><span class="token operator">:</span><span class="token string">&#39;movie4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

# 如果数据已经存在，则不会添加
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$addToSet</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;hobby.movies&quot;</span><span class="token operator">:</span><span class="token string">&#39;movie4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>


# <span class="token number">5.</span>自增自减操作符$inc
<span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">}</span> #让num自增<span class="token number">100</span>
<span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">}</span> #让num自减<span class="token number">100</span>
db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">sal</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">sal</span><span class="token operator">:</span><span class="token number">400</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> #给工资低于<span class="token number">1000</span>的员工增加<span class="token number">400</span>的工资
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-文档之间的关系" tabindex="-1"><a class="header-anchor" href="#_8-文档之间的关系" aria-hidden="true">#</a> 8.文档之间的关系</h2><p><strong>一对一</strong></p><p>在MongoDB中，可以通过内嵌文档的形式来体现出一对一的关系</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.WifeAndHusband.insert<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        wife:<span class="token string">&quot;黄蓉&quot;</span>,
        husband:<span class="token punctuation">{</span>
            name:<span class="token string">&quot;郭靖&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>,
    
    <span class="token punctuation">{</span>
        wife:<span class="token string">&quot;潘金莲&quot;</span>,
        husband:<span class="token punctuation">{</span>
            name:<span class="token string">&quot;武大郎&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>一对多</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>#用户与订单：
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
<span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;5f87b1deda684b252c2fc7a5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;liu2&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>orders<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
<span class="token punctuation">{</span><span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">user_id</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span><span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;banana2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">user_id</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span><span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">user_id</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

查询liu1的所有订单：
<span class="token literal-property property">首先获取liu1的id</span><span class="token operator">:</span> 
<span class="token keyword">let</span> user_id<span class="token operator">=</span>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_id<span class="token punctuation">;</span>
根据id从订单集合中查询对应的订单： db<span class="token punctuation">.</span>orders<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">user_id</span><span class="token operator">:</span>user_id<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>多对多</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>#老师与学生
db<span class="token punctuation">.</span>teachers<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu1&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu2&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
    	<span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">102</span><span class="token punctuation">,</span>
    	<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;liu3&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;xiao&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">tech_ids</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">1001</span><span class="token punctuation">,</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;xiao2&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">tech_ids</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-命令汇总" tabindex="-1"><a class="header-anchor" href="#_9-命令汇总" aria-hidden="true">#</a> 9.命令汇总</h2><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh47aylkj30l809fq7j.jpg"><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh4evq2bj30l30cqte3.jpg"><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh4lw10ij30ox0b6q8y.jpg"><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh4s2h3qj30t10b747b.jpg"><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh4xmjrwj30sy0dmjzz.jpg"><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh52qhtaj30id0eb79o.jpg">`,82);function y(h,f){const a=i("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("https://github.com/Vacricticy/mongodb_practice"),p(a)])]),n("p",null,[n("a",d,[s("MongoDB超详细保姆级入门教程！_你的笑只是保护色的博客-CSDN博客"),p(a)])]),k,m,v,n("p",null,[s("下载地址："),n("a",b,[s("https://www.mongodb.com/try/download/community"),p(a)])]),g])}const q=t(l,[["render",y],["__file","01.html.vue"]]);export{q as default};
