import{ab as p,G as o,H as c,E as n,S as s,N as t,ac as e,W as i}from"./framework-09305b5d.js";const l={},u=e(`<h1 id="_04-【electron的一些主进程api】" tabindex="-1"><a class="header-anchor" href="#_04-【electron的一些主进程api】" aria-hidden="true">#</a> 04 【electron的一些主进程Api】</h1><h2 id="_1-app" tabindex="-1"><a class="header-anchor" href="#_1-app" aria-hidden="true">#</a> 1.App</h2><h3 id="_1-1-事件" tabindex="-1"><a class="header-anchor" href="#_1-1-事件" aria-hidden="true">#</a> 1.1 事件</h3><h4 id="_1-1-1-before-quit" tabindex="-1"><a class="header-anchor" href="#_1-1-1-before-quit" aria-hidden="true">#</a> 1.1.1 before-quit</h4><blockquote><p>在应用程序开始关闭窗口之前触发。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;before-quit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;App is quiting&#39;</span><span class="token punctuation">)</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-2-browser-window-blur" tabindex="-1"><a class="header-anchor" href="#_1-1-2-browser-window-blur" aria-hidden="true">#</a> 1.1.2 browser-window-blur</h4><blockquote><p>在 browserWindow 失去焦点时发出</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;browser-window-blur&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;App unfocused&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-3-browser-window-focus" tabindex="-1"><a class="header-anchor" href="#_1-1-3-browser-window-focus" aria-hidden="true">#</a> 1.1.3 browser-window-focus</h4><blockquote><p>在 browserWindow 获得焦点时发出</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;browser-window-focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;App focused&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-方法" tabindex="-1"><a class="header-anchor" href="#_1-2-方法" aria-hidden="true">#</a> 1.2 方法</h3><h4 id="_1-2-1-app-quit" tabindex="-1"><a class="header-anchor" href="#_1-2-1-app-quit" aria-hidden="true">#</a> 1.2.1 app.quit()</h4><p>尝试关闭所有窗口 将首先发出 <code>before-quit</code> 事件。 如果所有窗口都已成功关闭, 则将发出 <code>will-quit</code> 事件, 并且默认情况下应用程序将终止。</p><p>此方法会确保执行所有<code>beforeunload</code> 和 <code>unload</code>事件处理程序。 可以在退出窗口之前的<code>beforeunload</code>事件处理程序中返回<code>false</code>取消退出。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;browser-window-blur&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;browser-window-blur&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>quit<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-app-getpath-name" tabindex="-1"><a class="header-anchor" href="#_1-2-2-app-getpath-name" aria-hidden="true">#</a> 1.2.2 app.getPath(name)</h4><ul><li><code>name</code> string - 您可以通过名称请求以下路径： <ul><li><code>home</code> 用户的 home 文件夹（主目录）</li><li><code>appData</code> 每个用户的应用程序数据目录，默认情况下指向： <ul><li><code>%APPDATA%</code> Windows 中</li><li><code>$XDG_CONFIG_HOME</code> or <code>~/.config</code> Linux 中</li><li><code>~/Library/Application Support</code> macOS 中</li></ul></li><li><code>userData</code> 储存你应用程序配置文件的文件夹，默认是 <code>appData</code> 文件夹附加应用的名称 按照习惯用户存储的数据文件应该写在此目录，同时不建议在这写大文件，因为某些环境会备份此目录到云端存储。</li><li><code>sessionData</code> 此目录存储由 <code>Session</code> 生成的数据，例如 localStorage，cookies，磁盘缓存，下载的字典，网络 状态，开发者工具文件等。 默认为 <code>userData</code> 目录。 Chromium 可能在此处写入非常大的磁盘缓存，因此，如果您的应用不依赖于浏览器存储（如 localStorage 或 cookie）来保存用户数据，建议将此目录设置为其他位置，以避免污染 <code>userData</code> 目录。</li><li><code>temp</code> 临时文件夹</li><li><code>exe</code>当前的可执行文件</li><li><code>module</code> The <code>libchromiumcontent</code> 库</li><li><code>desktop</code> 当前用户的桌面文件夹</li><li><code>documents</code> 用户文档目录的路径</li><li><code>downloads</code> 用户下载目录的路径</li><li><code>music</code> 用户音乐目录的路径</li><li><code>pictures</code> 用户图片目录的路径</li><li><code>videos</code> 用户视频目录的路径</li><li><code>recent</code> 用户最近文件的目录 (仅限 Windows)。</li><li><code>logs</code>应用程序的日志文件夹</li><li><code>crashDumps</code> 崩溃转储文件存储的目录。</li></ul></li></ul><p>返回 <code>string</code> - 与 <code>name</code> 关联的目录或文件的路径。 失败会抛出一个<code>Error</code>。</p><p>如果 <code>app.getPath(&#39;logs&#39;)</code> 被调用前没有先调用 <code>app.setAppLogsPath()</code> ，将创建一个相当于调用 <code>app.setAppLogsPath()</code> 却没有 <code>path</code> 参数的默认日志目录。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token string">&#39;desktop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token string">&#39;music&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token string">&#39;temp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token string">&#39;userData&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/7b5a8b4982dfa260063bd717be6662c776b995cb.png" alt="image-20230112141852989" tabindex="0" loading="lazy"><figcaption>image-20230112141852989</figcaption></figure><h2 id="_2-browserwindow" tabindex="-1"><a class="header-anchor" href="#_2-browserwindow" aria-hidden="true">#</a> 2.BrowserWindow</h2><blockquote><p>electron.BrowserWindow: 创建和控制浏览器窗口</p></blockquote><h3 id="_2-1-实例方法" tabindex="-1"><a class="header-anchor" href="#_2-1-实例方法" aria-hidden="true">#</a> 2.1 实例方法</h3><p><code>win.loadURL(url[, options])</code></p>`,27),r=n("p",null,[n("code",null,"url"),s(" string")],-1),d=n("p",null,[n("code",null,"options"),s(" Object (可选)")],-1),k=n("code",null,"httpReferrer",-1),v={href:"https://www.electronjs.org/zh/docs/latest/api/structures/referrer",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,[n("code",null,"userAgent"),s(" string (可选) - 发起请求的 userAgent.")],-1),g=n("li",null,[n("code",null,"extraHeaders"),s(' string (可选) - 用 "\\n" 分割的额外标题')],-1),b=n("code",null,"postData",-1),h={href:"https://www.electronjs.org/zh/docs/latest/api/structures/upload-raw-data",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.electronjs.org/zh/docs/latest/api/structures/upload-file",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("code",null,"baseURLForDataURL"),s(" string (可选) - 要由数据URL加载的文件基本URL(末尾带有路径分隔符)。 仅当指定的"),n("code",null,"url"),s("是数据url并且需要加载其他文件时，才需要此选项。")],-1),_=n("code",null,"Promise<void>",-1),y={href:"https://www.electronjs.org/zh/docs/latest/api/web-contents#event-did-finish-load",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"did-finish-load",-1),x={href:"https://www.electronjs.org/zh/docs/latest/api/web-contents#event-did-fail-load",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"did-fail-load",-1),q=e("<p><code>win.loadFile(filePath[, options])</code></p><ul><li><code>filePath</code> string</li><li><code>options</code> Object (可选) <ul><li><code>query</code> Record&lt;string, string&gt; (可选) - 传递给 <code>url.format()</code>.</li><li><code>search</code> string (可选) - 传递给 <code>url.format()</code>.</li><li><code>hash</code> string (可选) - 传递给 <code>url.format()</code>.</li></ul></li></ul>",2),B=n("code",null,"Promise<void>",-1),S={href:"https://www.electronjs.org/zh/docs/latest/api/web-contents#event-did-finish-load",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"did-finish-load",-1),A={href:"https://www.electronjs.org/zh/docs/latest/api/web-contents#event-did-fail-load",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"did-fail-load",-1),D=e(`<p>与 <code>webContents.loadFile</code>相同， <code>filePath</code> 应该是一个与你的应用程序的根路径相关的HTML文件路径。 有关更多信息，请参阅<code>webContents</code> 文档。</p><p><code>loadURL</code> 和 <code> loadFile</code> 互斥</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.baidu.com&#39;</span><span class="token punctuation">)</span>

mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-优雅的显示窗口" tabindex="-1"><a class="header-anchor" href="#_2-2-优雅的显示窗口" aria-hidden="true">#</a> 2.2 优雅的显示窗口</h3><ul><li><p>使用ready-to-show事件</p><ul><li><p>在加载页面时，渲染进程第一次完成绘制时，如果窗口还没有被显示，渲染进程会发出 <code>ready-to-show</code> 事件 。 在此事件后显示窗口将没有视觉闪烁。</p></li><li><p>请注意，使用此事件意味着渲染器会被认为是&quot;可见的&quot;并绘制，即使 <code>show</code> 是false。 如果您使用 <code>paintWhenInitiallyHidden: false</code>，此事件将永远不会被触发。</p></li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
mainWindow<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;ready-to-show&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个事件通常在 <code>did-finish-load</code> 事件之后发出，但是页面有许多远程资源时，它可能会在 <code>did-finish-load</code>之前发出事件。</p><p>请注意，使用此事件意味着渲染器会被认为是&quot;可见的&quot;并绘制，即使 <code>show</code> 是false。 如果您使用 <code>paintWhenInitiallyHidden: false</code>，此事件将永远不会被触发。</p><ul><li>设置 backgroundColor <ul><li>对于一个复杂的应用，<code>ready-to-show</code> 可能发出的太晚，会让应用感觉缓慢。 在这种情况下，建议立刻显示窗口，并使用接近应用程序背景的 <code>backgroundColor</code></li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;#2e2c29&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意，即使对于使用 <code>ready-to-show</code> 事件的应用，仍建议 设置 <code>backgroundColor</code>，以使应用感觉更接近原生。</p><p>一些包括 <code>backgroundColor</code> 的有效值的例子：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
win<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;hsl(230, 100%, 50%)&#39;</span><span class="token punctuation">)</span>
win<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;rgb(255, 145, 145)&#39;</span><span class="token punctuation">)</span>
win<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;#ff00a3&#39;</span><span class="token punctuation">)</span>
win<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;blueviolet&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),P={href:"https://www.electronjs.org/zh/docs/latest/api/browser-window#winsetbackgroundcolorbackgroundcolor",target:"_blank",rel:"noopener noreferrer"},O=e(`<h3 id="_2-3-父子窗口" tabindex="-1"><a class="header-anchor" href="#_2-3-父子窗口" aria-hidden="true">#</a> 2.3 父子窗口</h3><ul><li>窗口定义</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>secondaryWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

secondaryWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span>

secondaryWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>窗口关系</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>secondaryWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">parent</span><span class="token operator">:</span> mainWindon<span class="token punctuation">,</span> <span class="token comment">// 定义父窗口</span>
  <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 锁定在主窗口</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>子窗口显示和隐藏</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>secondaryWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  secondaryWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    secondaryWindow<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-无边框窗口" tabindex="-1"><a class="header-anchor" href="#_2-4-无边框窗口" aria-hidden="true">#</a> 2.4 无边框窗口</h3><blockquote><p>Frameless Window</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让页面可拖拽</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span>drag<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>no-drag 修复下面控件的bug</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> no-drag<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>窗口标题栏样式</p><ul><li><code>titleBarStyle</code> string (可选)<code> macOS</code> \\ <code>Windows</code>- 窗口标题栏样式。 默认值为default。可能的值有 <ul><li><code>default</code> - 分别返回 macOS 或者 Windows 的标准标题栏</li><li><code>hidden</code> - 在一个隐藏的标题栏和一个全尺寸大小的内容窗口中取得结果。 在 macOS 内, 窗口将一直拥有位于左上的标准窗口控制器 (“traffic lights”)。 在 Windows上，当与 <code>titleBarOverlay: true</code> 合并时，它将激活窗口控件叠加(详情请参阅 <code>titleBarOverlay</code>)，否则将不会显示窗口控件。</li><li><code>hiddenInset</code> <em>macOS</em> - 仅 macOS，隐藏标题栏，使用窗口边缘稍微小的红绿灯按钮替代。</li><li><code>customButtonsOnHover</code> <em>macOS</em> - 仅 macOS，隐藏的标题栏的全尺寸的内容窗口， 红绿灯按钮在鼠标悬停在窗口左上方时显示。 <strong>注意:</strong> 此选项目前是实验性的。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">titleBarStyle</span><span class="token operator">:</span> <span class="token string">&#39;hidden&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-属性与方法" tabindex="-1"><a class="header-anchor" href="#_2-5-属性与方法" aria-hidden="true">#</a> 2.5 属性与方法</h3><h4 id="_2-5-1-minwidth-maxwidth-minheight-maxheight" tabindex="-1"><a class="header-anchor" href="#_2-5-1-minwidth-maxwidth-minheight-maxheight" aria-hidden="true">#</a> 2.5.1 minWidth<code>/</code>maxWidth<code>/</code>minHeight<code>/</code>maxHeight</h4><ul><li><code>minWidth</code> Integer(可选) - 窗口的最小宽度。 默认值为 <code>0</code>.</li><li><code>minHeight</code> Integer(可选) - 窗口的最小高度。 默认值为 <code>0</code>.</li><li><code>maxWidth </code>Integer(可选)-窗口的最大宽度。 默认值不限</li><li><code>maxHeight </code>Integer (可选) - 窗口的最大高度。 默认值不限</li></ul><p>当使用 <code>minWidth</code>/<code>maxWidth</code>/<code>minHeight</code>/<code>maxHeight</code> 设置最小或最大窗口大小时, 它只限制用户。 它不会阻止您将不符合大小限制的值传递给 <code>setBounds</code>/<code>setSize</code> 或 <code>BrowserWindow</code> 的构造函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token number">300</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),H={href:"https://electronjs.org/docs/api/browser-window#new-browserwindowoptions",target:"_blank",rel:"noopener noreferrer"},z=e(`<h4 id="_2-5-2-窗口焦点事件" tabindex="-1"><a class="header-anchor" href="#_2-5-2-窗口焦点事件" aria-hidden="true">#</a> 2.5.2 窗口焦点事件</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>secWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mainWindow focused&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

secWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;secWindow focused&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;browser-window-focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;App focused&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-3-静态方法" tabindex="-1"><a class="header-anchor" href="#_2-5-3-静态方法" aria-hidden="true">#</a> 2.5.3 静态方法</h4><ul><li>getAllWindows() <ul><li>返回 <code>BrowserWindow[]</code> - 所有打开的窗口的数组</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> allWindows <span class="token operator">=</span> BrowserWindow<span class="token punctuation">.</span><span class="token function">getAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>allWindows<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),L={href:"https://electronjs.org/docs/api/browser-window#%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},R=e(`<h4 id="_2-5-4-实例方法" tabindex="-1"><a class="header-anchor" href="#_2-5-4-实例方法" aria-hidden="true">#</a> 2.5.4 实例方法</h4><ul><li>maximize() <ul><li>最大化窗口。 如果窗口尚未显示，该方法也会将其显示 (但不会聚焦)。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>secWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">maximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),T={href:"https://electronjs.org/docs/api/browser-window#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},I=e(`<h3 id="_2-6-state" tabindex="-1"><a class="header-anchor" href="#_2-6-state" aria-hidden="true">#</a> 2.6 state</h3><blockquote><p>electron-win-state 保存窗口的状态 <code>npm install electron-win-state</code></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> windowStateKeeper <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron-window-state&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> win<span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 加载前一状态并回退到默认值</span>
  <span class="token keyword">let</span> mainWindowState <span class="token operator">=</span> <span class="token function">windowStateKeeper</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">defaultWidth</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">defaultHeight</span><span class="token operator">:</span> <span class="token number">800</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 使用状态信息创建窗口</span>
  win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string-property property">&#39;x&#39;</span><span class="token operator">:</span> mainWindowState<span class="token punctuation">.</span>x<span class="token punctuation">,</span>
    <span class="token string-property property">&#39;y&#39;</span><span class="token operator">:</span> mainWindowState<span class="token punctuation">.</span>y<span class="token punctuation">,</span>
    <span class="token string-property property">&#39;width&#39;</span><span class="token operator">:</span> mainWindowState<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
    <span class="token string-property property">&#39;height&#39;</span><span class="token operator">:</span> mainWindowState<span class="token punctuation">.</span>height
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 让我们在窗口上注册侦听器，以便更新状态</span>
  <span class="token comment">// 自动（关闭窗口时将删除侦听器）</span>
  <span class="token comment">// 并恢复最大化或全屏状态</span>
  mainWindowState<span class="token punctuation">.</span><span class="token function">manage</span><span class="token punctuation">(</span>win<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>配置项必须写一样的，否则不生效。</strong></p></blockquote><p>请不要在创建<code>BrowserWindow</code>实例时将<code>useContentSize</code>设置为<code>true</code>，因为它会更改窗口大小的计算方式。</p><h3 id="_2-7-webcontents" tabindex="-1"><a class="header-anchor" href="#_2-7-webcontents" aria-hidden="true">#</a> 2.7 webContents</h3><blockquote><p>webContents 是 EventEmitter 的实例， 负责渲染和控制网页, 是 BrowserWindow 对象的一个属性。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> contents <span class="token operator">=</span> win<span class="token punctuation">.</span>webContents
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-7-1-方法-getallwebcontents" tabindex="-1"><a class="header-anchor" href="#_2-7-1-方法-getallwebcontents" aria-hidden="true">#</a> 2.7.1 方法 getAllWebContents(）*</h4><ul><li>返回 <code>WebContents[]</code> - 所有 <code>WebContents</code> 实例的数组。 包含所有Windows，webviews，opened devtools 和 devtools 扩展背景页的 web 内容</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>app<span class="token punctuation">,</span> BrowserWindow<span class="token punctuation">,</span> webContents<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>webContents<span class="token punctuation">.</span><span class="token function">getAllWebContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-7-2-实例事件" tabindex="-1"><a class="header-anchor" href="#_2-7-2-实例事件" aria-hidden="true">#</a> 2.7.2 实例事件</h4><ul><li><p>did-finish-load</p><ul><li>导航完成时触发，即选项卡的旋转器将停止旋转，并指派<code>onload</code>事件后。</li></ul></li><li><p>dom-ready</p><ul><li>当顶级 frame 的 document 被加载完时触发。</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/500/500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">let</span> wc <span class="token operator">=</span> mainWindow<span class="token punctuation">.</span>webContents
wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;did-finish-load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Conent fully loaded&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;dom-ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;DOM Ready&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>new-window</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/500/500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Kitten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;new-window&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;DOM Ready&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),U={href:"https://www.electronjs.org/zh/docs/latest/api/web-contents#event-context-menu",target:"_blank",rel:"noopener noreferrer"},F=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;context-menu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Context menu opened on: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>mediaType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> at x:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;context-menu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">User seleted text: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>selectionText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Selection can be copied: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>editFlags<span class="token punctuation">.</span>canCopy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-7-3-实例方法" tabindex="-1"><a class="header-anchor" href="#_2-7-3-实例方法" aria-hidden="true">#</a> 2.7.3 实例方法</h4><ul><li>executeJavaScript()</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>wc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;context-menu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  wc<span class="token punctuation">.</span><span class="token function">executeJavaScript</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">alert(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>selectionText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-快捷键-系统快捷键" tabindex="-1"><a class="header-anchor" href="#_3-快捷键-系统快捷键" aria-hidden="true">#</a> 3.快捷键+系统快捷键</h2><blockquote><p><strong>快捷键</strong>：定义键盘快捷键。 <strong>系统快捷键</strong>：在应用程序没有键盘焦点时，监听键盘事件。</p></blockquote><p>快捷键可以包含多个功能键和一个键码的字符串，由符号+结合，用来定义你应用中的键盘快捷键</p><p>示例：</p><ul><li>ctrl+A</li><li>ctrl+Shift+Z</li></ul><p>快捷方式使用 register 方法在 globalShortcut 模块中注册。</p><p>globalShortcut 模块可以在操作系统中注册/注销全局快捷键, 以便可以为操作定制各种快捷键。</p><p>注意: 快捷方式是全局的; 即使应用程序没有键盘焦点, 它也仍然在持续监听键盘事件。 在应用程序模块发出 ready 事件之前, 不应使用此模块。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>app<span class="token punctuation">,</span> BrowserWindow<span class="token punctuation">,</span> globalShortcut<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>

globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User pressed G&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;ctrl+y&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User pressed G with a combination key&#39;</span><span class="token punctuation">)</span>
  globalShortcut<span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span><span class="token string">&#39;ctrl+y&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-menu" tabindex="-1"><a class="header-anchor" href="#_4-menu" aria-hidden="true">#</a> 4.Menu</h2><p><code>详情见 07 【electron菜单】</code></p><h2 id="_5-tray-托盘" tabindex="-1"><a class="header-anchor" href="#_5-tray-托盘" aria-hidden="true">#</a> 5.Tray (托盘)</h2><p><code>详情见 08 【electron系统托盘 】</code></p>`,18);function $(G,N){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[r,d,n("ul",null,[n("li",null,[k,s(" (string | "),n("a",v,[s("Referrer"),t(a)]),s(") (可选) - HTTP 引用 url。")]),m,g,n("li",null,[b,s(" ("),n("a",h,[s("UploadRawData"),t(a)]),s(" | "),n("a",w,[s("UploadFile"),t(a)]),s(")[] (可选)")]),f])])]),n("p",null,[s("返回 "),_,s(" - 当页面完成加载后 promise 将会resolve (见 "),n("a",y,[j,t(a)]),s(")，如果页面加载失败，则 reject (见 "),n("a",x,[W,t(a)]),s(")。")]),q,n("p",null,[s("返回 "),B,s(" - 当页面完成加载后 promise 将会resolve (见 "),n("a",S,[C,t(a)]),s(")，如果页面加载失败，则 reject (见 "),n("a",A,[E,t(a)]),s(")。")]),D,n("p",null,[s("有关这些颜色类型的有效选项，请参阅 "),n("a",P,[s("win.setBackgroundColor"),t(a)]),s("。")]),O,n("p",null,[s("更多详见："),n("a",H,[s("https://electronjs.org/docs/api/browser-window#new-browserwindowoptions"),t(a)])]),z,n("p",null,[s("更多详见: "),n("a",L,[s("https://electronjs.org/docs/api/browser-window#静态方法"),t(a)])]),R,n("p",null,[s("更多详见："),n("a",T,[s("https://electronjs.org/docs/api/browser-window#实例方法"),t(a)])]),I,n("ul",null,[n("li",null,[s("context-menu : 右键上下文信息 "),n("ul",null,[n("li",null,[n("a",U,[s("https://www.electronjs.org/zh/docs/latest/api/web-contents#event-context-menu"),t(a)])])])])]),F])}const V=p(l,[["render",$],["__file","04.html.vue"]]);export{V as default};
