const e=JSON.parse('{"key":"v-8f5a8800","path":"/professional_knowledge/software_engineer/01.html","title":"01 【软件工程学概述】","lang":"zh-CN","frontmatter":{"description":"01 【软件工程学概述】 迄今为止，计算机系统已经经历了4个不同的发展阶段，但是，人们仍然没有彻底摆脱“软件危机”的困扰，软件已经成为限制计算机系统发展的瓶颈。 为了更有效地开发与维护软件，软件工作者在20世纪60年代后期开始认真研究消除软件危机的途径，从而逐渐形成了一门新兴的工程学科——计算机软件工程学。 1.软件危机 1.1 软件危机的介绍 在计算机软件的开发和维护过程中所遇到的一系列严重问题。 软件危机的典型表现 对软件开发成本和进度的估算很不准确 难以准确获取用户需求，用户不满意 质量很不可靠，没有适当的文档 缺乏方法指导和工具支持，大型软件系统经常失败 供不应求：软件开发生产率跟不上计算机应用的迅速发展 做好软件定义时期的工作，是降低软件成本提高软件质量的关键。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/professional_knowledge/software_engineer/01.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"01 【软件工程学概述】"}],["meta",{"property":"og:description","content":"01 【软件工程学概述】 迄今为止，计算机系统已经经历了4个不同的发展阶段，但是，人们仍然没有彻底摆脱“软件危机”的困扰，软件已经成为限制计算机系统发展的瓶颈。 为了更有效地开发与维护软件，软件工作者在20世纪60年代后期开始认真研究消除软件危机的途径，从而逐渐形成了一门新兴的工程学科——计算机软件工程学。 1.软件危机 1.1 软件危机的介绍 在计算机软件的开发和维护过程中所遇到的一系列严重问题。 软件危机的典型表现 对软件开发成本和进度的估算很不准确 难以准确获取用户需求，用户不满意 质量很不可靠，没有适当的文档 缺乏方法指导和工具支持，大型软件系统经常失败 供不应求：软件开发生产率跟不上计算机应用的迅速发展 做好软件定义时期的工作，是降低软件成本提高软件质量的关键。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T02:59:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-23T02:59:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01 【软件工程学概述】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T02:59:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.软件危机","slug":"_1-软件危机","link":"#_1-软件危机","children":[{"level":3,"title":"1.1 软件危机的介绍","slug":"_1-1-软件危机的介绍","link":"#_1-1-软件危机的介绍","children":[]},{"level":3,"title":"1.2 产生软件危机的原因","slug":"_1-2-产生软件危机的原因","link":"#_1-2-产生软件危机的原因","children":[]},{"level":3,"title":"1.3 消除软件危机的途径","slug":"_1-3-消除软件危机的途径","link":"#_1-3-消除软件危机的途径","children":[]}]},{"level":2,"title":"2.软件工程","slug":"_2-软件工程","link":"#_2-软件工程","children":[{"level":3,"title":"2.1 软件工程的介绍","slug":"_2-1-软件工程的介绍","link":"#_2-1-软件工程的介绍","children":[]},{"level":3,"title":"2.2 软件工程的基本原理","slug":"_2-2-软件工程的基本原理","link":"#_2-2-软件工程的基本原理","children":[]},{"level":3,"title":"2.3 软件工程的原则","slug":"_2-3-软件工程的原则","link":"#_2-3-软件工程的原则","children":[]},{"level":3,"title":"2.4 软件工程的本质特征","slug":"_2-4-软件工程的本质特征","link":"#_2-4-软件工程的本质特征","children":[]},{"level":3,"title":"2.6 软件工程的基本原理","slug":"_2-6-软件工程的基本原理","link":"#_2-6-软件工程的基本原理","children":[]},{"level":3,"title":"2.7 软件工程方法学","slug":"_2-7-软件工程方法学","link":"#_2-7-软件工程方法学","children":[]}]},{"level":2,"title":"3.软件生命周期","slug":"_3-软件生命周期","link":"#_3-软件生命周期","children":[]},{"level":2,"title":"4.软件过程","slug":"_4-软件过程","link":"#_4-软件过程","children":[{"level":3,"title":"4.1 瀑布模型","slug":"_4-1-瀑布模型","link":"#_4-1-瀑布模型","children":[]},{"level":3,"title":"4.2 快速原型模型","slug":"_4-2-快速原型模型","link":"#_4-2-快速原型模型","children":[]},{"level":3,"title":"4.3 增量模型","slug":"_4-3-增量模型","link":"#_4-3-增量模型","children":[]},{"level":3,"title":"4.4 螺旋模型","slug":"_4-4-螺旋模型","link":"#_4-4-螺旋模型","children":[]},{"level":3,"title":"4.5 喷泉模型","slug":"_4-5-喷泉模型","link":"#_4-5-喷泉模型","children":[]}]},{"level":2,"title":"5.本章小结","slug":"_5-本章小结","link":"#_5-本章小结","children":[]}],"git":{"createdTime":1677121190000,"updatedTime":1677121190000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":19.61,"words":5884},"filePathRelative":"professional_knowledge/software_engineer/01.md","localizedDate":"2023年2月23日","excerpt":"<h1> 01 【软件工程学概述】</h1>\\n<p>迄今为止，计算机系统已经经历了4个不同的发展阶段，但是，人们仍然没有彻底摆脱“软件危机”的困扰，软件已经成为限制计算机系统发展的瓶颈。</p>\\n<p>为了更有效地开发与维护软件，软件工作者在20世纪60年代后期开始认真研究消除软件危机的途径，从而逐渐形成了一门新兴的工程学科——计算机软件工程学。</p>\\n<h2> 1.软件危机</h2>\\n<h3> 1.1 软件危机的介绍</h3>\\n<p>在计算机软件的开发和维护过程中所遇到的一系列严重问题。</p>\\n<p><strong>软件危机的典型表现</strong></p>\\n<ul>\\n<li>对软件开发成本和进度的估算很不准确</li>\\n<li>难以准确获取用户需求，用户不满意</li>\\n<li>质量很不可靠，没有适当的文档</li>\\n<li>缺乏方法指导和工具支持，大型软件系统经常失败</li>\\n<li>供不应求：软件开发生产率跟不上计算机应用的迅速发展</li>\\n<li>做好软件定义时期的工作，是降低软件成本提高软件质量的关键。</li>\\n</ul>","autoDesc":true}');export{e as data};
