const e=JSON.parse('{"key":"v-3413834f","path":"/front_end/js_advanced/es6/09.html","title":"09【Set 和 Map 数据结构】","lang":"zh-CN","frontmatter":{"description":"09【Set 和 Map 数据结构】 1.什么是 Set？ Set 是一系列无序、没有重复值的数据集合。 数组是一系列有序（下标索引）的数据集合。 const s = new Set(); s.add(1); s.add(2); // Set 中不能有重复的成员 s.add(1); console.log(s);\\t\\t// Set(2) { 1, 2 } // Set 没有下标去标识每一个值，所以 Set 是无序的，也不能像数组那样通过下标去访问 Set 的成员。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/front_end/js_advanced/es6/09.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"09【Set 和 Map 数据结构】"}],["meta",{"property":"og:description","content":"09【Set 和 Map 数据结构】 1.什么是 Set？ Set 是一系列无序、没有重复值的数据集合。 数组是一系列有序（下标索引）的数据集合。 const s = new Set(); s.add(1); s.add(2); // Set 中不能有重复的成员 s.add(1); console.log(s);\\t\\t// Set(2) { 1, 2 } // Set 没有下标去标识每一个值，所以 Set 是无序的，也不能像数组那样通过下标去访问 Set 的成员。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"09【Set 和 Map 数据结构】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.什么是 Set？","slug":"_1-什么是-set","link":"#_1-什么是-set","children":[]},{"level":2,"title":"2.Set 实例的方法和属性","slug":"_2-set-实例的方法和属性","link":"#_2-set-实例的方法和属性","children":[{"level":3,"title":"2.1 add 方法","slug":"_2-1-add-方法","link":"#_2-1-add-方法","children":[]},{"level":3,"title":"2.2 has 方法","slug":"_2-2-has-方法","link":"#_2-2-has-方法","children":[]},{"level":3,"title":"2.3 delete 方法","slug":"_2-3-delete-方法","link":"#_2-3-delete-方法","children":[]},{"level":3,"title":"2.4 clear 方法","slug":"_2-4-clear-方法","link":"#_2-4-clear-方法","children":[]},{"level":3,"title":"2.5 forEach 方法","slug":"_2-5-foreach-方法","link":"#_2-5-foreach-方法","children":[]},{"level":3,"title":"2.6 size 属性","slug":"_2-6-size-属性","link":"#_2-6-size-属性","children":[]}]},{"level":2,"title":"3.Set 构造函数的参数","slug":"_3-set-构造函数的参数","link":"#_3-set-构造函数的参数","children":[]},{"level":2,"title":"4. Set 注意事项","slug":"_4-set-注意事项","link":"#_4-set-注意事项","children":[]},{"level":2,"title":"5.Set 的应用","slug":"_5-set-的应用","link":"#_5-set-的应用","children":[]},{"level":2,"title":"6.什么是 Map？","slug":"_6-什么是-map","link":"#_6-什么是-map","children":[]},{"level":2,"title":"7.Map 实例的方法和属性","slug":"_7-map-实例的方法和属性","link":"#_7-map-实例的方法和属性","children":[{"level":3,"title":"7.1 set 方法","slug":"_7-1-set-方法","link":"#_7-1-set-方法","children":[]},{"level":3,"title":"7.2 get 方法","slug":"_7-2-get-方法","link":"#_7-2-get-方法","children":[]},{"level":3,"title":"7.3 has 方法","slug":"_7-3-has-方法","link":"#_7-3-has-方法","children":[]},{"level":3,"title":"7.4 delete 方法","slug":"_7-4-delete-方法","link":"#_7-4-delete-方法","children":[]},{"level":3,"title":"7.5 clear 方法","slug":"_7-5-clear-方法","link":"#_7-5-clear-方法","children":[]},{"level":3,"title":"7.6 forEach 方法","slug":"_7-6-foreach-方法","link":"#_7-6-foreach-方法","children":[]},{"level":3,"title":"7.7 size 属性","slug":"_7-7-size-属性","link":"#_7-7-size-属性","children":[]}]},{"level":2,"title":"8.Map 构造函数的参数","slug":"_8-map-构造函数的参数","link":"#_8-map-构造函数的参数","children":[]},{"level":2,"title":"9.Map 注意事项","slug":"_9-map-注意事项","link":"#_9-map-注意事项","children":[]},{"level":2,"title":"10.Map 的应用","slug":"_10-map-的应用","link":"#_10-map-的应用","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":6.25,"words":1875},"filePathRelative":"front_end/js_advanced/es6/09.md","localizedDate":"2023年1月30日","excerpt":"<h1> 09【Set 和 Map 数据结构】</h1>\\n<h2> 1.什么是 Set？</h2>\\n<p>Set 是一系列无序、没有重复值的数据集合。</p>\\n<blockquote>\\n<p>数组是一系列有序（下标索引）的数据集合。</p>\\n</blockquote>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> s <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// Set 中不能有重复的成员</span>\\ns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\t\\t<span class=\\"token comment\\">// Set(2) { 1, 2 }</span>\\n\\n<span class=\\"token comment\\">// Set 没有下标去标识每一个值，所以 Set 是无序的，也不能像数组那样通过下标去访问 Set 的成员。</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
