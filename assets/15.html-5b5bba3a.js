const e=JSON.parse('{"key":"v-1e488fb4","path":"/front_end/front_end_base/javascript/15.html","title":"15 【严格模式】","lang":"zh-CN","frontmatter":{"description":"15 【严格模式】 除了正常的运行模式，JavaScript 还有第二种运行模式：严格模式（strict mode）。顾名思义，这种模式采用更加严格的 JavaScript 语法。 同样的代码，在正常模式和严格模式中，可能会有不一样的运行结果。一些在正常模式下可以运行的语句，在严格模式下将不能运行。 1.设计目的 早期的 JavaScript 语言有很多设计不合理的地方，但是为了兼容以前的代码，又不能改变老的语法，只能不断添加新的语法，引导程序员使用新语法。 严格模式是从 ES5 进入标准的，主要目的有以下几个。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/front_end/front_end_base/javascript/15.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"15 【严格模式】"}],["meta",{"property":"og:description","content":"15 【严格模式】 除了正常的运行模式，JavaScript 还有第二种运行模式：严格模式（strict mode）。顾名思义，这种模式采用更加严格的 JavaScript 语法。 同样的代码，在正常模式和严格模式中，可能会有不一样的运行结果。一些在正常模式下可以运行的语句，在严格模式下将不能运行。 1.设计目的 早期的 JavaScript 语言有很多设计不合理的地方，但是为了兼容以前的代码，又不能改变老的语法，只能不断添加新的语法，引导程序员使用新语法。 严格模式是从 ES5 进入标准的，主要目的有以下几个。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"15 【严格模式】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.设计目的","slug":"_1-设计目的","link":"#_1-设计目的","children":[]},{"level":2,"title":"2.启用方法","slug":"_2-启用方法","link":"#_2-启用方法","children":[]},{"level":2,"title":"3.显式报错","slug":"_3-显式报错","link":"#_3-显式报错","children":[{"level":3,"title":"3.1 只读属性不可写","slug":"_3-1-只读属性不可写","link":"#_3-1-只读属性不可写","children":[]},{"level":3,"title":"3.2 函数不能有重名的参数","slug":"_3-2-函数不能有重名的参数","link":"#_3-2-函数不能有重名的参数","children":[]}]},{"level":2,"title":"4.增强的安全措施","slug":"_4-增强的安全措施","link":"#_4-增强的安全措施","children":[{"level":3,"title":"4.1 全局变量显式声明","slug":"_4-1-全局变量显式声明","link":"#_4-1-全局变量显式声明","children":[]},{"level":3,"title":"4.2 禁止 this 关键字指向全局对象","slug":"_4-2-禁止-this-关键字指向全局对象","link":"#_4-2-禁止-this-关键字指向全局对象","children":[]},{"level":3,"title":"4.3 禁止删除变量","slug":"_4-3-禁止删除变量","link":"#_4-3-禁止删除变量","children":[]}]},{"level":2,"title":"5.向下一个版本的 JavaScript 过渡","slug":"_5-向下一个版本的-javascript-过渡","link":"#_5-向下一个版本的-javascript-过渡","children":[{"level":3,"title":"5.1 非函数代码块不得声明函数","slug":"_5-1-非函数代码块不得声明函数","link":"#_5-1-非函数代码块不得声明函数","children":[]},{"level":3,"title":"5.2保留字","slug":"_5-2保留字","link":"#_5-2保留字","children":[]}]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":6.45,"words":1934},"filePathRelative":"front_end/front_end_base/javascript/15.md","localizedDate":"2023年1月30日","excerpt":"<h1> 15 【严格模式】</h1>\\n<p>除了正常的运行模式，JavaScript 还有第二种运行模式：严格模式（strict mode）。顾名思义，这种模式采用更加严格的 JavaScript 语法。</p>\\n<p>同样的代码，在正常模式和严格模式中，可能会有不一样的运行结果。一些在正常模式下可以运行的语句，在严格模式下将不能运行。</p>\\n<h2> 1.设计目的</h2>\\n<p>早期的 JavaScript 语言有很多设计不合理的地方，但是为了兼容以前的代码，又不能改变老的语法，只能不断添加新的语法，引导程序员使用新语法。</p>\\n<p>严格模式是从 ES5 进入标准的，主要目的有以下几个。</p>","autoDesc":true}');export{e as data};
