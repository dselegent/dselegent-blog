import{ab as n,G as s,H as a,ac as t}from"./framework-844b12a4.js";const p={},e=t(`<h1 id="_07-【单行函数】" tabindex="-1"><a class="header-anchor" href="#_07-【单行函数】" aria-hidden="true">#</a> 07 【单行函数】</h1><h2 id="_1-函数的理解" tabindex="-1"><a class="header-anchor" href="#_1-函数的理解" aria-hidden="true">#</a> 1. 函数的理解</h2><h3 id="_1-1-什么是函数" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是函数" aria-hidden="true">#</a> 1.1 什么是函数</h3><p>函数在计算机语言的使用中贯穿始终，函数的作用是什么呢？它可以把我们经常使用的代码封装起来，需要的时候直接调用即可。这样既<code>提高了代码效率</code>，又<code>提高了可维护性</code>。在 SQL 中我们也可以使用函数对检索出来的数据进行函数操作。使用这些函数，可以极大地<code>提高用户对数据库的管理效率</code>。</p><figure><img src="https://i0.hdslb.com/bfs/album/460077e65245adcb0a1a7441d28b59a6be497978.png" alt="image-20221017184722798" tabindex="0" loading="lazy"><figcaption>image-20221017184722798</figcaption></figure><p>从函数定义的角度出发，我们可以将函数分成<code>内置函数</code>和<code>自定义函数</code>。在 SQL 语言中，同样也包括了内置函数和自定义函数。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写的，本章及下一章讲解的是 SQL 的内置函数。</p><h3 id="_1-2-不同dbms函数的差异" tabindex="-1"><a class="header-anchor" href="#_1-2-不同dbms函数的差异" aria-hidden="true">#</a> 1.2 不同DBMS函数的差异</h3><p>我们在使用 SQL 语言的时候，不是直接和这门语言打交道，而是通过它使用不同的数据库软件，即 DBMS。<strong>DBMS 之间的差异性很大，远大于同一个语言不同版本之间的差异。<strong>实际上，只有很少的函数是被 DBMS 同时支持的。比如，大多数 DBMS 使用（||）或者（+）来做拼接符，而在 MySQL 中的字符串拼接函数为concat()。大部分 DBMS 会有自己特定的函数，这就意味着</strong>采用 SQL 函数的代码可移植性是很差的</strong>，因此在使用函数的时候需要特别注意。</p><h3 id="_1-3-mysql的内置函数及分类" tabindex="-1"><a class="header-anchor" href="#_1-3-mysql的内置函数及分类" aria-hidden="true">#</a> 1.3 MySQL的内置函数及分类</h3><p>MySQL提供了丰富的内置函数，这些函数使得数据的维护与管理更加方便，能够更好地提供数据的分析与统计功能，在一定程度上提高了开发人员进行数据分析与统计的效率。</p><p>MySQL提供的内置函数从<code>实现的功能角度</code>可以分为数值函数、字符串函数、日期和时间函数、流程控制函数、加密与解密函数、获取MySQL信息函数、聚合函数等。这里，我将这些丰富的内置函数再分为两类：<code>单行函数</code>、<code>聚合函数（或分组函数）</code>。</p><p><strong>两种SQL函数</strong></p><figure><img src="https://i0.hdslb.com/bfs/album/b6afce5dae8f5cdd0952d926527d9fe489a0ff28.png" alt="image-20221017184846946" tabindex="0" loading="lazy"><figcaption>image-20221017184846946</figcaption></figure><p><strong>单行函数</strong></p><ul><li>操作数据对象</li><li>接受参数返回一个结果</li><li><strong>只对一行进行变换</strong></li><li><strong>每行返回一个结果</strong></li><li>可以嵌套</li><li>参数可以是一列或一个值</li></ul><h2 id="_2-数值函数" tabindex="-1"><a class="header-anchor" href="#_2-数值函数" aria-hidden="true">#</a> 2. 数值函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回x的绝对值</td></tr><tr><td>SIGN(X)</td><td>返回X的符号。正数返回1，负数返回-1，0返回0</td></tr><tr><td>PI()</td><td>返回圆周率的值</td></tr><tr><td>CEIL(x)，CEILING(x)</td><td>返回大于或等于某个值的最小整数</td></tr><tr><td>FLOOR(x)</td><td>返回小于或等于某个值的最大整数</td></tr><tr><td>LEAST(e1,e2,e3…)</td><td>返回列表中的最小值</td></tr><tr><td>GREATEST(e1,e2,e3…)</td><td>返回列表中的最大值</td></tr><tr><td>MOD(x,y)</td><td>返回X除以Y后的余数</td></tr><tr><td>RAND()</td><td>返回0~1的随机值</td></tr><tr><td>RAND(x)</td><td>返回0~1的随机值，其中x的值用作种子值，相同的X值会产生相同的随机数</td></tr><tr><td>ROUND(x)</td><td>返回一个对x的值进行四舍五入后，最接近于X的整数</td></tr><tr><td>ROUND(x,y)</td><td>返回一个对x的值进行四舍五入后最接近X的值，并保留到小数点后面Y位</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数字x截断为y位小数的结果</td></tr><tr><td>SQRT(x)</td><td>返回x的平方根。当X的值为负数时，返回NULL</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ABS<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SIGN<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SIGN<span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span>PI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>CEIL<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>CEILING<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span><span class="token punctuation">,</span>FLOOR<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MOD</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/913d5aa8e47793234e68e4461a3705557f335f37.png" alt="image-20221017185639162" tabindex="0" loading="lazy"><figcaption>image-20221017185639162</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>RAND<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>RAND<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>RAND<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>RAND<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/a4b859c2c65611772de8dcfcd3018f28e7610bb0.png" alt="image-20221017185654391" tabindex="0" loading="lazy"><figcaption>image-20221017185654391</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.33</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.343</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.324</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/31b3b33aaf760eded4ee197782c1e0640064a110.png" alt="image-20221017185723692" tabindex="0" loading="lazy"><figcaption>image-20221017185723692</figcaption></figure><h2 id="_3-字符串函数" tabindex="-1"><a class="header-anchor" href="#_3-字符串函数" aria-hidden="true">#</a> 3. 字符串函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ASCII(S)</td><td>返回字符串S中的第一个字符的ASCII码值</td></tr><tr><td>CHAR_LENGTH(s)</td><td>返回字符串s的字符数。作用与CHARACTER_LENGTH(s)相同</td></tr><tr><td>LENGTH(s)</td><td>返回字符串s的字节数，和字符集有关</td></tr><tr><td>CONCAT(s1,s2,......,sn)</td><td>连接s1,s2,......,sn为一个字符串</td></tr><tr><td>CONCAT_WS(x, s1,s2,......,sn)</td><td>同CONCAT(s1,s2,...)函数，但是每个字符串之间要加上x</td></tr><tr><td>INSERT(str, idx, len, replacestr)</td><td>将字符串str从第idx位置开始，len个字符长的子串替换为字符串replacestr</td></tr><tr><td>REPLACE(str, a, b)</td><td>用字符串b替换字符串str中所有出现的字符串a</td></tr><tr><td>UPPER(s) 或 UCASE(s)</td><td>将字符串s的所有字母转成大写字母</td></tr><tr><td>LOWER(s) 或LCASE(s)</td><td>将字符串s的所有字母转成小写字母</td></tr><tr><td>LEFT(str,n)</td><td>返回字符串str最左边的n个字符</td></tr><tr><td>RIGHT(str,n)</td><td>返回字符串str最右边的n个字符</td></tr><tr><td>LPAD(str, len, pad)</td><td>用字符串pad对str最左边进行填充，直到str的长度为len个字符</td></tr><tr><td>RPAD(str ,len, pad)</td><td>用字符串pad对str最右边进行填充，直到str的长度为len个字符</td></tr><tr><td>LTRIM(s)</td><td>去掉字符串s左侧的空格</td></tr><tr><td>RTRIM(s)</td><td>去掉字符串s右侧的空格</td></tr><tr><td>TRIM(s)</td><td>去掉字符串s开始与结尾的空格</td></tr><tr><td>TRIM(s1 FROM s)</td><td>去掉字符串s开始与结尾的s1</td></tr><tr><td>TRIM(LEADING s1 FROM s)</td><td>去掉字符串s开始处的s1</td></tr><tr><td>TRIM(TRAILING s1 FROM s)</td><td>去掉字符串s结尾处的s1</td></tr><tr><td>REPEAT(str, n)</td><td>返回str重复n次的结果</td></tr><tr><td>SPACE(n)</td><td>返回n个空格</td></tr><tr><td>STRCMP(s1,s2)</td><td>比较字符串s1,s2的ASCII码值的大小</td></tr><tr><td>SUBSTR(s,index,len)</td><td>返回从字符串s的index位置其len个字符，作用与SUBSTRING(s,n,len)、MID(s,n,len)相同</td></tr><tr><td>LOCATE(substr,str)</td><td>返回字符串substr在字符串str中首次出现的位置，作用于POSITION(substr IN str)、INSTR(str,substr)相同。未找到，返回0</td></tr><tr><td>ELT(m,s1,s2,…,sn)</td><td>返回指定位置的字符串，如果m=1，则返回s1，如果m=2，则返回s2，如果m=n，则返回sn</td></tr><tr><td>FIELD(s,s1,s2,…,sn)</td><td>返回字符串s在字符串列表中第一次出现的位置</td></tr><tr><td>FIND_IN_SET(s1,s2)</td><td>返回字符串s1在字符串s2中出现的位置。其中，字符串s2是一个以逗号分隔的字符串</td></tr><tr><td>REVERSE(s)</td><td>返回s反转后的字符串</td></tr><tr><td>NULLIF(value1,value2)</td><td>比较两个字符串，如果value1与value2相等，则返回NULL，否则返回value1</td></tr></tbody></table><blockquote><p>注意：MySQL中，字符串的位置是从1开始的。</p></blockquote><p>常用函数：</p><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;">CONCAT(s1, s2, …, sn)</td><td style="text-align:left;">字符串拼接，将s1, s2, …, sn拼接成一个字符串</td></tr><tr><td style="text-align:left;">LOWER(str)</td><td style="text-align:left;">将字符串全部转为小写</td></tr><tr><td style="text-align:left;">UPPER(str)</td><td style="text-align:left;">将字符串全部转为大写</td></tr><tr><td style="text-align:left;">LPAD(str, n, pad)</td><td style="text-align:left;">左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td style="text-align:left;">RPAD(str, n, pad)</td><td style="text-align:left;">右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td style="text-align:left;">TRIM(str)</td><td style="text-align:left;">去掉字符串头部和尾部的空格</td></tr><tr><td style="text-align:left;">SUBSTRING(str, start, len)</td><td style="text-align:left;">返回从字符串str从start位置起的len个长度的字符串</td></tr><tr><td style="text-align:left;">REPLACE(column, source, replace)</td><td style="text-align:left;">替换字符串</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> FIELD<span class="token punctuation">(</span><span class="token string">&#39;mm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;msm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;amma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;mm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hello,mm,amma&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------------------------+-----------------------------------+</span>
<span class="token operator">|</span> FIELD<span class="token punctuation">(</span><span class="token string">&#39;mm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;msm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;amma&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;mm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hello,mm,amma&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------------------+-----------------------------------+</span>
<span class="token operator">|</span>                                <span class="token number">0</span> <span class="token operator">|</span>                                 <span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------------------+-----------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">NULLIF</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">NULLIF</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------+---------------------+</span>
<span class="token operator">|</span> <span class="token keyword">NULLIF</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">NULLIF</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+---------------------+</span>
<span class="token operator">|</span> <span class="token boolean">NULL</span>                    <span class="token operator">|</span> mysql               <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+---------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其它:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 拼接</span>
<span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 小写</span>
<span class="token keyword">SELECT</span> LOWER<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 大写</span>
<span class="token keyword">SELECT</span> UPPER<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 左填充</span>
<span class="token keyword">SELECT</span> LPAD<span class="token punctuation">(</span><span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 右填充</span>
<span class="token keyword">SELECT</span> RPAD<span class="token punctuation">(</span><span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 去除空格</span>
<span class="token keyword">SELECT</span> TRIM<span class="token punctuation">(</span><span class="token string">&#39; Hello World &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 切片（起始索引为1）</span>
<span class="token keyword">SELECT</span> SUBSTRING<span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-日期和时间函数" tabindex="-1"><a class="header-anchor" href="#_4-日期和时间函数" aria-hidden="true">#</a> 4.日期和时间函数</h2><p>常用函数：</p><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;">CURDATE()</td><td style="text-align:left;">返回当前日期</td></tr><tr><td style="text-align:left;">CURTIME()</td><td style="text-align:left;">返回当前时间</td></tr><tr><td style="text-align:left;">NOW()</td><td style="text-align:left;">返回当前日期和时间</td></tr><tr><td style="text-align:left;">YEAR(date)</td><td style="text-align:left;">获取指定date的年份</td></tr><tr><td style="text-align:left;">MONTH(date)</td><td style="text-align:left;">获取指定date的月份</td></tr><tr><td style="text-align:left;">DAY(date)</td><td style="text-align:left;">获取指定date的日期</td></tr><tr><td style="text-align:left;">DATE_ADD(date, INTERVAL expr type)</td><td style="text-align:left;">返回一个日期/时间值加上一个时间间隔expr后的时间值</td></tr><tr><td style="text-align:left;">DATEDIFF(date1, date2)</td><td style="text-align:left;">返回起始时间date1和结束时间date2之间的天数</td></tr></tbody></table><h3 id="_4-1-获取日期、时间" tabindex="-1"><a class="header-anchor" href="#_4-1-获取日期、时间" aria-hidden="true">#</a> 4.1 获取日期、时间</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><strong>CURDATE()</strong> ，CURRENT_DATE()</td><td>返回当前日期，只包含年、月、日</td></tr><tr><td><strong>CURTIME()</strong> ， CURRENT_TIME()</td><td>返回当前时间，只包含时、分、秒</td></tr><tr><td><strong>NOW()</strong> / SYSDATE() / CURRENT_TIMESTAMP() / LOCALTIME() / LOCALTIMESTAMP()</td><td>返回当前系统日期和时间</td></tr><tr><td>UTC_DATE()</td><td>返回UTC（世界标准时间）日期</td></tr><tr><td>UTC_TIME()</td><td>返回UTC（世界标准时间）时间</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SYSDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span>UTC_DATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>UTC_DATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span>UTC_TIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>UTC_TIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/36115b0698b2c23ef8506d264fa316a8413f3dba.png" alt="image-20221017185927399" tabindex="0" loading="lazy"><figcaption>image-20221017185927399</figcaption></figure><h3 id="_4-2-日期与时间戳的转换" tabindex="-1"><a class="header-anchor" href="#_4-2-日期与时间戳的转换" aria-hidden="true">#</a> 4.2 日期与时间戳的转换</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>UNIX_TIMESTAMP()</td><td>以UNIX时间戳的形式返回当前时间。SELECT UNIX_TIMESTAMP() -&gt;1634348884</td></tr><tr><td>UNIX_TIMESTAMP(date)</td><td>将时间date以UNIX时间戳的形式返回。</td></tr><tr><td>FROM_UNIXTIME(timestamp)</td><td>将UNIX时间戳的时间转换为普通格式的时间</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span>            <span class="token number">1576380910</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span>                <span class="token number">1576339200</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span>                <span class="token number">1576380969</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token string">&#39;2011-11-11 11:11:11&#39;</span><span class="token punctuation">)</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token string">&#39;2011-11-11 11:11:11&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token operator">|</span>                            <span class="token number">1320981071</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> FROM_UNIXTIME<span class="token punctuation">(</span><span class="token number">1576380910</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> FROM_UNIXTIME<span class="token punctuation">(</span><span class="token number">1576380910</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> <span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">11</span>:<span class="token number">35</span>:<span class="token number">10</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-获取月份、星期、星期数、天数等函数" tabindex="-1"><a class="header-anchor" href="#_4-3-获取月份、星期、星期数、天数等函数" aria-hidden="true">#</a> 4.3 获取月份、星期、星期数、天数等函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>YEAR(date) / MONTH(date) / DAY(date)</td><td>返回具体的日期值</td></tr><tr><td>HOUR(time) / MINUTE(time) / SECOND(time)</td><td>返回具体的时间值</td></tr><tr><td>MONTHNAME(date)</td><td>返回月份：January，...</td></tr><tr><td>DAYNAME(date)</td><td>返回星期几：MONDAY，TUESDAY.....SUNDAY</td></tr><tr><td>WEEKDAY(date)</td><td>返回周几，注意，周1是0，周2是1，。。。周日是6</td></tr><tr><td>QUARTER(date)</td><td>返回日期对应的季度，范围为1～4</td></tr><tr><td>WEEK(date) ， WEEKOFYEAR(date)</td><td>返回一年中的第几周</td></tr><tr><td>DAYOFYEAR(date)</td><td>返回日期是一年中的第几天</td></tr><tr><td>DAYOFMONTH(date)</td><td>返回日期位于所在月份的第几天</td></tr><tr><td>DAYOFWEEK(date)</td><td>返回周几，注意：周日是1，周一是2，。。。周六是7</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">MONTH</span><span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">DAY</span><span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">HOUR</span><span class="token punctuation">(</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">MINUTE</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">SECOND</span><span class="token punctuation">(</span>SYSDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/9ff4aeeaba2cac2c634b2fb30be13ce367215375.png" alt="image-20221019220147317" tabindex="0" loading="lazy"><figcaption>image-20221019220147317</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> MONTHNAME<span class="token punctuation">(</span><span class="token string">&#39;2021-10-26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DAYNAME<span class="token punctuation">(</span><span class="token string">&#39;2021-10-26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>WEEKDAY<span class="token punctuation">(</span><span class="token string">&#39;2021-10-26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
QUARTER<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>WEEK<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DAYOFYEAR<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
DAYOFMONTH<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DAYOFWEEK<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/d098422d3d7138127d83474ef4e62f2eece71a25.png" alt="image-20221019220202556" tabindex="0" loading="lazy"><figcaption>image-20221019220202556</figcaption></figure><h3 id="_4-4-日期的操作函数" tabindex="-1"><a class="header-anchor" href="#_4-4-日期的操作函数" aria-hidden="true">#</a> 4.4 日期的操作函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>EXTRACT(type FROM date)</td><td>返回指定日期中特定的部分，type指定返回的值</td></tr></tbody></table><p>EXTRACT(type FROM date)函数中type的取值与含义：</p><figure><img src="https://i0.hdslb.com/bfs/album/17c2325d4632779a6869f73ea1f077ce3f24688a.png" alt="image-20221019220222362" tabindex="0" loading="lazy"><figcaption>image-20221019220222362</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/c7d9e6362d7558acded25f49e280639bfb6bdb83.png" alt="image-20221019220232218" tabindex="0" loading="lazy"><figcaption>image-20221019220232218</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> EXTRACT<span class="token punctuation">(</span><span class="token keyword">MINUTE</span> <span class="token keyword">FROM</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>EXTRACT<span class="token punctuation">(</span> WEEK <span class="token keyword">FROM</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
EXTRACT<span class="token punctuation">(</span> QUARTER <span class="token keyword">FROM</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>EXTRACT<span class="token punctuation">(</span> MINUTE_SECOND <span class="token keyword">FROM</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-时间和秒钟转换的函数" tabindex="-1"><a class="header-anchor" href="#_4-5-时间和秒钟转换的函数" aria-hidden="true">#</a> 4.5 时间和秒钟转换的函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>TIME_TO_SEC(time)</td><td>将 time 转化为秒并返回结果值。转化的公式为：<code>小时*3600+分钟*60+秒</code></td></tr><tr><td>SEC_TO_TIME(seconds)</td><td>将 seconds 描述转化为包含小时、分钟和秒的时间</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> TIME_TO_SEC<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> TIME_TO_SEC<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span>               <span class="token number">78774</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> SEC_TO_TIME<span class="token punctuation">(</span><span class="token number">78774</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> SEC_TO_TIME<span class="token punctuation">(</span><span class="token number">78774</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> <span class="token number">21</span>:<span class="token number">52</span>:<span class="token number">54</span>            <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.12</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-计算日期和时间的函数" tabindex="-1"><a class="header-anchor" href="#_4-6-计算日期和时间的函数" aria-hidden="true">#</a> 4.6 计算日期和时间的函数</h3><p><strong>第1组：</strong></p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>DATE_ADD(datetime, INTERVAL expr type)，ADDDATE(date,INTERVAL expr type)</td><td>返回与给定日期时间相差INTERVAL时间段的日期时间</td></tr><tr><td>DATE_SUB(date,INTERVAL expr type)，SUBDATE(date,INTERVAL expr type)</td><td>返回与date相差INTERVAL时间间隔的日期</td></tr></tbody></table><p>上述函数中type的取值：</p><figure><img src="https://i0.hdslb.com/bfs/album/1ebc8fa0e3eb1a2142732e6df2a70fe1131ecf5a.png" alt="image-20221019220327908" tabindex="0" loading="lazy"><figcaption>image-20221019220327908</figcaption></figure><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col1<span class="token punctuation">,</span>DATE_ADD<span class="token punctuation">(</span><span class="token string">&#39;2021-10-21 23:32:12&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">SECOND</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col2<span class="token punctuation">,</span>
ADDDATE<span class="token punctuation">(</span><span class="token string">&#39;2021-10-21 23:32:12&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">SECOND</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col3<span class="token punctuation">,</span>
DATE_ADD<span class="token punctuation">(</span><span class="token string">&#39;2021-10-21 23:32:12&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token string">&#39;1_1&#39;</span> MINUTE_SECOND<span class="token punctuation">)</span> <span class="token keyword">AS</span> col4<span class="token punctuation">,</span>
DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">YEAR</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col5<span class="token punctuation">,</span> <span class="token comment">#可以是负数</span>
DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token string">&#39;1_1&#39;</span> YEAR_MONTH<span class="token punctuation">)</span> <span class="token keyword">AS</span> col6 <span class="token comment">#需要单引号</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>


<span class="token keyword">SELECT</span> DATE_SUB<span class="token punctuation">(</span><span class="token string">&#39;2021-01-21&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">31</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col1<span class="token punctuation">,</span>
SUBDATE<span class="token punctuation">(</span><span class="token string">&#39;2021-01-21&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">31</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> col2<span class="token punctuation">,</span>
DATE_SUB<span class="token punctuation">(</span><span class="token string">&#39;2021-01-21 02:01:01&#39;</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token string">&#39;1 1&#39;</span> DAY_HOUR<span class="token punctuation">)</span> <span class="token keyword">AS</span> col3
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第2组：</strong></p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ADDTIME(time1,time2)</td><td>返回time1加上time2的时间。当time2为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td>SUBTIME(time1,time2)</td><td>返回time1减去time2后的时间。当time2为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td>DATEDIFF(date1,date2)</td><td>返回date1 - date2的日期间隔天数</td></tr><tr><td>TIMEDIFF(time1, time2)</td><td>返回time1 - time2的时间间隔</td></tr><tr><td>FROM_DAYS(N)</td><td>返回从0000年1月1日起，N天以后的日期</td></tr><tr><td>TO_DAYS(date)</td><td>返回日期date距离0000年1月1日的天数</td></tr><tr><td>LAST_DAY(date)</td><td>返回date所在月份的最后一天的日期</td></tr><tr><td>MAKEDATE(year,n)</td><td>针对给定年份与所在年份中的天数返回一个日期</td></tr><tr><td>MAKETIME(hour,minute,second)</td><td>将给定的小时、分钟和秒组合成时间并返回</td></tr><tr><td>PERIOD_ADD(time,n)</td><td>返回time加上n后的时间</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ADDTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;1:1:3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;2021-10-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
TIMEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;2021-10-25 22:10:10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>FROM_DAYS<span class="token punctuation">(</span><span class="token number">366</span><span class="token punctuation">)</span><span class="token punctuation">,</span>TO_DAYS<span class="token punctuation">(</span><span class="token string">&#39;0000-12-25&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
LAST_DAY<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>MAKEDATE<span class="token punctuation">(</span><span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>MAKETIME<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span>PERIOD_ADD<span class="token punctuation">(</span><span class="token number">20200101010101</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> ADDTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> ADDTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>  <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> <span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">22</span>:<span class="token number">17</span>:<span class="token number">47</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> ADDTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;1:1:1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> ADDTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;1:1:1&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> <span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">23</span>:<span class="token number">18</span>:<span class="token number">46</span>     <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;1:1:1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;1:1:1&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> <span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">21</span>:<span class="token number">23</span>:<span class="token number">50</span>     <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;-1:-1:-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token operator">+</span><span class="token comment">----------------------------+</span>
<span class="token operator">|</span> SUBTIME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;-1:-1:-1&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------------+</span>
<span class="token operator">|</span> <span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">22</span>:<span class="token number">25</span>:<span class="token number">11</span>        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> FROM_DAYS<span class="token punctuation">(</span><span class="token number">366</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span> FROM_DAYS<span class="token punctuation">(</span><span class="token number">366</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span> <span class="token number">0001</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>     <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> MAKEDATE<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span> MAKEDATE<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> MAKEDATE<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------+</span>
<span class="token operator">|</span> MAKEDATE<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------+</span>
<span class="token operator">|</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span>        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> MAKETIME<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token operator">|</span> MAKETIME<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token operator">|</span> <span class="token number">01</span>:<span class="token number">01</span>:<span class="token number">01</span>        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> PERIOD_ADD<span class="token punctuation">(</span><span class="token number">20200101010101</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------------------+</span>
<span class="token operator">|</span> PERIOD_ADD<span class="token punctuation">(</span><span class="token number">20200101010101</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------+</span>
<span class="token operator">|</span>               <span class="token number">20200101010102</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> TO_DAYS<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span> TO_DAYS<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span>          <span class="token number">737773</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：查询 7 天内的新增用户数有多少？</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> num <span class="token keyword">FROM</span> new_user <span class="token keyword">WHERE</span> TO_DAYS<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>TO_DAYS<span class="token punctuation">(</span>regist_time<span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-7-日期的格式化与解析" tabindex="-1"><a class="header-anchor" href="#_4-7-日期的格式化与解析" aria-hidden="true">#</a> 4.7 日期的格式化与解析</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>DATE_FORMAT(date,fmt)</td><td>按照字符串fmt格式化日期date值</td></tr><tr><td>TIME_FORMAT(time,fmt)</td><td>按照字符串fmt格式化时间time值</td></tr><tr><td>GET_FORMAT(date_type,format_type)</td><td>返回日期字符串的显示格式</td></tr><tr><td>STR_TO_DATE(str, fmt)</td><td>按照字符串fmt对str进行解析，解析为一个日期</td></tr></tbody></table><p>上述<code>非GET_FORMAT</code>函数中fmt参数常用的格式符：</p><table><thead><tr><th>格式符</th><th>说明</th><th>格式符</th><th>说明</th></tr></thead><tbody><tr><td>%Y</td><td>4位数字表示年份</td><td>%y</td><td>表示两位数字表示年份</td></tr><tr><td>%M</td><td>月名表示月份（January,....）</td><td>%m</td><td>两位数字表示月份（01,02,03。。。）</td></tr><tr><td>%b</td><td>缩写的月名（Jan.，Feb.，....）</td><td>%c</td><td>数字表示月份（1,2,3,...）</td></tr><tr><td>%D</td><td>英文后缀表示月中的天数（1st,2nd,3rd,...）</td><td>%d</td><td>两位数字表示月中的天数(01,02...)</td></tr><tr><td>%e</td><td>数字形式表示月中的天数（1,2,3,4,5.....）</td><td></td><td></td></tr><tr><td>%H</td><td>两位数字表示小数，24小时制（01,02..）</td><td>%h和%I</td><td>两位数字表示小时，12小时制（01,02..）</td></tr><tr><td>%k</td><td>数字形式的小时，24小时制(1,2,3)</td><td>%l</td><td>数字形式表示小时，12小时制（1,2,3,4....）</td></tr><tr><td>%i</td><td>两位数字表示分钟（00,01,02）</td><td>%S和%s</td><td>两位数字表示秒(00,01,02...)</td></tr><tr><td>%W</td><td>一周中的星期名称（Sunday...）</td><td>%a</td><td>一周中的星期缩写（Sun.，Mon.,Tues.，..）</td></tr><tr><td>%w</td><td>以数字表示周中的天数(0=Sunday,1=Monday....)</td><td></td><td></td></tr><tr><td>%j</td><td>以3位数字表示年中的天数(001,002...)</td><td>%U</td><td>以数字表示年中的第几周，（1,2,3。。）其中Sunday为周中第一天</td></tr><tr><td>%u</td><td>以数字表示年中的第几周，（1,2,3。。）其中Monday为周中第一天</td><td></td><td></td></tr><tr><td>%T</td><td>24小时制</td><td>%r</td><td>12小时制</td></tr><tr><td>%p</td><td>AM或PM</td><td>%%</td><td>表示%</td></tr></tbody></table><p>GET_FORMAT函数中date_type和format_type参数取值如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/98ec1e2db77b46e29821bc3b32376745ce820f87.png" alt="image-20221019220451182" tabindex="0" loading="lazy"><figcaption>image-20221019220451182</figcaption></figure><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%H:%i:%s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token operator">|</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%H:%i:%s&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token operator">|</span> <span class="token number">22</span>:<span class="token number">57</span>:<span class="token number">34</span>                        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SELECT</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;09/01/2009&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%m/%d/%Y&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
 
<span class="token keyword">SELECT</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;20140422154706&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%Y%m%d%H%i%s&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
 
<span class="token keyword">SELECT</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;2014-04-22 15:47:06&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%Y-%m-%d %H:%i:%s&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> GET_FORMAT<span class="token punctuation">(</span><span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> GET_FORMAT<span class="token punctuation">(</span><span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> <span class="token operator">%</span>m<span class="token punctuation">.</span><span class="token operator">%</span>d<span class="token punctuation">.</span><span class="token operator">%</span>Y                <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
<span class="token keyword">SELECT</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>GET_FORMAT<span class="token punctuation">(</span><span class="token keyword">DATE</span><span class="token punctuation">,</span><span class="token string">&#39;USA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;2020-01-01 00:00:00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token operator">+</span><span class="token comment">-----------------------------------------------+</span>
<span class="token operator">|</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;2020-01-01 00:00:00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------------------------------+</span>
<span class="token operator">|</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>                                    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-流程控制函数" tabindex="-1"><a class="header-anchor" href="#_5-流程控制函数" aria-hidden="true">#</a> 5.流程控制函数</h2><p>流程处理函数可以根据不同的条件，执行不同的处理流程，可以在SQL语句中实现不同的条件选择。MySQL中的流程处理函数主要包括IF()、IFNULL()和CASE()函数。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>IF(value,value1,value2)</td><td>如果value的值为TRUE，返回value1，否则返回value2</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果value1不为NULL，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN 条件1 THEN 结果1 WHEN 条件2 THEN 结果2 .... [ELSE resultn] END</td><td>相当于Java的if...else if...else...</td></tr><tr><td>CASE expr WHEN 常量值1 THEN 值1 WHEN 常量值1 THEN 值1 .... [ELSE 值n] END</td><td>相当于Java的switch...case...</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;正确&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;错误&#39;</span><span class="token punctuation">)</span>    
<span class="token operator">-</span><span class="token operator">&gt;</span>正确


<span class="token keyword">SELECT</span> IFNULL<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;Hello Word&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span>Hello Word


<span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> 
　　<span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
　　<span class="token keyword">THEN</span> <span class="token string">&#39;1 &gt; 0&#39;</span>
　　<span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
　　<span class="token keyword">THEN</span> <span class="token string">&#39;2 &gt; 0&#39;</span>
　　<span class="token keyword">ELSE</span> <span class="token string">&#39;3 &gt; 0&#39;</span>
　　<span class="token keyword">END</span>
<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span>


<span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> <span class="token number">1</span> 
　　<span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">&#39;我是1&#39;</span>
　　<span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">&#39;我是2&#39;</span>
<span class="token keyword">ELSE</span> <span class="token string">&#39;你是谁&#39;</span>


<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>salary<span class="token punctuation">,</span> 
				  <span class="token keyword">CASE</span> 
				  <span class="token keyword">WHEN</span> salary<span class="token operator">&gt;=</span><span class="token number">15000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;高薪&#39;</span> 
				  <span class="token keyword">WHEN</span> salary<span class="token operator">&gt;=</span><span class="token number">10000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;潜力股&#39;</span>  
				  <span class="token keyword">WHEN</span> salary<span class="token operator">&gt;=</span><span class="token number">8000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;屌丝&#39;</span> 
				  <span class="token keyword">ELSE</span> <span class="token string">&#39;草根&#39;</span> 
				  <span class="token keyword">END</span>  <span class="token string">&quot;描述&quot;</span>
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span> 


<span class="token keyword">SELECT</span> oid<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>status<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token keyword">CASE</span> <span class="token identifier"><span class="token punctuation">\`</span>status<span class="token punctuation">\`</span></span> 
						<span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">&#39;未付款&#39;</span> 
						<span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">&#39;已付款&#39;</span> 
						<span class="token keyword">WHEN</span> <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">&#39;已发货&#39;</span>  
						<span class="token keyword">WHEN</span> <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">&#39;确认收货&#39;</span>  
						<span class="token keyword">ELSE</span> <span class="token string">&#39;无效订单&#39;</span> 
						<span class="token keyword">END</span> 
<span class="token keyword">FROM</span> t_order<span class="token punctuation">;</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;yes&#39;</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;no&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;unknown&#39;</span> <span class="token keyword">END</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------------------------------------+</span>
<span class="token operator">|</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;yes&#39;</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;no&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;unknown&#39;</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------------------------------------+</span>
<span class="token operator">|</span> yes                                                                  <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;yes&#39;</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;no&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;unknown&#39;</span> <span class="token keyword">END</span><span class="token punctuation">;</span>  
<span class="token operator">+</span><span class="token comment">--------------------------------------------------------------------+</span>
<span class="token operator">|</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;yes&#39;</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;no&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;unknown&#39;</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------------------------------------------+</span>
<span class="token operator">|</span> unknown                                                             <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> <span class="token number">1</span> <span class="token keyword">WHEN</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token number">0</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">END</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token operator">|</span> <span class="token keyword">CASE</span> <span class="token number">1</span> <span class="token keyword">WHEN</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token number">0</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token operator">|</span>                                               <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">WHEN</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token number">0</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">END</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------------+</span>
<span class="token operator">|</span> <span class="token keyword">CASE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">WHEN</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token number">0</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------------+</span>
<span class="token operator">|</span>                                               <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span><span class="token number">12</span> <span class="token operator">*</span> salary <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>


<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> <span class="token keyword">CASE</span> job_id 
				   					<span class="token keyword">WHEN</span> <span class="token string">&#39;IT_PROG&#39;</span>  <span class="token keyword">THEN</span>  <span class="token number">1.10</span><span class="token operator">*</span>salary
                   					<span class="token keyword">WHEN</span> <span class="token string">&#39;ST_CLERK&#39;</span> <span class="token keyword">THEN</span>  <span class="token number">1.15</span><span class="token operator">*</span>salary
                   					<span class="token keyword">WHEN</span> <span class="token string">&#39;SA_REP&#39;</span>   <span class="token keyword">THEN</span>  <span class="token number">1.20</span><span class="token operator">*</span>salary
       			  					<span class="token keyword">ELSE</span>      salary 
       			  					<span class="token keyword">END</span>     <span class="token string">&quot;REVISED_SALARY&quot;</span>
<span class="token keyword">FROM</span>   employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://i0.hdslb.com/bfs/album/fe48aa096ee81db1677092def0f36cf1fe66e34a.png" alt="image-20221019225211935" style="zoom:150%;"><p><strong>练习：查询部门号为 10,20, 30 的员工信息, 若部门号为 10, 则打印其工资的 1.1 倍, 20 号部门, 则打印其工资的 1.2 倍, 30 号部门打印其工资的 1.3 倍数。</strong></p><h2 id="_6-加密与解密函数" tabindex="-1"><a class="header-anchor" href="#_6-加密与解密函数" aria-hidden="true">#</a> 6. 加密与解密函数</h2><p>加密与解密函数主要用于对数据库中的数据进行加密和解密处理，以防止数据被他人窃取。这些函数在保证数据库安全时非常有用。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>PASSWORD(str)</td><td>返回字符串str的加密版本，41位长的字符串。加密结果<code>不可逆</code>，常用于用户的密码加密</td></tr><tr><td>MD5(str)</td><td>返回字符串str的md5加密后的值，也是一种加密方式。若参数为NULL，则会返回NULL</td></tr><tr><td>SHA(str)</td><td>从原明文密码str计算并返回加密后的密码字符串，当参数为NULL时，返回NULL。<code>SHA加密算法比MD5更加安全</code>。</td></tr><tr><td>ENCODE(value,password_seed)</td><td>返回使用password_seed作为加密密码加密value</td></tr><tr><td>DECODE(value,password_seed)</td><td>返回使用password_seed作为加密密码解密value</td></tr></tbody></table><p>注：PASSWORD(str)、ENCODE(value,password_seed)、DECODE(value,password_seed)方法在MySql8.0以上的版本已经被弃用了</p><p>可以看到，ENCODE(value,password_seed)函数与DECODE(value,password_seed)函数互为反函数。</p><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> PASSWORD<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------+----------------+</span>
<span class="token operator">|</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span>                         <span class="token operator">|</span> PASSWORD<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------+----------------+</span>
<span class="token operator">|</span> <span class="token operator">*</span>E74858DB86EBA20BC33D0AECAE8A8108C56B17FA <span class="token operator">|</span>                <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------------------------+----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SELECT</span> md5<span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">202</span>cb962ac59075b964b07152d234b70

<span class="token keyword">SELECT</span> SHA<span class="token punctuation">(</span><span class="token string">&#39;Tom123&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span>c7c506980abc31cc390a2438c90861d0f1216d50


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> ENCODE<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> ENCODE<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> íg　¼　ìÉ                  <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> DECODE<span class="token punctuation">(</span>ENCODE<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------------------------------+</span>
<span class="token operator">|</span> DECODE<span class="token punctuation">(</span>ENCODE<span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------------------------+</span>
<span class="token operator">|</span> mysql                                   <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token keyword">warnings</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-mysql信息函数" tabindex="-1"><a class="header-anchor" href="#_7-mysql信息函数" aria-hidden="true">#</a> 7. MySQL信息函数</h2><p>MySQL中内置了一些可以查询MySQL信息的函数，这些函数主要用于帮助数据库开发或运维人员更好地对数据库进行维护工作。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>VERSION()</td><td>返回当前MySQL的版本号</td></tr><tr><td>CONNECTION_ID()</td><td>返回当前MySQL服务器的连接数</td></tr><tr><td>DATABASE()，SCHEMA()</td><td>返回MySQL命令行当前所在的数据库</td></tr><tr><td>USER()，CURRENT_USER()、SYSTEM_USER()，SESSION_USER()</td><td>返回当前连接MySQL的用户名，返回结果格式为“主机名@用户名”</td></tr><tr><td>CHARSET(value)</td><td>返回字符串value自变量的字符集</td></tr><tr><td>COLLATION(value)</td><td>返回字符串value的比较规则</td></tr></tbody></table><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------+</span>
<span class="token operator">|</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+</span>
<span class="token operator">|</span> test       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">CURRENT_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">SYSTEM_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">SESSION_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------+----------------+----------------+----------------+</span>
<span class="token operator">|</span> <span class="token keyword">USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token operator">|</span> <span class="token keyword">CURRENT_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">SYSTEM_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">|</span> <span class="token keyword">SESSION_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+----------------+----------------+----------------+</span>
<span class="token operator">|</span> root<span class="token variable">@localhost</span> <span class="token operator">|</span> root<span class="token variable">@localhost</span> <span class="token operator">|</span> root<span class="token variable">@localhost</span> <span class="token operator">|</span> root<span class="token variable">@localhost</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+----------------+----------------+----------------+</span>
 
 
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token keyword">CHARSET</span><span class="token punctuation">(</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span> <span class="token keyword">CHARSET</span><span class="token punctuation">(</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token operator">|</span> utf8mb4        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> COLLATION<span class="token punctuation">(</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> COLLATION<span class="token punctuation">(</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span>   <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> utf8mb4_general_ci <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-练习" tabindex="-1"><a class="header-anchor" href="#_8-练习" aria-hidden="true">#</a> 8.练习</h2><p>显示系统时间(注：日期+时间)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.查询员工号，姓名，工资，以及工资提高百分之20%后的结果（new salary）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> salary <span class="token operator">*</span> <span class="token number">1.2</span> <span class="token string">&quot;new salary&quot;</span> 
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3.将员工的姓名按首字母排序，并写出姓名的长度（length）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> last_name <span class="token keyword">DESC</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.查询员工id,last_name,salary，并作为一个列输出，别名为OUT_PUT</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>employee_id<span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span> <span class="token punctuation">,</span> last_name <span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> salary<span class="token punctuation">)</span> OUT_PUT 
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>5.查询公司各员工工作的年数、工作的天数，并按工作年数的降序排序。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> DATEDIFF<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hire_date<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span> worked_years<span class="token punctuation">,</span> DATEDIFF<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hire_date<span class="token punctuation">)</span> worked_days 
<span class="token keyword">FROM</span> employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> worked_years <span class="token keyword">DESC</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6.查询员工姓名，hire_date , department_id，满足以下条件：雇用时间在</p><p>1997年之后，department_id 为80或 90 或110, commission_pct不为空</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>hire_date<span class="token punctuation">,</span>department_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>
<span class="token comment">-- and hire_date &gt;= &#39;1997-01-01&#39;;  #存在着隐式转换</span>
<span class="token comment">-- and  date_format(hire_date,&#39;%Y-%m-%d&#39;) &gt;= &#39;1997-01-01&#39;;  # 显式转换操作，格式化：日期---&gt; 字符串</span>
<span class="token comment">-- and  date_format(hire_date,&#39;%Y&#39;) &gt;= &#39;1997&#39;;   # 显式转换操作，格式化</span>
<span class="token operator">AND</span> hire_date <span class="token operator">&gt;=</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;1997-01-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment"># 显式转换操作，解析：字符串 ----&gt; 日期</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.查询公司中入职超过10000天的员工姓名、入职时间</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>hire_date 
<span class="token keyword">FROM</span> employees 
<span class="token comment">-- WHERE TO_DAYS(NOW()) - to_days(hire_date) &gt; 10000; </span>
<span class="token keyword">WHERE</span> DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>hire_date<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8.做一个查询，产生下面的结果</p><figure><img src="https://i0.hdslb.com/bfs/album/848b4610708b9d014fd29400178c94888b713d1d.png" alt="image-20221019225522020" tabindex="0" loading="lazy"><figcaption>image-20221019225522020</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span> <span class="token string">&#39; earns &#39;</span><span class="token punctuation">,</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span>salary<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">&#39; monthly but wants &#39;</span><span class="token punctuation">,</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span>salary <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token string">&quot;Dream Salary&quot;</span> 
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>9.使用<strong>CASE-WHEN</strong>，按照下面的条件：</p><figure><img src="https://i0.hdslb.com/bfs/album/93fc8dfdca0603f3fb09f8e43eaa4405dd72d1c5.png" alt="image-20221019225539133" tabindex="0" loading="lazy"><figcaption>image-20221019225539133</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name Last_name<span class="token punctuation">,</span> job_id Job_id<span class="token punctuation">,</span> <span class="token keyword">CASE</span> job_id <span class="token keyword">WHEN</span> <span class="token string">&#39;AD_PRES&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;A&#39;</span> 
													   <span class="token keyword">WHEN</span> <span class="token string">&#39;ST_MAN&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;B&#39;</span> 
                                                       <span class="token keyword">WHEN</span> <span class="token string">&#39;IT_PROG&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;C&#39;</span> 
                                                       <span class="token keyword">WHEN</span> <span class="token string">&#39;SA_REP&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;D&#39;</span> 
                                                       <span class="token keyword">WHEN</span> <span class="token string">&#39;ST_CLERK&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;E&#39;</span> 
                                                       <span class="token keyword">ELSE</span> <span class="token string">&#39;F&#39;</span> 
                                                       <span class="token keyword">END</span> <span class="token string">&quot;grade&quot;</span> 
<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,125),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","07.html.vue"]]);export{u as default};
