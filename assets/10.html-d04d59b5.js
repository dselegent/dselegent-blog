import{ab as s,G as n,H as a,ac as e}from"./framework-844b12a4.js";const l={},p=e(`<h1 id="_10-【创建和管理表】" tabindex="-1"><a class="header-anchor" href="#_10-【创建和管理表】" aria-hidden="true">#</a> 10 【创建和管理表】</h1><h2 id="_1-基础知识" tabindex="-1"><a class="header-anchor" href="#_1-基础知识" aria-hidden="true">#</a> 1. 基础知识</h2><h3 id="_1-1-一条数据存储的过程" tabindex="-1"><a class="header-anchor" href="#_1-1-一条数据存储的过程" aria-hidden="true">#</a> 1.1 一条数据存储的过程</h3><p><code>存储数据是处理数据的第一步</code>。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手。</p><p>那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。</p><figure><img src="https://i0.hdslb.com/bfs/album/c96a21089d33165b5ab9876aa51f4d9c421afa4d.png" alt="image-20221021202501281" tabindex="0" loading="lazy"><figcaption>image-20221021202501281</figcaption></figure><p>我们要先创建一个数据库，而不是直接创建数据表呢？</p><p>因为从系统架构的层次上看，MySQL 数据库系统从大到小依次是<code>数据库服务器</code>、<code>数据库</code>、<code>数据表</code>、数据表的<code>行与列</code>。</p><p>MySQL 数据库服务器之前已经安装。所以，我们就从创建数据库开始。</p><h3 id="_1-2-标识符命名规则" tabindex="-1"><a class="header-anchor" href="#_1-2-标识符命名规则" aria-hidden="true">#</a> 1.2 标识符命名规则</h3><ul><li>数据库名、表名不得超过30个字符，变量名限制为29个</li><li>必须只能包含 A–Z, a–z, 0–9, _共63个字符</li><li>数据库名、表名、字段名等对象名中间不要包含空格</li><li>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</li><li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用\`（着重号）引起来</li><li>保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li></ul><h3 id="_1-3-mysql中的数据类型" tabindex="-1"><a class="header-anchor" href="#_1-3-mysql中的数据类型" aria-hidden="true">#</a> 1.3 MySQL中的数据类型</h3><table><thead><tr><th>类型</th><th>类型举例</th></tr></thead><tbody><tr><td>整数类型</td><td>TINYINT、SMALLINT、MEDIUMINT、<strong>INT(或INTEGER)</strong>、BIGINT</td></tr><tr><td>浮点类型</td><td>FLOAT、DOUBLE</td></tr><tr><td>定点数类型</td><td><strong>DECIMAL</strong></td></tr><tr><td>位类型</td><td>BIT</td></tr><tr><td>日期时间类型</td><td>YEAR、TIME、<strong>DATE</strong>、DATETIME、TIMESTAMP</td></tr><tr><td>文本字符串类型</td><td>CHAR、<strong>VARCHAR</strong>、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT</td></tr><tr><td>枚举类型</td><td>ENUM</td></tr><tr><td>集合类型</td><td>SET</td></tr><tr><td>二进制字符串类型</td><td>BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB</td></tr></tbody></table><p>其中，常用的几类类型介绍如下：</p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>INT</td><td>从-2^31到 2^31-1的整型数据。<strong><code>存储大小为 4个字节</code></strong></td></tr><tr><td>CHAR(size)</td><td>定长字符数据。若未指定，默认为1个字符，最大长度255</td></tr><tr><td>VARCHAR(size)</td><td>可变长字符数据，根据字符串实际长度保存，<strong><code>必须指定长度</code></strong></td></tr><tr><td>FLOAT(M,D)</td><td>单精度，占用4个字节，M=整数位+小数位，D=小数位。 D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认M+D&lt;=6</td></tr><tr><td>DOUBLE(M,D)</td><td>双精度，占用8个字节，D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认M+D&lt;=15</td></tr><tr><td>DECIMAL(M,D)</td><td>高精度小数，占用M+2个字节，D&lt;=M&lt;=65，0&lt;=D&lt;=30，最大取值范围与DOUBLE相同。</td></tr><tr><td>DATE</td><td>日期型数据，格式&#39;YYYY-MM-DD&#39;</td></tr><tr><td>BLOB</td><td>二进制形式的长文本数据，最大可达4G</td></tr><tr><td>TEXT</td><td>长文本数据，最大可达4G</td></tr></tbody></table><h2 id="_2-创建和管理数据库" tabindex="-1"><a class="header-anchor" href="#_2-创建和管理数据库" aria-hidden="true">#</a> 2. 创建和管理数据库</h2><h3 id="_2-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-创建数据库" aria-hidden="true">#</a> 2.1 创建数据库</h3><ul><li>方式1：创建数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式2：创建数据库并指定字符集</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> 字符集<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式3：判断数据库是否已经存在，不存在则创建数据库（<code>推荐</code>）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果MySQL中已经存在相关的数据库，则忽略创建语句，不再创建数据库。</p><blockquote><p>注意：DATABASE 不能改名。一些可视化工具可以改名，它是建新库，把所有表复制到新库，再删旧库完成的。</p></blockquote><h3 id="_2-2-使用数据库" tabindex="-1"><a class="header-anchor" href="#_2-2-使用数据库" aria-hidden="true">#</a> 2.2 使用数据库</h3><ul><li>查看当前所有的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span> <span class="token comment">#有一个S，代表多个数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看当前正在使用的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">#使用的一个 mysql 中的全局函数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看指定库下所有的表</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span> <span class="token keyword">FROM</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看数据库的创建信息</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span>
或者：
<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用/切换数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意：要操作表格和数据之前必须先说明是对哪个数据库进行操作，否则就要对所有对象加上“数据库名.”。</p></blockquote><h3 id="_2-3-修改数据库" tabindex="-1"><a class="header-anchor" href="#_2-3-修改数据库" aria-hidden="true">#</a> 2.3 修改数据库</h3><ul><li>更改数据库字符集</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> 字符集<span class="token punctuation">;</span>  <span class="token comment">#比如：gbk、utf8等</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-4-删除数据库" tabindex="-1"><a class="header-anchor" href="#_2-4-删除数据库" aria-hidden="true">#</a> 2.4 删除数据库</h3><ul><li>方式1：删除指定的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式2：删除指定的数据库（<code>推荐</code>）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-创建表" tabindex="-1"><a class="header-anchor" href="#_3-创建表" aria-hidden="true">#</a> 3. 创建表</h2><h3 id="_3-1-创建方式1" tabindex="-1"><a class="header-anchor" href="#_3-1-创建方式1" aria-hidden="true">#</a> 3.1 创建方式1</h3><ul><li>必须具备： <ul><li>CREATE TABLE权限</li><li>存储空间</li></ul></li><li><strong>语法格式：</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">(</span>
	字段<span class="token number">1</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	字段<span class="token number">2</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	字段<span class="token number">3</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	……
	<span class="token punctuation">[</span>表约束条件<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>加上了IF NOT EXISTS关键字，则表示：如果当前数据库中不存在要创建的数据表，则创建数据表；如果当前数据库中已经存在要创建的数据表，则忽略建表语句，不再创建数据表。</p><p>如果创建表时没有指明使用的字符集，则默认使用表所在的数据库的的字符集</p></blockquote><ul><li>必须指定： <ul><li>表名</li><li>列名(或字段名)，数据类型，<strong>长度</strong></li></ul></li><li>可选指定： <ul><li>约束条件</li><li>默认值</li></ul></li><li>创建表举例1：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>
  <span class="token comment">-- int类型</span>
  emp_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
  <span class="token comment">-- 最多保存20个中英文字符</span>
  emp_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">-- 总位数不超过15位</span>
  salary <span class="token keyword">DOUBLE</span><span class="token punctuation">,</span>
  <span class="token comment">-- 日期类型</span>
  birthday <span class="token keyword">DATE</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">DESC</span> emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://i0.hdslb.com/bfs/album/f00b624928efaf9f2cc0eb9d0f38428c07c1660f.png" alt="image-20221021203136254" style="zoom:150%;"><p>MySQL在执行建表语句时，将id字段的类型设置为int(11)，这里的11实际上是int类型指定的显示宽度，默认的显示宽度为11。也可以在创建数据表的时候指定数据的显示宽度。</p><ul><li>创建表举例2：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>
    <span class="token comment">-- int类型，自增</span>
	deptno <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
	dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	loc <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">-- 主键</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>deptno<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">DESCRIBE</span> dept<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/30f6e7b1119fcd3c0d30d51064930055b2869533.png" alt="image-20221021203344118" tabindex="0" loading="lazy"><figcaption>image-20221021203344118</figcaption></figure><blockquote><p>在MySQL 8.x版本中，不再推荐为INT类型指定显示长度，并在未来的版本中可能去掉这样的语法。</p></blockquote><h3 id="_3-2-创建方式2" tabindex="-1"><a class="header-anchor" href="#_3-2-创建方式2" aria-hidden="true">#</a> 3.2 创建方式2</h3><ul><li>使用 AS subquery 选项，<strong>将创建表和插入数据结合起来</strong></li></ul><figure><img src="https://i0.hdslb.com/bfs/album/04bd029c72c3ce75a476675ffea99a40abf2e3ec.png" alt="image-20221021203429040" tabindex="0" loading="lazy"><figcaption>image-20221021203429040</figcaption></figure><ul><li>指定的列和子查询中的列要一一对应</li><li>通过列名和默认值定义列</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp1 <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>  <span class="token comment">-- 创建emp1表，并把employees表中的数据全部复制给emp1表</span>
 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp2 <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">-- 创建的emp2是空表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept80
<span class="token keyword">AS</span> 
<span class="token keyword">SELECT</span>  employee_id emp_id<span class="token punctuation">,</span> last_name name<span class="token punctuation">,</span> salary<span class="token operator">*</span><span class="token number">12</span> ANNSAL<span class="token punctuation">,</span> hire_date   <span class="token comment">-- 别名充当新创建表的字段名</span>
<span class="token keyword">FROM</span>    employees
<span class="token keyword">WHERE</span>   department_id <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
 
 
<span class="token keyword">DESCRIBE</span> dept80<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/4e54f8224e3fd3f881179796500a6b6510303d1c.png" alt="image-20221021203444287" tabindex="0" loading="lazy"><figcaption>image-20221021203444287</figcaption></figure><h3 id="_3-3-查看数据表结构" tabindex="-1"><a class="header-anchor" href="#_3-3-查看数据表结构" aria-hidden="true">#</a> 3.3 查看数据表结构</h3><p>在MySQL中创建好数据表之后，可以查看数据表的结构。MySQL支持使用<code>DESCRIBE/DESC</code>语句查看数据表结构，也支持使用<code>SHOW CREATE TABLE</code>语句查看数据表结构。</p><p>语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查看创建数据表的结构</span>
<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名\\G  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用SHOW CREATE TABLE语句不仅可以查看表创建时的详细语句，还可以查看存储引擎和字符编码。</p><h2 id="_4-修改表" tabindex="-1"><a class="header-anchor" href="#_4-修改表" aria-hidden="true">#</a> 4. 修改表</h2><p>修改表指的是修改数据库中已经存在的数据表的结构。</p><p><strong>使用 ALTER TABLE 语句可以实现：</strong></p><ul><li>向已有的表中添加列</li><li>修改现有表中的列</li><li>删除现有表中的列</li><li>重命名现有表中的列</li></ul><h3 id="_4-1-追加一个列" tabindex="-1"><a class="header-anchor" href="#_4-1-追加一个列" aria-hidden="true">#</a> 4.1 追加一个列</h3><p>语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 【<span class="token keyword">COLUMN</span>】 字段名 字段类型 【<span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span> 字段名】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> dept80 
<span class="token keyword">ADD</span> job_id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/b45ac69ee2db302ea24561275379bdb1ee0aa907.png" alt="image-20221021203603250" tabindex="0" loading="lazy"><figcaption>image-20221021203603250</figcaption></figure><h3 id="_4-2-修改一个列" tabindex="-1"><a class="header-anchor" href="#_4-2-修改一个列" aria-hidden="true">#</a> 4.2 修改一个列</h3><ul><li>可以修改列的数据类型，长度、默认值和位置</li><li>修改字段数据类型、长度、默认值、位置的语法格式如下：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 【<span class="token keyword">COLUMN</span>】 字段名<span class="token number">1</span> 字段类型 【<span class="token keyword">DEFAULT</span> 默认值】【<span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span> 字段名<span class="token number">2</span>】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>举例：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span>	dept80
<span class="token keyword">MODIFY</span> last_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span>	dept80
<span class="token keyword">MODIFY</span> salary <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">1000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>对默认值的修改只影响今后对表的修改</li><li>此外，还可以通过此种方式修改列的约束。这里暂先不讲。</li></ul><h3 id="_4-3-重命名一个列" tabindex="-1"><a class="header-anchor" href="#_4-3-重命名一个列" aria-hidden="true">#</a> 4.3 重命名一个列</h3><p>使用 CHANGE old_column new_column dataType子句重命名列。语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 【<span class="token keyword">column</span>】 列名 新列名 新数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span>  dept80
CHANGE department_name dept_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-删除一个列" tabindex="-1"><a class="header-anchor" href="#_4-4-删除一个列" aria-hidden="true">#</a> 4.4 删除一个列</h3><p>删除表中某个字段的语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 【<span class="token keyword">COLUMN</span>】字段名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span>  dept80
<span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span>  job_id<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-重命名表" tabindex="-1"><a class="header-anchor" href="#_5-重命名表" aria-hidden="true">#</a> 5. 重命名表</h2><ul><li>方式一：使用RENAME</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> emp
<span class="token keyword">TO</span> myemp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方式二：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">table</span> dept
<span class="token keyword">RENAME</span> <span class="token punctuation">[</span><span class="token keyword">TO</span><span class="token punctuation">]</span> detail_dept<span class="token punctuation">;</span>  <span class="token comment">-- [TO]可以省略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>必须是对象的拥有者</li></ul><h2 id="_6-删除表" tabindex="-1"><a class="header-anchor" href="#_6-删除表" aria-hidden="true">#</a> 6. 删除表</h2><ul><li>在MySQL中，当一张数据表<code>没有与其他任何数据表形成关联关系</code>时，可以将当前数据表直接删除。</li><li>数据和结构都被删除</li><li>所有正在运行的相关事务被提交</li><li>所有相关索引被删除</li><li>语法格式：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 数据表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> 数据表<span class="token number">2</span><span class="token punctuation">,</span> …<span class="token punctuation">,</span> 数据表n<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>IF EXISTS</code>的含义为：如果当前数据库中存在相应的数据表，则删除数据表；如果当前数据库中不存在相应的数据表，则忽略删除语句，不再执行删除数据表的操作。</p><ul><li>举例：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> dept80<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>DROP TABLE 语句不能回滚</li></ul><h2 id="_7-清空表" tabindex="-1"><a class="header-anchor" href="#_7-清空表" aria-hidden="true">#</a> 7. 清空表</h2><ul><li>TRUNCATE TABLE语句： <ul><li>删除表中所有的数据</li><li>释放表的存储空间</li></ul></li><li>举例：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> detail_dept<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>TRUNCATE语句<strong>不能回滚</strong>，而使用 DELETE 语句删除数据，可以回滚</li><li>对比：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">;</span>
  
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span> 
<span class="token comment">#TRUNCATE TABLE emp2;</span>
  
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span>
  
<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>
  
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>阿里开发规范：</p><p>【参考】TRUNCATE TABLE 比 DELETE 速度快，且使用的系统资源和事务日志资源少，但 TRUNCATE 无事务且不触发 TRIGGER，有可能造成事故，故不建议在开发代码中使用此语句。</p><p>说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。</p></blockquote><h2 id="_8-dcl-中-commit-和-rollback" tabindex="-1"><a class="header-anchor" href="#_8-dcl-中-commit-和-rollback" aria-hidden="true">#</a> 8.DCL 中 COMMIT 和 ROLLBACK</h2><p>COMMIT:提交数据。一旦执行COMMIT，则数据就被永久的保存在了数据库中，意味着数据不可以回滚。</p><p>ROLLBACK:回滚数据。一旦执行ROLLBACK,则可以实现数据的回滚。回滚到最近的一次COMMIT之后。</p><h2 id="_9-对比-truncate-table-和-delete-from" tabindex="-1"><a class="header-anchor" href="#_9-对比-truncate-table-和-delete-from" aria-hidden="true">#</a> 9.对比 TRUNCATE TABLE 和 DELETE FROM</h2><p>相同点：都可以实现对表中所有数据的删除，同时保留表结构。</p><p>不同点：</p><p>TRUNCATE TABLE：一旦执行此操作，表数据全部清除。同时，<strong>数据是不可以回滚的</strong>。</p><p>DELETE FROM：一旦执行此操作，表数据可以全部清除（不带WHERE）。<strong>同时，数据是可以实现回滚的</strong>。</p><p>DDL 和 DML 的说明</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>① DDL<span class="token punctuation">(</span>这里不单单指<span class="token keyword">truncate</span>，而是指全部的DDL指令<span class="token punctuation">)</span>的操作一旦执行，就不可回滚。即使设置指令<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token boolean">FALSE</span>，该指令也对DDL操作失效。<span class="token punctuation">(</span>因为在执行完DDL操作之后，一定会执行一次<span class="token keyword">COMMIT</span>。而此<span class="token keyword">COMMIT</span>操作不受<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token boolean">FALSE</span>影响的。<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>② DML的操作默认情况，一旦执行，也是不可回滚的。但是，如果在执行DML之前，执行了 <code>SET autocommit = FALSE</code>，则执行的DML操作就可以实现回滚。</p><h2 id="_10-内容拓展" tabindex="-1"><a class="header-anchor" href="#_10-内容拓展" aria-hidden="true">#</a> 10. 内容拓展</h2><h3 id="拓展1-阿里巴巴《java开发手册》之mysql字段命名" tabindex="-1"><a class="header-anchor" href="#拓展1-阿里巴巴《java开发手册》之mysql字段命名" aria-hidden="true">#</a> 拓展1：阿里巴巴《Java开发手册》之MySQL字段命名</h3><ul><li>【<code>强制</code>】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。 <ul><li>正例：aliyun_admin，rdc_config，level3_name</li><li>反例：AliyunAdmin，rdcConfig，level_3_name</li></ul></li><li>【<code>强制</code>】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。</li><li>【<code>强制</code>】表必备三字段：id, gmt_create, gmt_modified。 <ul><li>说明：其中 id 必为主键，类型为BIGINT UNSIGNED、单表时自增、步长为 1。gmt_create, gmt_modified 的类型均为 DATETIME 类型，前者现在时表示主动式创建，后者过去分词表示被动式更新</li></ul></li><li>【<code>推荐</code>】表的命名最好是遵循 “业务名称_表的作用”。 <ul><li>正例：alipay_task 、 force_project、 trade_config</li></ul></li><li>【<code>推荐</code>】库名与应用名称尽量一致。</li><li>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。 <ul><li>正例：无符号值可以避免误存负数，且扩大了表示范围。</li></ul></li></ul><figure><img src="https://i0.hdslb.com/bfs/album/d8e6259b44e122b722b87d6961e21c0fb038fb4f.png" alt="image-20221021205011579" tabindex="0" loading="lazy"><figcaption>image-20221021205011579</figcaption></figure><h3 id="拓展2-如何理解清空表、删除表等操作需谨慎" tabindex="-1"><a class="header-anchor" href="#拓展2-如何理解清空表、删除表等操作需谨慎" aria-hidden="true">#</a> 拓展2：如何理解清空表、删除表等操作需谨慎？！</h3><p><code>表删除</code>操作将把表的定义和表中的数据一起删除，并且MySQL在执行删除操作时，不会有任何的确认信息提示，因此执行删除操时应当慎重。在删除表前，最好对表中的数据进行<code>备份</code>，这样当操作失误时可以对数据进行恢复，以免造成无法挽回的后果。</p><p>同样的，在使用 <code>ALTER TABLE</code> 进行表的基本修改操作时，在执行操作过程之前，也应该确保对数据进行完整的<code>备份</code>，因为数据库的改变是<code>无法撤销</code>的，如果添加了一个不需要的字段，可以将其删除；相同的，如果删除了一个需要的列，该列下面的所有数据都将会丢失。</p><h3 id="拓展3-mysql8新特性—ddl的原子化" tabindex="-1"><a class="header-anchor" href="#拓展3-mysql8新特性—ddl的原子化" aria-hidden="true">#</a> 拓展3：MySQL8新特性—DDL的原子化</h3><p>在MySQL 8.0版本中，InnoDB表的DDL支持事务完整性，即<code>DDL操作要么成功要么回滚</code>。DDL操作回滚日志写入到data dictionary数据字典表mysql.innodb_ddl_log（该表是隐藏的表，通过show tables无法看到）中，用于回滚操作。通过设置参数，可将DDL操作日志打印输出到MySQL错误日志中。</p><p>分别在MySQL 5.7版本和MySQL 8.0版本中创建数据库和数据表，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mytest<span class="token punctuation">;</span>
 
<span class="token keyword">USE</span> mytest<span class="token punctuation">;</span>
 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> book1<span class="token punctuation">(</span>
book_id <span class="token keyword">INT</span> <span class="token punctuation">,</span>
book_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（1）在MySQL 5.7版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> book1<span class="token punctuation">,</span>book2<span class="token punctuation">;</span>
ERROR <span class="token number">1051</span> <span class="token punctuation">(</span><span class="token number">42</span>S02<span class="token punctuation">)</span>: Unknown <span class="token keyword">table</span> <span class="token string">&#39;mytest.book2&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再次查询数据库中的数据表名称，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
Empty <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>从结果可以看出，虽然删除操作时报错了，但是仍然删除了数据表book1。</p><p>（2）在MySQL 8.0版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> book1<span class="token punctuation">,</span>book2<span class="token punctuation">;</span>
ERROR <span class="token number">1051</span> <span class="token punctuation">(</span><span class="token number">42</span>S02<span class="token punctuation">)</span>: Unknown <span class="token keyword">table</span> <span class="token string">&#39;mytest.book2&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再次查询数据库中的数据表名称，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span> Tables_in_mytest <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span> book1            <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从结果可以看出，数据表book1并没有被删除。</p><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h2><p>1.创建数据库test01_office,指明字符集为utf8。并在此数据库下执行下述操作</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> test01_office <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.创建表dept01</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
字段 类型 
id INT(7) 
NAME VARCHAR(25) 
*/</span>
 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept01<span class="token punctuation">(</span> id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.将表departments中的数据插入新表dept02中</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept02 ASSELECT <span class="token operator">*</span> <span class="token keyword">FROM</span> atguigudb<span class="token punctuation">.</span>departments<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.创建表emp01</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
字段 类型 
id INT(7)
first_name VARCHAR (25) 
last_name VARCHAR(25) 
dept_id INT(7) 
*/</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp01<span class="token punctuation">(</span> 
    id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    first_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    last_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    dept_id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> 
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.将列last_name的长度增加到50</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp01 <span class="token keyword">MODIFY</span> last_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6.根据表employees创建emp02</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp02 
<span class="token keyword">AS</span> 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> atguigudb<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>employees<span class="token punctuation">\`</span></span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.删除表emp01</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp01<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>8.将表emp02重命名为emp01</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- ALTER TABLE emp02 RENAME TO emp01; </span>
<span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> emp02 <span class="token keyword">TO</span> emp01<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>9.在表dept02和emp01中添加新列test_column，并检查所作的操作</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp01 <span class="token keyword">ADD</span> test_column <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">DESC</span> emp01<span class="token punctuation">;</span> 
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> dept02 <span class="token keyword">ADD</span> test_column <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">DESC</span> dept02<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>10.直接删除表emp01中的列 department_id</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp01 <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,167),t=[p];function i(d,o){return n(),a("div",null,t)}const r=s(l,[["render",i],["__file","10.html.vue"]]);export{r as default};
