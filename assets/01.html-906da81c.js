import{ab as e,G as o,H as l,E as n,S as a,N as t,ac as p,W as c}from"./framework-09305b5d.js";const i={},u=p('<h1 id="_01-【vue简介-初识vue-模板语法和数据绑定】" tabindex="-1"><a class="header-anchor" href="#_01-【vue简介-初识vue-模板语法和数据绑定】" aria-hidden="true">#</a> 01 【Vue简介 初识Vue 模板语法和数据绑定】</h1><h2 id="_1-vue简介" tabindex="-1"><a class="header-anchor" href="#_1-vue简介" aria-hidden="true">#</a> 1.Vue简介</h2><h3 id="_1-1官网" tabindex="-1"><a class="header-anchor" href="#_1-1官网" aria-hidden="true">#</a> 1.1官网</h3>',3),r={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},d=p('<h3 id="_1-2介绍与描述" tabindex="-1"><a class="header-anchor" href="#_1-2介绍与描述" aria-hidden="true">#</a> 1.2介绍与描述</h3><ul><li>Vue 是一套用来动态构建用户界面的渐进式JavaScript框架 ○构建用户界面：把数据通过某种办法变成用户界面 ○渐进式：Vue可以自底向上逐层的应用，简单应用只需要一个轻量小巧的核心库，复杂应用可以引入各式各样的Vue插件</li><li>作者：尤雨溪</li></ul><figure><img src="https://i0.hdslb.com/bfs/album/a480928cc5819344850462e511b11481f773c4e3.png" alt="image-20220627111824089" tabindex="0" loading="lazy"><figcaption>image-20220627111824089</figcaption></figure><h3 id="_1-3-vue-的特点" tabindex="-1"><a class="header-anchor" href="#_1-3-vue-的特点" aria-hidden="true">#</a> 1.3. Vue 的特点</h3><p>1 遵循MVVM模式 2 编码简洁，体积小，运行效率高，适合移动/PC端开发 3 它本身只关注 UI，可以引入其它第三方库开发项目 4采用<code>组件化</code>模式，提高代码复用率、且让代码更好维护</p><figure><img src="https://i0.hdslb.com/bfs/album/911d5825fb775e5d72a180e14cf91cd4150b7d6f.png" alt="image-20220627112112058" tabindex="0" loading="lazy"><figcaption>image-20220627112112058</figcaption></figure><p>5 <code>声明式</code>编码，让编码人员无需直接操作DOM，提高开发效率</p><figure><img src="https://i0.hdslb.com/bfs/album/84f52ac120ac699f8e9e2d5b777359e90545dd3a.png" alt="image-20220627112141707" tabindex="0" loading="lazy"><figcaption>image-20220627112141707</figcaption></figure><p>使用<code>虚拟DOM</code> 和 <code>Diff算法</code>，尽量复用DOM节点</p><figure><img src="https://i0.hdslb.com/bfs/album/a28b2b5307e90c92fd36bbad151869b7dbc481ce.png" alt="image-20220627112235934" tabindex="0" loading="lazy"><figcaption>image-20220627112235934</figcaption></figure><h3 id="_1-4与其他-js-框架的关联" tabindex="-1"><a class="header-anchor" href="#_1-4与其他-js-框架的关联" aria-hidden="true">#</a> 1.4与其他 JS 框架的关联</h3><ul><li>借鉴 angular 的 <strong>模板</strong> 和 <strong>数据绑定</strong> 技术</li><li>借鉴 react 的 <strong>组件化</strong> 和 <strong>虚拟DOM</strong> 技术</li></ul><h3 id="_1-5vue-周边库" tabindex="-1"><a class="header-anchor" href="#_1-5vue-周边库" aria-hidden="true">#</a> 1.5Vue 周边库</h3><ul><li>vue-cli：vue 脚手架</li><li>vue-router：路由</li><li>vuex：状态管理（它是 vue 的插件但是没有用 vue-xxx 的命名规则）</li><li>vue-lazyload：图片懒加载</li><li>vue-scroller：页面滑动相关</li><li>mint-ui：基于 vue 的 UI 组件库（移动端）</li><li>element-ui：基于 vue 的 UI 组件库（PC 端）</li></ul><h2 id="_2-初识vue" tabindex="-1"><a class="header-anchor" href="#_2-初识vue" aria-hidden="true">#</a> 2.初识Vue</h2><p><strong>前置工作</strong></p>',16),v={href:"https://cn.vuejs.org/v2/guide/installation.html#Vue-Devtools",target:"_blank",rel:"noopener noreferrer"},g=n("li",null,"标签引入Vue包",-1),m=n("li",null,[a("（可选）阻止vue在启动时生成生产提示"),n("code",null,"Vue.config.productionTip = false")],-1),b=n("li",null,"favicon 需要将页签图标放在项目根路径，重新打开就有了（shfit+F5 强制刷新）",-1),h=p(`<p><strong>初识Vue</strong></p><ol><li>想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象</li><li>root 容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法</li><li>root 容器里的代码被称为Vue模板</li><li>Vue 实例与容器是<code>一一对应</code>的</li><li>真实开发中只有一个Vue实例，并且会配合着组件一起使用</li><li><code>{{xxx}}</code>中的 xxx 要写<code> js 表达式</code>，且 xxx 可以自动读取到data中的所有属性 <strong>注意区分</strong>：js 表达式 和 js代码（语句） <ol><li>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方 a a+b demo(1) x === y ? &#39;a&#39; : &#39;b&#39;</li><li>js代码（语句） if(){} for(){}</li></ol></li><li>一旦data中的数据发生变化，那么模板中用到该数据的地方也会自动更新(Vue实现的响应式)</li></ol><blockquote><p>初始示例代码</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token comment">&lt;!-- 引入Vue --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 准备好一个容器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello，{{name.toUpperCase()}}，{{address}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">//阻止 vue 在启动时生成生产提示。</span>

	<span class="token comment">//创建Vue实例</span>
	<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&#39;#demo&#39;</span><span class="token punctuation">,</span> <span class="token comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span>
		<span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象。</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;hello,world&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">address</span><span class="token operator">:</span><span class="token string">&#39;北京&#39;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-模板语法和数据绑定" tabindex="-1"><a class="header-anchor" href="#_3-模板语法和数据绑定" aria-hidden="true">#</a> 3.模板语法和数据绑定</h2><h3 id="_3-1模板语法" tabindex="-1"><a class="header-anchor" href="#_3-1模板语法" aria-hidden="true">#</a> 3.1模板语法</h3><p><code>Vue</code>模板语法有2大类:</p><ul><li><p><strong>插值语法：</strong></p><p>功能：用于解析标签体内容</p><p>写法：<code>{{xxx}}</code>，xxx是<strong>js表达式</strong>，且可以直接读取到data中的所有属性</p></li><li><p><strong>指令语法:</strong></p><p>功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）</p><p>举例：<code>v-bind:href=&quot;xxx&quot;</code> 或 简写为 <code>:href=&quot;xxx&quot;</code>，xxx同样要写<code>js表达式</code>，且可以直接读取到data中的所有属性</p><p>备注：Vue中有很多的指令，且形式都是 <strong>v-xxx</strong>，此处只是拿v-bind举例</p></li></ul><blockquote><p>代码</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>插值语法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>你好，{{ name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>指令语法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tencent.url.toUpperCase()<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我去看{{ tencent.name }}1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tencent.url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我去看{{ tencent.name }}2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">tencent</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;开端&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://v.qq.com/x/cover/mzc00200mp8vo9b/n0041aa087e.html&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/39acee45f25c6e31959ae833c1f9d55cb08bc896.png" alt="image-20220627113847858" tabindex="0" loading="lazy"><figcaption>image-20220627113847858</figcaption></figure><h3 id="_3-2数据绑定" tabindex="-1"><a class="header-anchor" href="#_3-2数据绑定" aria-hidden="true">#</a> 3.2数据绑定</h3><p>Vue中有2种数据绑定的方式：</p><ul><li><p>单向绑定<code>(v-bind)</code>：数据只能从data流向页面</p></li><li><p>双向绑定<code>(v-model)</code>：数据不仅能从data流向页面，还可以从页面流向data</p><blockquote><p>tips:</p><p>1.双向绑定一般都应用在<strong>表单类元素</strong>上（如：<code>input</code>、<code>select</code>等）</p><p>2.<strong>v-model:value</strong> 可以简写为<code> v-model</code>，因为v-model默认收集的就是value值</p></blockquote></li></ul><blockquote><p>代码</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!-- 普通写法 单向数据绑定 --&gt;</span>
    单向数据绑定：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    双向数据绑定：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    
    <span class="token comment">&lt;!-- 简写 v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值--&gt;</span>
    单向数据绑定：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    双向数据绑定：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    
    <span class="token comment">&lt;!-- 如下代码是错误的，因为 v-model 只能应用在表单类元素（输入类元素）上 --&gt;</span>
	<span class="token comment">&lt;!-- &lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function q(f,x){const s=c("ExternalLinkIcon");return o(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("英文官网"),t(s)])]),n("li",null,[n("a",k,[a("中文官网"),t(s)])])]),d,n("ol",null,[n("li",null,[a("给浏览器安装 "),n("a",v,[a("Vue Devtools"),t(s)]),a(" 插件")]),g,m,b]),h])}const y=e(i,[["render",q],["__file","01.html.vue"]]);export{y as default};
