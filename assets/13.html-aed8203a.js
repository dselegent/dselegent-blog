const e=JSON.parse('{"key":"v-1adede76","path":"/front_end/front_end_base/javascript/13.html","title":"13 【语法之编程风格】","lang":"zh-CN","frontmatter":{"description":"13 【语法之编程风格】 1.概述 “编程风格”（programming style）指的是编写代码的样式规则。不同的程序员，往往有不同的编程风格。 有人说，编译器的规范叫做“语法规则”（grammar），这是程序员必须遵守的；而编译器忽略的部分，就叫“编程风格”（programming style），这是程序员可以自由选择的。这种说法不完全正确，程序员固然可以自由选择编程风格，但是好的编程风格有助于写出质量更高、错误更少、更易于维护的程序。 所以，编程风格的选择不应该基于个人爱好、熟悉程度、打字量等因素，而要考虑如何尽量使代码清晰易读、减少出错。你选择的，不是你喜欢的风格，而是一种能够清晰表达你的意图的风格。这一点，对于 JavaScript 这种语法自由度很高的语言尤其重要。","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.icu/front_end/front_end_base/javascript/13.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"13 【语法之编程风格】"}],["meta",{"property":"og:description","content":"13 【语法之编程风格】 1.概述 “编程风格”（programming style）指的是编写代码的样式规则。不同的程序员，往往有不同的编程风格。 有人说，编译器的规范叫做“语法规则”（grammar），这是程序员必须遵守的；而编译器忽略的部分，就叫“编程风格”（programming style），这是程序员可以自由选择的。这种说法不完全正确，程序员固然可以自由选择编程风格，但是好的编程风格有助于写出质量更高、错误更少、更易于维护的程序。 所以，编程风格的选择不应该基于个人爱好、熟悉程度、打字量等因素，而要考虑如何尽量使代码清晰易读、减少出错。你选择的，不是你喜欢的风格，而是一种能够清晰表达你的意图的风格。这一点，对于 JavaScript 这种语法自由度很高的语言尤其重要。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"13 【语法之编程风格】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2.缩进","slug":"_2-缩进","link":"#_2-缩进","children":[]},{"level":2,"title":"3.区块","slug":"_3-区块","link":"#_3-区块","children":[]},{"level":2,"title":"4.圆括号","slug":"_4-圆括号","link":"#_4-圆括号","children":[]},{"level":2,"title":"5 行尾的分号","slug":"_5-行尾的分号","link":"#_5-行尾的分号","children":[{"level":3,"title":"5.1 不使用分号的情况","slug":"_5-1-不使用分号的情况","link":"#_5-1-不使用分号的情况","children":[]},{"level":3,"title":"5.2 分号的自动添加","slug":"_5-2-分号的自动添加","link":"#_5-2-分号的自动添加","children":[]}]},{"level":2,"title":"6.全局变量","slug":"_6-全局变量","link":"#_6-全局变量","children":[]},{"level":2,"title":"7.变量声明","slug":"_7-变量声明","link":"#_7-变量声明","children":[]},{"level":2,"title":"8.相等和严格相等","slug":"_8-相等和严格相等","link":"#_8-相等和严格相等","children":[]},{"level":2,"title":"9.语句的合并","slug":"_9-语句的合并","link":"#_9-语句的合并","children":[]},{"level":2,"title":"10.自增和自减运算符","slug":"_10-自增和自减运算符","link":"#_10-自增和自减运算符","children":[]},{"level":2,"title":"11.switch...case 结构","slug":"_11-switch-case-结构","link":"#_11-switch-case-结构","children":[]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":9.35,"words":2806},"filePathRelative":"front_end/front_end_base/javascript/13.md","localizedDate":"2023年1月30日","excerpt":"<h1> 13 【语法之编程风格】</h1>\\n<h2> 1.概述</h2>\\n<p>“编程风格”（programming style）指的是编写代码的样式规则。不同的程序员，往往有不同的编程风格。</p>\\n<p>有人说，编译器的规范叫做“语法规则”（grammar），这是程序员必须遵守的；而编译器忽略的部分，就叫“编程风格”（programming style），这是程序员可以自由选择的。这种说法不完全正确，程序员固然可以自由选择编程风格，但是好的编程风格有助于写出质量更高、错误更少、更易于维护的程序。</p>\\n<p>所以，编程风格的选择不应该基于个人爱好、熟悉程度、打字量等因素，而要考虑如何尽量使代码清晰易读、减少出错。你选择的，不是你喜欢的风格，而是一种能够清晰表达你的意图的风格。这一点，对于 JavaScript 这种语法自由度很高的语言尤其重要。</p>","autoDesc":true}');export{e as data};
