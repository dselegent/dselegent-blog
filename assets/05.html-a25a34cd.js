const e=JSON.parse(`{"key":"v-2d4020d3","path":"/front_end/js_advanced/es6/05.html","title":"05【数组的扩展】","lang":"zh-CN","frontmatter":{"description":"05【数组的扩展】 1.扩展运算符 1.1 含义 扩展运算符（spread）是三个点（...）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 console.log(...[1, 2, 3]) // 1 2 3 console.log(1, ...[2, 3, 4], 5) // 1 2 3 4 5 [...document.querySelectorAll('div')] // [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]","head":[["meta",{"property":"og:url","content":"https://blog.dselegent.cf/front_end/js_advanced/es6/05.html"}],["meta",{"property":"og:site_name","content":"dselegent-blog"}],["meta",{"property":"og:title","content":"05【数组的扩展】"}],["meta",{"property":"og:description","content":"05【数组的扩展】 1.扩展运算符 1.1 含义 扩展运算符（spread）是三个点（...）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 console.log(...[1, 2, 3]) // 1 2 3 console.log(1, ...[2, 3, 4], 5) // 1 2 3 4 5 [...document.querySelectorAll('div')] // [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-30T06:57:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-30T06:57:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05【数组的扩展】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-30T06:57:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.扩展运算符","slug":"_1-扩展运算符","link":"#_1-扩展运算符","children":[{"level":3,"title":"1.1 含义","slug":"_1-1-含义","link":"#_1-1-含义","children":[]},{"level":3,"title":"1.2 替代函数的 apply() 方法","slug":"_1-2-替代函数的-apply-方法","link":"#_1-2-替代函数的-apply-方法","children":[]},{"level":3,"title":"1.3 扩展运算符的应用","slug":"_1-3-扩展运算符的应用","link":"#_1-3-扩展运算符的应用","children":[]}]},{"level":2,"title":"2.Array.from()","slug":"_2-array-from","link":"#_2-array-from","children":[{"level":3,"title":"2.1 前言","slug":"_2-1-前言","link":"#_2-1-前言","children":[]},{"level":3,"title":"2.2 方法详情","slug":"_2-2-方法详情","link":"#_2-2-方法详情","children":[]},{"level":3,"title":"2.2 类数组转化","slug":"_2-2-类数组转化","link":"#_2-2-类数组转化","children":[]},{"level":3,"title":"2.3 使用案例","slug":"_2-3-使用案例","link":"#_2-3-使用案例","children":[]},{"level":3,"title":"2.4 小结","slug":"_2-4-小结","link":"#_2-4-小结","children":[]}]},{"level":2,"title":"3.Array.of()","slug":"_3-array-of","link":"#_3-array-of","children":[]},{"level":2,"title":"4.find()，findIndex(),findLast()，findLastIndex()","slug":"_4-find-findindex-findlast-findlastindex","link":"#_4-find-findindex-findlast-findlastindex","children":[]},{"level":2,"title":"5.filter()","slug":"_5-filter","link":"#_5-filter","children":[]},{"level":2,"title":"6.map()","slug":"_6-map","link":"#_6-map","children":[]},{"level":2,"title":"7.reduce()","slug":"_7-reduce","link":"#_7-reduce","children":[]},{"level":2,"title":"8.some()，every()","slug":"_8-some-every","link":"#_8-some-every","children":[]},{"level":2,"title":"9.fill()","slug":"_9-fill","link":"#_9-fill","children":[]},{"level":2,"title":"10.at()","slug":"_10-at","link":"#_10-at","children":[]},{"level":2,"title":"11.entries()，keys() 和 values()","slug":"_11-entries-keys-和-values","link":"#_11-entries-keys-和-values","children":[]},{"level":2,"title":"12.includes()","slug":"_12-includes","link":"#_12-includes","children":[]},{"level":2,"title":"13.toReversed()，toSorted()，toSpliced()，with()","slug":"_13-toreversed-tosorted-tospliced-with","link":"#_13-toreversed-tosorted-tospliced-with","children":[]},{"level":2,"title":"14.isArray()","slug":"_14-isarray","link":"#_14-isarray","children":[{"level":3,"title":"14.1 前言","slug":"_14-1-前言","link":"#_14-1-前言","children":[]},{"level":3,"title":"14.2 方法详情","slug":"_14-2-方法详情","link":"#_14-2-方法详情","children":[]},{"level":3,"title":"14.3 ES5 中判断数组的方法","slug":"_14-3-es5-中判断数组的方法","link":"#_14-3-es5-中判断数组的方法","children":[]},{"level":3,"title":"14.4 Array.isArray () 的使用","slug":"_14-4-array-isarray-的使用","link":"#_14-4-array-isarray-的使用","children":[]},{"level":3,"title":"14.5 自定义 isArray","slug":"_14-5-自定义-isarray","link":"#_14-5-自定义-isarray","children":[]},{"level":3,"title":"14.6 小结","slug":"_14-6-小结","link":"#_14-6-小结","children":[]}]}],"git":{"createdTime":1675061856000,"updatedTime":1675061856000,"contributors":[{"name":"dselegent","email":"1799661558@qq.com","commits":1}]},"readingTime":{"minutes":25.3,"words":7591},"filePathRelative":"front_end/js_advanced/es6/05.md","localizedDate":"2023年1月30日","excerpt":"<h1> 05【数组的扩展】</h1>\\n<h2> 1.扩展运算符</h2>\\n<h3> 1.1 含义</h3>\\n<p>扩展运算符（spread）是三个点（<code>...</code>）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 1 2 3</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 1 2 3 4 5</span>\\n\\n<span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span>document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelectorAll</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'div'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token comment\\">// [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
